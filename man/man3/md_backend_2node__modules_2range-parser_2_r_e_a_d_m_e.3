.TH "md_backend_2node__modules_2range-parser_2_r_e_a_d_m_e" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_backend_2node__modules_2range-parser_2_r_e_a_d_m_e \- range-parser 
.PP
 \fR\fP \fR\fP \fR\fP \fR\fP \fR\fP
.PP
Range header field parser\&.
.SH "Installation"
.PP
This is a \fRNode\&.js\fP module available through the \fRnpm registry\fP\&. Installation is done using the \fR\fRnpm install\fP command\fP:
.PP
.PP
.nf
$ npm install range\-parser
.fi
.PP
.SH "API"
.PP
.PP
.nf
var parseRange = require('range\-parser')
.fi
.PP
.SS "parseRange(size, header, options)"
Parse the given \fRheader\fP string where \fRsize\fP is the maximum size of the resource\&. An array of ranges will be returned or negative numbers indicating an error parsing\&.
.PP
.IP "\(bu" 2
\fR-2\fP signals a malformed header string
.IP "\(bu" 2
\fR-1\fP signals an unsatisfiable range
.PP
.PP
.PP
.nf
// parse header from request
var range = parseRange(size, req\&.headers\&.range)

// the type of the range
if (range\&.type === 'bytes') {
  // the ranges
  range\&.forEach(function (r) {
    // do something with r\&.start and r\&.end
  })
}
.fi
.PP
.SS "Options"
These properties are accepted in the options object\&.
.SS "combine"
Specifies if overlapping & adjacent ranges should be combined, defaults to \fRfalse\fP\&. When \fRtrue\fP, ranges will be combined and returned as if they were specified that way in the header\&.
.PP
.PP
.nf
parseRange(100, 'bytes=50\-55,0\-10,5\-10,56\-60', { combine: true })
// => [
//      { start: 0,  end: 10 },
//      { start: 50, end: 60 }
//    ]
.fi
.PP
.SH "License"
.PP
[MIT](LICENSE) 
