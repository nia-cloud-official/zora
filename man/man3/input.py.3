.TH "backend/node_modules/node-gyp/gyp/pylib/gyp/input.py" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
backend/node_modules/node-gyp/gyp/pylib/gyp/input.py
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBgyp\&.input\&.ParallelProcessingError\fP"
.br
.ti -1c
.RI "class \fBgyp\&.input\&.ParallelState\fP"
.br
.ti -1c
.RI "class \fBgyp\&.input\&.DependencyGraphNode\fP"
.br
.ti -1c
.RI "class \fBgyp\&.input\&.DependencyGraphNode\&.CircularException\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBgyp\fP"
.br
.ti -1c
.RI "namespace \fBgyp\&.input\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBgyp\&.input\&.IsPathSection\fP (section)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.GetIncludedBuildFiles\fP (build_file_path, aux_data, included=None)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.CheckedEval\fP (file_contents)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.CheckNode\fP (node, keypath)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.LoadOneBuildFile\fP (build_file_path, data, aux_data, includes, is_target, check)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.LoadBuildFileIncludesIntoDict\fP (subdict, subdict_path, data, aux_data, includes, check)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.LoadBuildFileIncludesIntoList\fP (sublist, sublist_path, data, aux_data, check)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.ProcessToolsetsInDict\fP (data)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.LoadTargetBuildFile\fP (build_file_path, data, aux_data, variables, includes, depth, check, load_dependencies)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.CallLoadTargetBuildFile\fP (global_flags, build_file_path, variables, includes, depth, check, generator_input_info)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.LoadTargetBuildFilesParallel\fP (build_files, data, variables, includes, depth, check, generator_input_info)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.FindEnclosingBracketGroup\fP (input_str)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.IsStrCanonicalInt\fP (string)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.FixupPlatformCommand\fP (cmd)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.ExpandVariables\fP (input, phase, variables, build_file)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.EvalCondition\fP (condition, conditions_key, phase, variables, build_file)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.EvalSingleCondition\fP (cond_expr, true_dict, false_dict, phase, variables, build_file)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.ProcessConditionsInDict\fP (the_dict, phase, variables, build_file)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.LoadAutomaticVariablesFromDict\fP (variables, the_dict)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.LoadVariablesFromVariablesDict\fP (variables, the_dict, the_dict_key)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.ProcessVariablesAndConditionsInDict\fP (the_dict, phase, variables_in, build_file, the_dict_key=None)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.ProcessVariablesAndConditionsInList\fP (the_list, phase, variables, build_file)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.BuildTargetsDict\fP (data)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.QualifyDependencies\fP (targets)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.ExpandWildcardDependencies\fP (targets, data)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.Unify\fP (items)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.RemoveDuplicateDependencies\fP (targets)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.Filter\fP (items, item)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.RemoveSelfDependencies\fP (targets)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.RemoveLinkDependenciesFromNoneTargets\fP (targets)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.BuildDependencyList\fP (targets)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.VerifyNoGYPFileCircularDependencies\fP (targets)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.DoDependentSettings\fP (key, flat_list, targets, dependency_nodes)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.AdjustStaticLibraryDependencies\fP (flat_list, targets, dependency_nodes, sort_dependencies)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.MakePathRelative\fP (to_file, fro_file, item)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.MergeLists\fP (to, fro, to_file, fro_file, is_paths=False, append=True)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.MergeDicts\fP (to, fro, to_file, fro_file)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.MergeConfigWithInheritance\fP (new_configuration_dict, build_file, target_dict, configuration, visited)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.SetUpConfigurations\fP (target, target_dict)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.ProcessListFiltersInDict\fP (name, the_dict)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.ProcessListFiltersInList\fP (name, the_list)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.ValidateTargetType\fP (target, target_dict)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.ValidateRulesInTarget\fP (target, target_dict, extra_sources_for_rules)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.ValidateRunAsInTarget\fP (target, target_dict, build_file)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.ValidateActionsInTarget\fP (target, target_dict, build_file)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.TurnIntIntoStrInDict\fP (the_dict)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.TurnIntIntoStrInList\fP (the_list)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.PruneUnwantedTargets\fP (targets, flat_list, dependency_nodes, root_targets, data)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.VerifyNoCollidingTargets\fP (targets)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.SetGeneratorGlobals\fP (generator_input_info)"
.br
.ti -1c
.RI "\fBgyp\&.input\&.Load\fP (build_files, variables, includes, depth, generator_input_info, check, circular_check, parallel, root_targets)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "list \fBgyp\&.input\&.linkable_types\fP"
.br
.ti -1c
.RI "list \fBgyp\&.input\&.dependency_sections\fP = ['dependencies', 'export_dependent_settings']"
.br
.ti -1c
.RI "list \fBgyp\&.input\&.base_path_sections\fP"
.br
.ti -1c
.RI "\fBgyp\&.input\&.path_sections\fP = set()"
.br
.ti -1c
.RI "dict \fBgyp\&.input\&.per_process_data\fP = {}"
.br
.ti -1c
.RI "dict \fBgyp\&.input\&.per_process_aux_data\fP = {}"
.br
.ti -1c
.RI "list \fBgyp\&.input\&.base_non_configuration_keys\fP"
.br
.ti -1c
.RI "list \fBgyp\&.input\&.non_configuration_keys\fP = []"
.br
.ti -1c
.RI "list \fBgyp\&.input\&.invalid_configuration_keys\fP"
.br
.ti -1c
.RI "bool \fBgyp\&.input\&.multiple_toolsets\fP = False"
.br
.ti -1c
.RI "\fBgyp\&.input\&.generator_filelist_paths\fP = None"
.br
.ti -1c
.RI "\fBgyp\&.input\&.LBRACKETS\fP = set('{[(')"
.br
.ti -1c
.RI "dict \fBgyp\&.input\&.BRACKETS\fP = {'}': '{', ']': '[', ')': '('}"
.br
.ti -1c
.RI "\fBgyp\&.input\&.early_variable_re\fP"
.br
.ti -1c
.RI "\fBgyp\&.input\&.late_variable_re\fP"
.br
.ti -1c
.RI "\fBgyp\&.input\&.latelate_variable_re\fP"
.br
.ti -1c
.RI "dict \fBgyp\&.input\&.cached_command_results\fP = {}"
.br
.ti -1c
.RI "int \fBgyp\&.input\&.PHASE_EARLY\fP = 0"
.br
.ti -1c
.RI "int \fBgyp\&.input\&.PHASE_LATE\fP = 1"
.br
.ti -1c
.RI "int \fBgyp\&.input\&.PHASE_LATELATE\fP = 2"
.br
.ti -1c
.RI "dict \fBgyp\&.input\&.cached_conditions_asts\fP = {}"
.br
.ti -1c
.RI "\fBgyp\&.input\&.exception_re\fP = re\&.compile()"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
