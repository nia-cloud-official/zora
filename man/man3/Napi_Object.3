.TH "Napi::Object" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Napi::Object \- A JavaScript object value\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <napi\&.h>\fP
.PP
Inherits \fBNapi::TypeTaggable\fP\&.
.PP
Inherited by \fBNapi::Array\fP, \fBNapi::ArrayBuffer\fP, \fBNapi::DataView\fP, \fBNapi::Function\fP, \fBNapi::Promise\fP, and \fBNapi::TypedArray\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBPropertyLValue\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBObject\fP ()"
.br
.RI "Creates a new \fIempty\fP \fBObject\fP instance\&. "
.ti -1c
.RI "\fBObject\fP (napi_env env, napi_value value)"
.br
.RI "Wraps a Node-API value primitive\&. "
.ti -1c
.RI "\fBPropertyLValue\fP< std::string > \fBoperator[]\fP (const char *utf8name)"
.br
.RI "Gets or sets a named property\&. "
.ti -1c
.RI "\fBPropertyLValue\fP< std::string > \fBoperator[]\fP (const std::string &utf8name)"
.br
.RI "Gets or sets a named property\&. "
.ti -1c
.RI "\fBPropertyLValue\fP< uint32_t > \fBoperator[]\fP (uint32_t index)"
.br
.RI "Gets or sets an indexed property or array element\&. "
.ti -1c
.RI "\fBPropertyLValue\fP< \fBValue\fP > \fBoperator[]\fP (\fBValue\fP index) const"
.br
.RI "Gets or sets an indexed property or array element\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBoperator[]\fP (const char *utf8name) const"
.br
.RI "Gets a named property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBoperator[]\fP (const std::string &utf8name) const"
.br
.RI "Gets a named property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBoperator[]\fP (uint32_t index) const"
.br
.RI "Gets an indexed property or array element\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHas\fP (napi_value key) const"
.br
.RI "Checks whether a property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHas\fP (\fBValue\fP key) const"
.br
.RI "Checks whether a property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHas\fP (const char *utf8name) const"
.br
.RI "Checks whether a named property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHas\fP (const std::string &utf8name) const"
.br
.RI "Checks whether a named property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHasOwnProperty\fP (napi_value key) const"
.br
.RI "Checks whether a own property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHasOwnProperty\fP (\fBValue\fP key) const"
.br
.RI "Checks whether a own property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHasOwnProperty\fP (const char *utf8name) const"
.br
.RI "Checks whether a own property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHasOwnProperty\fP (const std::string &utf8name) const"
.br
.RI "Checks whether a own property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBGet\fP (napi_value key) const"
.br
.RI "Gets a property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBGet\fP (\fBValue\fP key) const"
.br
.RI "Gets a property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBGet\fP (const char *utf8name) const"
.br
.RI "Gets a named property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBGet\fP (const std::string &utf8name) const"
.br
.RI "Gets a named property\&. "
.ti -1c
.RI "template<typename ValueType > \fBMaybeOrValue\fP< bool > \fBSet\fP (napi_value key, const ValueType &value) const"
.br
.RI "Sets a property\&. "
.ti -1c
.RI "template<typename ValueType > \fBMaybeOrValue\fP< bool > \fBSet\fP (\fBValue\fP key, const ValueType &value) const"
.br
.RI "Sets a property\&. "
.ti -1c
.RI "template<typename ValueType > \fBMaybeOrValue\fP< bool > \fBSet\fP (const char *utf8name, const ValueType &value) const"
.br
.RI "Sets a named property\&. "
.ti -1c
.RI "template<typename ValueType > \fBMaybeOrValue\fP< bool > \fBSet\fP (const std::string &utf8name, const ValueType &value) const"
.br
.RI "Sets a named property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDelete\fP (napi_value key) const"
.br
.RI "Delete property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDelete\fP (\fBValue\fP key) const"
.br
.RI "Delete property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDelete\fP (const char *utf8name) const"
.br
.RI "Delete property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDelete\fP (const std::string &utf8name) const"
.br
.RI "Delete property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHas\fP (uint32_t index) const"
.br
.RI "Checks whether an indexed property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBGet\fP (uint32_t index) const"
.br
.RI "Gets an indexed property or array element\&. "
.ti -1c
.RI "template<typename ValueType > \fBMaybeOrValue\fP< bool > \fBSet\fP (uint32_t index, const ValueType &value) const"
.br
.RI "Sets an indexed property or array element\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDelete\fP (uint32_t index) const"
.br
.RI "Deletes an indexed property or array element\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBArray\fP > \fBGetPropertyNames\fP () const"
.br
.RI "Get all property names\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDefineProperty\fP (const \fBPropertyDescriptor\fP &property) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDefineProperties\fP (const std::initializer_list< \fBPropertyDescriptor\fP > &properties) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDefineProperties\fP (const std::vector< \fBPropertyDescriptor\fP > &properties) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBInstanceOf\fP (const \fBFunction\fP &constructor) const"
.br
.ti -1c
.RI "template<typename Finalizer , typename T > void \fBAddFinalizer\fP (Finalizer finalizeCallback, T *data) const"
.br
.ti -1c
.RI "template<typename Finalizer , typename T , typename Hint > void \fBAddFinalizer\fP (Finalizer finalizeCallback, T *data, Hint *finalizeHint) const"
.br
.in -1c

Public Member Functions inherited from \fBNapi::Value\fP
.in +1c
.ti -1c
.RI "\fBValue\fP ()"
.br
.RI "Creates a new \fIempty\fP \fBValue\fP instance\&. "
.ti -1c
.RI "\fBValue\fP (napi_env env, napi_value value)"
.br
.RI "Wraps a Node-API value primitive\&. "
.ti -1c
.RI "\fBoperator napi_value\fP () const"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBValue\fP &other) const"
.br
.RI "Tests if this value strictly equals another value\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBValue\fP &other) const"
.br
.RI "Tests if this value does not strictly equal another value\&. "
.ti -1c
.RI "bool \fBStrictEquals\fP (const \fBValue\fP &other) const"
.br
.RI "Tests if this value strictly equals another value\&. "
.ti -1c
.RI "\fBNapi::Env\fP \fBEnv\fP () const"
.br
.RI "Gets the environment the value is associated with\&. "
.ti -1c
.RI "bool \fBIsEmpty\fP () const"
.br
.ti -1c
.RI "napi_valuetype \fBType\fP () const"
.br
.RI "Gets the type of the value\&. "
.ti -1c
.RI "bool \fBIsUndefined\fP () const"
.br
.RI "Tests if a value is an undefined JavaScript value\&. "
.ti -1c
.RI "bool \fBIsNull\fP () const"
.br
.RI "Tests if a value is a null JavaScript value\&. "
.ti -1c
.RI "bool \fBIsBoolean\fP () const"
.br
.RI "Tests if a value is a JavaScript boolean\&. "
.ti -1c
.RI "bool \fBIsNumber\fP () const"
.br
.RI "Tests if a value is a JavaScript number\&. "
.ti -1c
.RI "bool \fBIsString\fP () const"
.br
.RI "Tests if a value is a JavaScript string\&. "
.ti -1c
.RI "bool \fBIsSymbol\fP () const"
.br
.RI "Tests if a value is a JavaScript symbol\&. "
.ti -1c
.RI "bool \fBIsArray\fP () const"
.br
.RI "Tests if a value is a JavaScript array\&. "
.ti -1c
.RI "bool \fBIsArrayBuffer\fP () const"
.br
.RI "Tests if a value is a JavaScript array buffer\&. "
.ti -1c
.RI "bool \fBIsTypedArray\fP () const"
.br
.RI "Tests if a value is a JavaScript typed array\&. "
.ti -1c
.RI "bool \fBIsObject\fP () const"
.br
.RI "Tests if a value is a JavaScript object\&. "
.ti -1c
.RI "bool \fBIsFunction\fP () const"
.br
.RI "Tests if a value is a JavaScript function\&. "
.ti -1c
.RI "bool \fBIsPromise\fP () const"
.br
.RI "Tests if a value is a JavaScript promise\&. "
.ti -1c
.RI "bool \fBIsDataView\fP () const"
.br
.RI "Tests if a value is a JavaScript data view\&. "
.ti -1c
.RI "bool \fBIsBuffer\fP () const"
.br
.RI "Tests if a value is a Node buffer\&. "
.ti -1c
.RI "bool \fBIsExternal\fP () const"
.br
.RI "Tests if a value is a pointer to external data\&. "
.ti -1c
.RI "template<typename T > T \fBAs\fP () const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBBoolean\fP > \fBToBoolean\fP () const"
.br
.RI "Coerces a value to a JavaScript boolean\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBNumber\fP > \fBToNumber\fP () const"
.br
.RI "Coerces a value to a JavaScript number\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBString\fP > \fBToString\fP () const"
.br
.RI "Coerces a value to a JavaScript string\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBObject\fP > \fBToObject\fP () const"
.br
.RI "Coerces a value to a JavaScript object\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBObject\fP \fBNew\fP (napi_env env)"
.br
.RI "Creates a new \fBObject\fP value\&. "
.ti -1c
.RI "static void \fBCheckCast\fP (napi_env env, napi_value value)"
.br
.in -1c

Static Public Member Functions inherited from \fBNapi::Value\fP
.in +1c
.ti -1c
.RI "template<typename T > static \fBValue\fP \fBFrom\fP (napi_env env, const T &value)"
.br
.in -1c
.SS "Additional Inherited Members"


Protected Member Functions inherited from \fBNapi::TypeTaggable\fP
.in +1c
.ti -1c
.RI "\fBTypeTaggable\fP ()"
.br
.ti -1c
.RI "\fBTypeTaggable\fP (napi_env env, napi_value value)"
.br
.in -1c

Protected Attributes inherited from \fBNapi::Value\fP
.in +1c
.ti -1c
.RI "napi_env \fB_env\fP"
.br
.RI "!cond INTERNAL "
.ti -1c
.RI "napi_value \fB_value\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
A JavaScript object value\&. 
.PP
Definition at line \fB750\fP of file \fBnapi\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Napi::Object::Object ()\fR [inline]\fP"

.PP
Creates a new \fIempty\fP \fBObject\fP instance\&. 
.PP
Definition at line \fB1410\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "Napi::Object::Object (napi_env env, napi_value value)\fR [inline]\fP"

.PP
Wraps a Node-API value primitive\&. 
.PP
Definition at line \fB1412\fP of file \fBnapi\-inl\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename Finalizer , typename T > void Napi::Object::AddFinalizer (Finalizer finalizeCallback, T * data) const\fR [inline]\fP"

.PP
Definition at line \fB1634\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename Finalizer , typename T , typename Hint > void Napi::Object::AddFinalizer (Finalizer finalizeCallback, T * data, Hint * finalizeHint) const\fR [inline]\fP"

.PP
Definition at line \fB1648\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "void Napi::Object::CheckCast (napi_env env, napi_value value)\fR [inline]\fP, \fR [static]\fP"

.PP
Definition at line \fB1400\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::DefineProperties (const std::initializer_list< \fBPropertyDescriptor\fP > & properties) const\fR [inline]\fP"
Defines properties on the object\&.
.PP
This operation can fail in case of Proxy\&.[[DefineOwnProperty]] calling into JavaScript\&. See https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc 
.PP
\fBParameters\fP
.RS 4
\fIproperties\fP List of descriptors for the properties to be defined 
.RE
.PP

.PP
Definition at line \fB1606\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::DefineProperties (const std::vector< \fBPropertyDescriptor\fP > & properties) const\fR [inline]\fP"
Defines properties on the object\&.
.PP
This operation can fail in case of Proxy\&.[[DefineOwnProperty]] calling into JavaScript\&. See https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc 
.PP
\fBParameters\fP
.RS 4
\fIproperties\fP Vector of descriptors for the properties to be defined 
.RE
.PP

.PP
Definition at line \fB1616\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::DefineProperty (const \fBPropertyDescriptor\fP & property) const\fR [inline]\fP"
Defines a property on the object\&.
.PP
This operation can fail in case of Proxy\&.[[DefineOwnProperty]] calling into JavaScript\&. See https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc 
.PP
\fBParameters\fP
.RS 4
\fIproperty\fP Descriptor for the property to be defined 
.RE
.PP

.PP
Definition at line \fB1596\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::Delete (const char * utf8name) const\fR [inline]\fP"

.PP
Delete property\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded null-terminated property name 
.RE
.PP

.PP
Definition at line \fB1556\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::Delete (const std::string & utf8name) const\fR [inline]\fP"

.PP
Delete property\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded property name 
.RE
.PP

.PP
Definition at line \fB1560\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::Delete (napi_value key) const\fR [inline]\fP"

.PP
Delete property\&. 
.PP
\fBParameters\fP
.RS 4
\fIkey\fP Property key primitive 
.RE
.PP

.PP
Definition at line \fB1544\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::Delete (uint32_t index) const\fR [inline]\fP"

.PP
Deletes an indexed property or array element\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP Property / element index 
.RE
.PP

.PP
Definition at line \fB1584\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::Delete (\fBValue\fP key) const\fR [inline]\fP"

.PP
Delete property\&. 
.PP
\fBParameters\fP
.RS 4
\fIkey\fP Property key 
.RE
.PP

.PP
Definition at line \fB1550\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBValue\fP > Napi::Object::Get (const char * utf8name) const\fR [inline]\fP"

.PP
Gets a named property\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded null-terminated property name 
.RE
.PP

.PP
Definition at line \fB1505\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBValue\fP > Napi::Object::Get (const std::string & utf8name) const\fR [inline]\fP"

.PP
Gets a named property\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded property name 
.RE
.PP

.PP
Definition at line \fB1511\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBValue\fP > Napi::Object::Get (napi_value key) const\fR [inline]\fP"

.PP
Gets a property\&. 
.PP
\fBParameters\fP
.RS 4
\fIkey\fP Property key primitive 
.RE
.PP

.PP
Definition at line \fB1493\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBValue\fP > Napi::Object::Get (uint32_t index) const\fR [inline]\fP"

.PP
Gets an indexed property or array element\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP Property / element index 
.RE
.PP

.PP
Definition at line \fB1570\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBValue\fP > Napi::Object::Get (\fBValue\fP key) const\fR [inline]\fP"

.PP
Gets a property\&. 
.PP
\fBParameters\fP
.RS 4
\fIkey\fP Property key 
.RE
.PP

.PP
Definition at line \fB1499\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBArray\fP > Napi::Object::GetPropertyNames () const\fR [inline]\fP"

.PP
Get all property names\&. This operation can fail in case of Proxy\&.[[OwnPropertyKeys]] and Proxy\&.[[GetOwnProperty]] calling into JavaScript\&. See:
.IP "\(bu" 2
https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys
.IP "\(bu" 2
https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p 
.PP

.PP
Definition at line \fB1590\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::Has (const char * utf8name) const\fR [inline]\fP"

.PP
Checks whether a named property is present\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded null-terminated property name 
.RE
.PP

.PP
Definition at line \fB1458\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::Has (const std::string & utf8name) const\fR [inline]\fP"

.PP
Checks whether a named property is present\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded property name 
.RE
.PP

.PP
Definition at line \fB1464\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::Has (napi_value key) const\fR [inline]\fP"

.PP
Checks whether a property is present\&. 
.PP
\fBParameters\fP
.RS 4
\fIkey\fP Property key primitive 
.RE
.PP

.PP
Definition at line \fB1446\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::Has (uint32_t index) const\fR [inline]\fP"

.PP
Checks whether an indexed property is present\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP Property / element index 
.RE
.PP

.PP
Definition at line \fB1564\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::Has (\fBValue\fP key) const\fR [inline]\fP"

.PP
Checks whether a property is present\&. 
.PP
\fBParameters\fP
.RS 4
\fIkey\fP Property key 
.RE
.PP

.PP
Definition at line \fB1452\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::HasOwnProperty (const char * utf8name) const\fR [inline]\fP"

.PP
Checks whether a own property is present\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded null-terminated property name 
.RE
.PP

.PP
Definition at line \fB1480\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::HasOwnProperty (const std::string & utf8name) const\fR [inline]\fP"

.PP
Checks whether a own property is present\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded property name 
.RE
.PP

.PP
Definition at line \fB1488\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::HasOwnProperty (napi_value key) const\fR [inline]\fP"

.PP
Checks whether a own property is present\&. 
.PP
\fBParameters\fP
.RS 4
\fIkey\fP Property key primitive 
.RE
.PP

.PP
Definition at line \fB1468\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::HasOwnProperty (\fBValue\fP key) const\fR [inline]\fP"

.PP
Checks whether a own property is present\&. 
.PP
\fBParameters\fP
.RS 4
\fIkey\fP Property key 
.RE
.PP

.PP
Definition at line \fB1474\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< bool > Napi::Object::InstanceOf (const \fBFunction\fP & constructor) const\fR [inline]\fP"
Checks if an object is an instance created by a constructor function\&.
.PP
This is equivalent to the JavaScript \fRinstanceof\fP operator\&.
.PP
This operation can fail in case of Proxy\&.[[GetPrototypeOf]] calling into JavaScript\&. See https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof 
.PP
\fBParameters\fP
.RS 4
\fIconstructor\fP Constructor function 
.RE
.PP

.PP
Definition at line \fB1626\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBObject\fP Napi::Object::New (napi_env env)\fR [inline]\fP, \fR [static]\fP"

.PP
Creates a new \fBObject\fP value\&. 
.PP
\fBParameters\fP
.RS 4
\fIenv\fP Node-API environment 
.RE
.PP

.PP
Definition at line \fB1393\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBObject::PropertyLValue\fP< std::string > Napi::Object::operator[] (const char * utf8name)\fR [inline]\fP"

.PP
Gets or sets a named property\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded null-terminated property name 
.RE
.PP

.PP
Definition at line \fB1415\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBValue\fP > Napi::Object::operator[] (const char * utf8name) const\fR [inline]\fP"

.PP
Gets a named property\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded null-terminated property name 
.RE
.PP

.PP
Definition at line \fB1433\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBObject::PropertyLValue\fP< std::string > Napi::Object::operator[] (const std::string & utf8name)\fR [inline]\fP"

.PP
Gets or sets a named property\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded property name 
.RE
.PP

.PP
Definition at line \fB1420\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBValue\fP > Napi::Object::operator[] (const std::string & utf8name) const\fR [inline]\fP"

.PP
Gets a named property\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded property name 
.RE
.PP

.PP
Definition at line \fB1437\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBObject::PropertyLValue\fP< uint32_t > Napi::Object::operator[] (uint32_t index)\fR [inline]\fP"

.PP
Gets or sets an indexed property or array element\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP Property / element index 
.RE
.PP

.PP
Definition at line \fB1425\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBValue\fP > Napi::Object::operator[] (uint32_t index) const\fR [inline]\fP"

.PP
Gets an indexed property or array element\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP Property / element index 
.RE
.PP

.PP
Definition at line \fB1442\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBObject::PropertyLValue\fP< \fBValue\fP > Napi::Object::operator[] (\fBValue\fP index) const\fR [inline]\fP"

.PP
Gets or sets an indexed property or array element\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP Property / element index 
.RE
.PP

.PP
Definition at line \fB1429\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename ValueType > \fBMaybeOrValue\fP< bool > Napi::Object::Set (const char * utf8name, const ValueType & value) const\fR [inline]\fP"

.PP
Sets a named property\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded null-terminated property name 
.RE
.PP

.PP
Definition at line \fB1531\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename ValueType > \fBMaybeOrValue\fP< bool > Napi::Object::Set (const std::string & utf8name, const ValueType & value) const\fR [inline]\fP"

.PP
Sets a named property\&. 
.PP
\fBParameters\fP
.RS 4
\fIutf8name\fP UTF-8 encoded property name  
.br
\fIvalue\fP Property value primitive 
.RE
.PP

.PP
Definition at line \fB1539\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename ValueType > \fBMaybeOrValue\fP< bool > Napi::Object::Set (napi_value key, const ValueType & value) const\fR [inline]\fP"

.PP
Sets a property\&. 
.PP
\fBParameters\fP
.RS 4
\fIkey\fP Property key primitive  
.br
\fIvalue\fP Property value primitive 
.RE
.PP

.PP
Definition at line \fB1516\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename ValueType > \fBMaybeOrValue\fP< bool > Napi::Object::Set (uint32_t index, const ValueType & value) const\fR [inline]\fP"

.PP
Sets an indexed property or array element\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP Property / element index  
.br
\fIvalue\fP Property value primitive 
.RE
.PP

.PP
Definition at line \fB1577\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename ValueType > \fBMaybeOrValue\fP< bool > Napi::Object::Set (\fBValue\fP key, const ValueType & value) const\fR [inline]\fP"

.PP
Sets a property\&. 
.PP
\fBParameters\fP
.RS 4
\fIkey\fP Property key  
.br
\fIvalue\fP Property value 
.RE
.PP

.PP
Definition at line \fB1524\fP of file \fBnapi\-inl\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
