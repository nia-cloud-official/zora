.TH "Napi::DataView" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Napi::DataView
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <napi\&.h>\fP
.PP
Inherits \fBNapi::Object\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDataView\fP ()"
.br
.RI "Creates a new \fIempty\fP \fBDataView\fP instance\&. "
.ti -1c
.RI "\fBDataView\fP (napi_env env, napi_value value)"
.br
.RI "Wraps a Node-API value primitive\&. "
.ti -1c
.RI "\fBNapi::ArrayBuffer\fP \fBArrayBuffer\fP () const"
.br
.RI "Gets the backing array buffer\&. "
.ti -1c
.RI "size_t \fBByteOffset\fP () const"
.br
.RI "Gets the offset into the buffer where the array starts\&. "
.ti -1c
.RI "size_t \fBByteLength\fP () const"
.br
.RI "Gets the length of the array in bytes\&. "
.ti -1c
.RI "void * \fBData\fP () const"
.br
.ti -1c
.RI "float \fBGetFloat32\fP (size_t byteOffset) const"
.br
.ti -1c
.RI "double \fBGetFloat64\fP (size_t byteOffset) const"
.br
.ti -1c
.RI "int8_t \fBGetInt8\fP (size_t byteOffset) const"
.br
.ti -1c
.RI "int16_t \fBGetInt16\fP (size_t byteOffset) const"
.br
.ti -1c
.RI "int32_t \fBGetInt32\fP (size_t byteOffset) const"
.br
.ti -1c
.RI "uint8_t \fBGetUint8\fP (size_t byteOffset) const"
.br
.ti -1c
.RI "uint16_t \fBGetUint16\fP (size_t byteOffset) const"
.br
.ti -1c
.RI "uint32_t \fBGetUint32\fP (size_t byteOffset) const"
.br
.ti -1c
.RI "void \fBSetFloat32\fP (size_t byteOffset, float value) const"
.br
.ti -1c
.RI "void \fBSetFloat64\fP (size_t byteOffset, double value) const"
.br
.ti -1c
.RI "void \fBSetInt8\fP (size_t byteOffset, int8_t value) const"
.br
.ti -1c
.RI "void \fBSetInt16\fP (size_t byteOffset, int16_t value) const"
.br
.ti -1c
.RI "void \fBSetInt32\fP (size_t byteOffset, int32_t value) const"
.br
.ti -1c
.RI "void \fBSetUint8\fP (size_t byteOffset, uint8_t value) const"
.br
.ti -1c
.RI "void \fBSetUint16\fP (size_t byteOffset, uint16_t value) const"
.br
.ti -1c
.RI "void \fBSetUint32\fP (size_t byteOffset, uint32_t value) const"
.br
.in -1c

Public Member Functions inherited from \fBNapi::Object\fP
.in +1c
.ti -1c
.RI "\fBObject\fP ()"
.br
.RI "Creates a new \fIempty\fP \fBObject\fP instance\&. "
.ti -1c
.RI "\fBObject\fP (napi_env env, napi_value value)"
.br
.RI "Wraps a Node-API value primitive\&. "
.ti -1c
.RI "\fBPropertyLValue\fP< std::string > \fBoperator[]\fP (const char *utf8name)"
.br
.RI "Gets or sets a named property\&. "
.ti -1c
.RI "\fBPropertyLValue\fP< std::string > \fBoperator[]\fP (const std::string &utf8name)"
.br
.RI "Gets or sets a named property\&. "
.ti -1c
.RI "\fBPropertyLValue\fP< uint32_t > \fBoperator[]\fP (uint32_t index)"
.br
.RI "Gets or sets an indexed property or array element\&. "
.ti -1c
.RI "\fBPropertyLValue\fP< \fBValue\fP > \fBoperator[]\fP (\fBValue\fP index) const"
.br
.RI "Gets or sets an indexed property or array element\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBoperator[]\fP (const char *utf8name) const"
.br
.RI "Gets a named property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBoperator[]\fP (const std::string &utf8name) const"
.br
.RI "Gets a named property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBoperator[]\fP (uint32_t index) const"
.br
.RI "Gets an indexed property or array element\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHas\fP (napi_value key) const"
.br
.RI "Checks whether a property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHas\fP (\fBValue\fP key) const"
.br
.RI "Checks whether a property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHas\fP (const char *utf8name) const"
.br
.RI "Checks whether a named property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHas\fP (const std::string &utf8name) const"
.br
.RI "Checks whether a named property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHasOwnProperty\fP (napi_value key) const"
.br
.RI "Checks whether a own property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHasOwnProperty\fP (\fBValue\fP key) const"
.br
.RI "Checks whether a own property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHasOwnProperty\fP (const char *utf8name) const"
.br
.RI "Checks whether a own property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHasOwnProperty\fP (const std::string &utf8name) const"
.br
.RI "Checks whether a own property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBGet\fP (napi_value key) const"
.br
.RI "Gets a property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBGet\fP (\fBValue\fP key) const"
.br
.RI "Gets a property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBGet\fP (const char *utf8name) const"
.br
.RI "Gets a named property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBGet\fP (const std::string &utf8name) const"
.br
.RI "Gets a named property\&. "
.ti -1c
.RI "template<typename ValueType > \fBMaybeOrValue\fP< bool > \fBSet\fP (napi_value key, const ValueType &value) const"
.br
.RI "Sets a property\&. "
.ti -1c
.RI "template<typename ValueType > \fBMaybeOrValue\fP< bool > \fBSet\fP (\fBValue\fP key, const ValueType &value) const"
.br
.RI "Sets a property\&. "
.ti -1c
.RI "template<typename ValueType > \fBMaybeOrValue\fP< bool > \fBSet\fP (const char *utf8name, const ValueType &value) const"
.br
.RI "Sets a named property\&. "
.ti -1c
.RI "template<typename ValueType > \fBMaybeOrValue\fP< bool > \fBSet\fP (const std::string &utf8name, const ValueType &value) const"
.br
.RI "Sets a named property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDelete\fP (napi_value key) const"
.br
.RI "Delete property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDelete\fP (\fBValue\fP key) const"
.br
.RI "Delete property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDelete\fP (const char *utf8name) const"
.br
.RI "Delete property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDelete\fP (const std::string &utf8name) const"
.br
.RI "Delete property\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBHas\fP (uint32_t index) const"
.br
.RI "Checks whether an indexed property is present\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBValue\fP > \fBGet\fP (uint32_t index) const"
.br
.RI "Gets an indexed property or array element\&. "
.ti -1c
.RI "template<typename ValueType > \fBMaybeOrValue\fP< bool > \fBSet\fP (uint32_t index, const ValueType &value) const"
.br
.RI "Sets an indexed property or array element\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDelete\fP (uint32_t index) const"
.br
.RI "Deletes an indexed property or array element\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBArray\fP > \fBGetPropertyNames\fP () const"
.br
.RI "Get all property names\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDefineProperty\fP (const \fBPropertyDescriptor\fP &property) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDefineProperties\fP (const std::initializer_list< \fBPropertyDescriptor\fP > &properties) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBDefineProperties\fP (const std::vector< \fBPropertyDescriptor\fP > &properties) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBInstanceOf\fP (const \fBFunction\fP &constructor) const"
.br
.ti -1c
.RI "template<typename Finalizer , typename T > void \fBAddFinalizer\fP (Finalizer finalizeCallback, T *data) const"
.br
.ti -1c
.RI "template<typename Finalizer , typename T , typename Hint > void \fBAddFinalizer\fP (Finalizer finalizeCallback, T *data, Hint *finalizeHint) const"
.br
.in -1c

Public Member Functions inherited from \fBNapi::Value\fP
.in +1c
.ti -1c
.RI "\fBValue\fP ()"
.br
.RI "Creates a new \fIempty\fP \fBValue\fP instance\&. "
.ti -1c
.RI "\fBValue\fP (napi_env env, napi_value value)"
.br
.RI "Wraps a Node-API value primitive\&. "
.ti -1c
.RI "\fBoperator napi_value\fP () const"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBValue\fP &other) const"
.br
.RI "Tests if this value strictly equals another value\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBValue\fP &other) const"
.br
.RI "Tests if this value does not strictly equal another value\&. "
.ti -1c
.RI "bool \fBStrictEquals\fP (const \fBValue\fP &other) const"
.br
.RI "Tests if this value strictly equals another value\&. "
.ti -1c
.RI "\fBNapi::Env\fP \fBEnv\fP () const"
.br
.RI "Gets the environment the value is associated with\&. "
.ti -1c
.RI "bool \fBIsEmpty\fP () const"
.br
.ti -1c
.RI "napi_valuetype \fBType\fP () const"
.br
.RI "Gets the type of the value\&. "
.ti -1c
.RI "bool \fBIsUndefined\fP () const"
.br
.RI "Tests if a value is an undefined JavaScript value\&. "
.ti -1c
.RI "bool \fBIsNull\fP () const"
.br
.RI "Tests if a value is a null JavaScript value\&. "
.ti -1c
.RI "bool \fBIsBoolean\fP () const"
.br
.RI "Tests if a value is a JavaScript boolean\&. "
.ti -1c
.RI "bool \fBIsNumber\fP () const"
.br
.RI "Tests if a value is a JavaScript number\&. "
.ti -1c
.RI "bool \fBIsString\fP () const"
.br
.RI "Tests if a value is a JavaScript string\&. "
.ti -1c
.RI "bool \fBIsSymbol\fP () const"
.br
.RI "Tests if a value is a JavaScript symbol\&. "
.ti -1c
.RI "bool \fBIsArray\fP () const"
.br
.RI "Tests if a value is a JavaScript array\&. "
.ti -1c
.RI "bool \fBIsArrayBuffer\fP () const"
.br
.RI "Tests if a value is a JavaScript array buffer\&. "
.ti -1c
.RI "bool \fBIsTypedArray\fP () const"
.br
.RI "Tests if a value is a JavaScript typed array\&. "
.ti -1c
.RI "bool \fBIsObject\fP () const"
.br
.RI "Tests if a value is a JavaScript object\&. "
.ti -1c
.RI "bool \fBIsFunction\fP () const"
.br
.RI "Tests if a value is a JavaScript function\&. "
.ti -1c
.RI "bool \fBIsPromise\fP () const"
.br
.RI "Tests if a value is a JavaScript promise\&. "
.ti -1c
.RI "bool \fBIsDataView\fP () const"
.br
.RI "Tests if a value is a JavaScript data view\&. "
.ti -1c
.RI "bool \fBIsBuffer\fP () const"
.br
.RI "Tests if a value is a Node buffer\&. "
.ti -1c
.RI "bool \fBIsExternal\fP () const"
.br
.RI "Tests if a value is a pointer to external data\&. "
.ti -1c
.RI "template<typename T > T \fBAs\fP () const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBBoolean\fP > \fBToBoolean\fP () const"
.br
.RI "Coerces a value to a JavaScript boolean\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBNumber\fP > \fBToNumber\fP () const"
.br
.RI "Coerces a value to a JavaScript number\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBString\fP > \fBToString\fP () const"
.br
.RI "Coerces a value to a JavaScript string\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBObject\fP > \fBToObject\fP () const"
.br
.RI "Coerces a value to a JavaScript object\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBDataView\fP \fBNew\fP (napi_env env, \fBNapi::ArrayBuffer\fP arrayBuffer)"
.br
.ti -1c
.RI "static \fBDataView\fP \fBNew\fP (napi_env env, \fBNapi::ArrayBuffer\fP arrayBuffer, size_t byteOffset)"
.br
.ti -1c
.RI "static \fBDataView\fP \fBNew\fP (napi_env env, \fBNapi::ArrayBuffer\fP arrayBuffer, size_t byteOffset, size_t byteLength)"
.br
.ti -1c
.RI "static void \fBCheckCast\fP (napi_env env, napi_value value)"
.br
.in -1c

Static Public Member Functions inherited from \fBNapi::Object\fP
.in +1c
.ti -1c
.RI "static \fBObject\fP \fBNew\fP (napi_env env)"
.br
.RI "Creates a new \fBObject\fP value\&. "
.ti -1c
.RI "static void \fBCheckCast\fP (napi_env env, napi_value value)"
.br
.in -1c

Static Public Member Functions inherited from \fBNapi::Value\fP
.in +1c
.ti -1c
.RI "template<typename T > static \fBValue\fP \fBFrom\fP (napi_env env, const T &value)"
.br
.in -1c
.SS "Additional Inherited Members"


Protected Member Functions inherited from \fBNapi::TypeTaggable\fP
.in +1c
.ti -1c
.RI "\fBTypeTaggable\fP ()"
.br
.ti -1c
.RI "\fBTypeTaggable\fP (napi_env env, napi_value value)"
.br
.in -1c

Protected Attributes inherited from \fBNapi::Value\fP
.in +1c
.ti -1c
.RI "napi_env \fB_env\fP"
.br
.RI "!cond INTERNAL "
.ti -1c
.RI "napi_value \fB_value\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBDataView\fP provides a low-level interface for reading/writing multiple number types in an \fBArrayBuffer\fP irrespective of the platform's endianness\&. 
.PP
Definition at line \fB1335\fP of file \fBnapi\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Napi::DataView::DataView ()\fR [inline]\fP"

.PP
Creates a new \fIempty\fP \fBDataView\fP instance\&. 
.PP
Definition at line \fB2038\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "Napi::DataView::DataView (napi_env env, napi_value value)\fR [inline]\fP"

.PP
Wraps a Node-API value primitive\&. 
.PP
Definition at line \fB2040\fP of file \fBnapi\-inl\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBNapi::ArrayBuffer\fP Napi::DataView::ArrayBuffer () const\fR [inline]\fP"

.PP
Gets the backing array buffer\&. 
.PP
Definition at line \fB2050\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "size_t Napi::DataView::ByteLength () const\fR [inline]\fP"

.PP
Gets the length of the array in bytes\&. 
.PP
Definition at line \fB2074\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "size_t Napi::DataView::ByteOffset () const\fR [inline]\fP"

.PP
Gets the offset into the buffer where the array starts\&. 
.PP
Definition at line \fB2062\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "void Napi::DataView::CheckCast (napi_env env, napi_value value)\fR [inline]\fP, \fR [static]\fP"

.PP
Definition at line \fB2028\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "void * Napi::DataView::Data () const\fR [inline]\fP"

.PP
Definition at line \fB2078\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "float Napi::DataView::GetFloat32 (size_t byteOffset) const\fR [inline]\fP"

.PP
Definition at line \fB2082\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "double Napi::DataView::GetFloat64 (size_t byteOffset) const\fR [inline]\fP"

.PP
Definition at line \fB2086\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "int16_t Napi::DataView::GetInt16 (size_t byteOffset) const\fR [inline]\fP"

.PP
Definition at line \fB2094\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "int32_t Napi::DataView::GetInt32 (size_t byteOffset) const\fR [inline]\fP"

.PP
Definition at line \fB2098\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "int8_t Napi::DataView::GetInt8 (size_t byteOffset) const\fR [inline]\fP"

.PP
Definition at line \fB2090\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "uint16_t Napi::DataView::GetUint16 (size_t byteOffset) const\fR [inline]\fP"

.PP
Definition at line \fB2106\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "uint32_t Napi::DataView::GetUint32 (size_t byteOffset) const\fR [inline]\fP"

.PP
Definition at line \fB2110\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "uint8_t Napi::DataView::GetUint8 (size_t byteOffset) const\fR [inline]\fP"

.PP
Definition at line \fB2102\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBDataView\fP Napi::DataView::New (napi_env env, \fBNapi::ArrayBuffer\fP arrayBuffer)\fR [inline]\fP, \fR [static]\fP"

.PP
Definition at line \fB1998\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBDataView\fP Napi::DataView::New (napi_env env, \fBNapi::ArrayBuffer\fP arrayBuffer, size_t byteOffset)\fR [inline]\fP, \fR [static]\fP"

.PP
Definition at line \fB2002\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBDataView\fP Napi::DataView::New (napi_env env, \fBNapi::ArrayBuffer\fP arrayBuffer, size_t byteOffset, size_t byteLength)\fR [inline]\fP, \fR [static]\fP"

.PP
Definition at line \fB2014\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "void Napi::DataView::SetFloat32 (size_t byteOffset, float value) const\fR [inline]\fP"

.PP
Definition at line \fB2114\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "void Napi::DataView::SetFloat64 (size_t byteOffset, double value) const\fR [inline]\fP"

.PP
Definition at line \fB2118\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "void Napi::DataView::SetInt16 (size_t byteOffset, int16_t value) const\fR [inline]\fP"

.PP
Definition at line \fB2126\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "void Napi::DataView::SetInt32 (size_t byteOffset, int32_t value) const\fR [inline]\fP"

.PP
Definition at line \fB2130\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "void Napi::DataView::SetInt8 (size_t byteOffset, int8_t value) const\fR [inline]\fP"

.PP
Definition at line \fB2122\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "void Napi::DataView::SetUint16 (size_t byteOffset, uint16_t value) const\fR [inline]\fP"

.PP
Definition at line \fB2138\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "void Napi::DataView::SetUint32 (size_t byteOffset, uint32_t value) const\fR [inline]\fP"

.PP
Definition at line \fB2142\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "void Napi::DataView::SetUint8 (size_t byteOffset, uint8_t value) const\fR [inline]\fP"

.PP
Definition at line \fB2134\fP of file \fBnapi\-inl\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
