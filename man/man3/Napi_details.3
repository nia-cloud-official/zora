.TH "Napi::details" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Napi::details
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBAccessorCallbackData\fP"
.br
.ti -1c
.RI "struct \fBCallbackData\fP"
.br
.ti -1c
.RI "struct \fBCallbackData< Callable, void >\fP"
.br
.ti -1c
.RI "struct \fBcan_make_string\fP"
.br
.ti -1c
.RI "struct \fBdisjunction\fP"
.br
.ti -1c
.RI "struct \fBdisjunction< B >\fP"
.br
.ti -1c
.RI "struct \fBdisjunction< B, Bs\&.\&.\&. >\fP"
.br
.ti -1c
.RI "struct \fBFinalizeData\fP"
.br
.ti -1c
.RI "struct \fBvf_fallback\fP"
.br
.ti -1c
.RI "struct \fBvf_number\fP"
.br
.ti -1c
.RI "struct \fBvf_number< bool >\fP"
.br
.ti -1c
.RI "struct \fBvf_utf16_charp\fP"
.br
.ti -1c
.RI "struct \fBvf_utf16_string\fP"
.br
.ti -1c
.RI "struct \fBvf_utf8_charp\fP"
.br
.ti -1c
.RI "struct \fBvf_utf8_string\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename FreeType > void \fBdefault_finalizer\fP (napi_env, void *data, void *)"
.br
.ti -1c
.RI "template<typename FreeType , napi_finalize finalizer = default_finalizer<FreeType>> napi_status \fBAttachData\fP (napi_env env, napi_value obj, FreeType *data, void *hint=nullptr)"
.br
.ti -1c
.RI "template<typename Callable > napi_value \fBWrapCallback\fP (Callable callback)"
.br
.ti -1c
.RI "template<typename Callable > void \fBWrapVoidCallback\fP (Callable callback)"
.br
.ti -1c
.RI "template<void(*)(const \fBCallbackInfo\fP &info) Callback> napi_value \fBTemplatedVoidCallback\fP (napi_env env, napi_callback_info info) \fBNAPI_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<\fBNapi::Value\fP(*)(const \fBCallbackInfo\fP &info) Callback> napi_value \fBTemplatedCallback\fP (napi_env env, napi_callback_info info) \fBNAPI_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<typename T , \fBNapi::Value\fP(T::*)(const \fBCallbackInfo\fP &info) UnwrapCallback> napi_value \fBTemplatedInstanceCallback\fP (napi_env env, napi_callback_info info) \fBNAPI_NOEXCEPT\fP"
.br
.ti -1c
.RI "template<typename T , void(T::*)(const \fBCallbackInfo\fP &info) UnwrapCallback> napi_value \fBTemplatedInstanceVoidCallback\fP (napi_env env, napi_callback_info info) \fBNAPI_NOEXCEPT\fP"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "constexpr int \fBnapi_no_external_buffers_allowed\fP = 22"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "template<typename FreeType , napi_finalize finalizer = default_finalizer<FreeType>> napi_status Napi::details::AttachData (napi_env env, napi_value obj, FreeType * data, void * hint = \fRnullptr\fP)\fR [inline]\fP"

.PP
Definition at line \fB45\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename FreeType > void Napi::details::default_finalizer (napi_env , void * data, void * )\fR [inline]\fP"

.PP
Definition at line \fB35\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<\fBNapi::Value\fP(*)(const \fBCallbackInfo\fP &info) Callback> napi_value Napi::details::TemplatedCallback (napi_env env, napi_callback_info info)"

.PP
Definition at line \fB153\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T , \fBNapi::Value\fP(T::*)(const \fBCallbackInfo\fP &info) UnwrapCallback> napi_value Napi::details::TemplatedInstanceCallback (napi_env env, napi_callback_info info)"

.PP
Definition at line \fB163\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T , void(T::*)(const \fBCallbackInfo\fP &info) UnwrapCallback> napi_value Napi::details::TemplatedInstanceVoidCallback (napi_env env, napi_callback_info info)"

.PP
Definition at line \fB173\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<void(*)(const \fBCallbackInfo\fP &info) Callback> napi_value Napi::details::TemplatedVoidCallback (napi_env env, napi_callback_info info)"

.PP
Definition at line \fB143\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename Callable > napi_value Napi::details::WrapCallback (Callable callback)\fR [inline]\fP"

.PP
Definition at line \fB76\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename Callable > void Napi::details::WrapVoidCallback (Callable callback)\fR [inline]\fP"

.PP
Definition at line \fB95\fP of file \fBnapi\-inl\&.h\fP\&.
.SH "Variable Documentation"
.PP 
.SS "int Napi::details::napi_no_external_buffers_allowed = 22\fR [constexpr]\fP"

.PP
Definition at line \fB32\fP of file \fBnapi\-inl\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
