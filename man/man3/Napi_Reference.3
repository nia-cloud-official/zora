.TH "Napi::Reference< T >" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Napi::Reference< T >
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <napi\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBReference\fP ()"
.br
.ti -1c
.RI "\fBReference\fP (napi_env env, napi_ref ref)"
.br
.ti -1c
.RI "\fB~Reference\fP ()"
.br
.ti -1c
.RI "\fBReference\fP (\fBReference\fP< T > &&other)"
.br
.ti -1c
.RI "\fBReference\fP< T > & \fBoperator=\fP (\fBReference\fP< T > &&other)"
.br
.ti -1c
.RI "\fBoperator napi_ref\fP () const"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBReference\fP< T > &other) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBReference\fP< T > &other) const"
.br
.ti -1c
.RI "\fBNapi::Env\fP \fBEnv\fP () const"
.br
.ti -1c
.RI "bool \fBIsEmpty\fP () const"
.br
.ti -1c
.RI "T \fBValue\fP () const"
.br
.ti -1c
.RI "uint32_t \fBRef\fP () const"
.br
.ti -1c
.RI "uint32_t \fBUnref\fP () const"
.br
.ti -1c
.RI "void \fBReset\fP ()"
.br
.ti -1c
.RI "void \fBReset\fP (const T &value, uint32_t refcount=0)"
.br
.ti -1c
.RI "void \fBSuppressDestruct\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBReference\fP< T > \fBNew\fP (const T &value, uint32_t initialRefcount=0)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBReference\fP (const \fBReference\fP< T > &)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "napi_env \fB_env\fP"
.br
.RI "!cond INTERNAL "
.ti -1c
.RI "napi_ref \fB_ref\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T>
.br
class Napi::Reference< T >"Holds a counted reference to a value; initially a weak reference unless otherwise specified, may be changed to/from a strong reference by adjusting the refcount\&.
.PP
The referenced value is not immediately destroyed when the reference count is zero; it is merely then eligible for garbage-collection if there are no other references to the value\&. 
.PP
Definition at line \fB1548\fP of file \fBnapi\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T > \fBNapi::Reference\fP< T >::Reference ()\fR [inline]\fP"

.PP
Definition at line \fB3183\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > \fBNapi::Reference\fP< T >::Reference (napi_env env, napi_ref ref)\fR [inline]\fP"

.PP
Definition at line \fB3187\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > \fBNapi::Reference\fP< T >::~\fBReference\fP ()\fR [inline]\fP"

.PP
Definition at line \fB3191\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > \fBNapi::Reference\fP< T >::Reference (\fBReference\fP< T > && other)\fR [inline]\fP"

.PP
Definition at line \fB3202\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > \fBNapi::Reference\fP< T >::Reference (const \fBReference\fP< T > & other)\fR [inline]\fP, \fR [protected]\fP"

.PP
Definition at line \fB3224\fP of file \fBnapi\-inl\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename T > \fBNapi::Env\fP \fBNapi::Reference\fP< T >::Env () const\fR [inline]\fP"

.PP
Definition at line \fB3256\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > bool \fBNapi::Reference\fP< T >::IsEmpty () const\fR [inline]\fP"

.PP
Definition at line \fB3261\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > \fBReference\fP< T > \fBNapi::Reference\fP< T >::New (const T & value, uint32_t initialRefcount = \fR0\fP)\fR [inline]\fP, \fR [static]\fP"

.PP
Definition at line \fB3166\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > \fBNapi::Reference\fP< T >::operator napi_ref () const\fR [inline]\fP"

.PP
Definition at line \fB3240\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > bool \fBNapi::Reference\fP< T >::operator!= (const \fBReference\fP< T > & other) const\fR [inline]\fP"

.PP
Definition at line \fB3251\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > \fBReference\fP< T > & \fBNapi::Reference\fP< T >::operator= (\fBReference\fP< T > && other)\fR [inline]\fP"

.PP
Definition at line \fB3212\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > bool \fBNapi::Reference\fP< T >::operator== (const \fBReference\fP< T > & other) const\fR [inline]\fP"

.PP
Definition at line \fB3245\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > uint32_t \fBNapi::Reference\fP< T >::Ref () const\fR [inline]\fP"

.PP
Definition at line \fB3278\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > void \fBNapi::Reference\fP< T >::Reset ()\fR [inline]\fP"

.PP
Definition at line \fB3294\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > void \fBNapi::Reference\fP< T >::Reset (const T & value, uint32_t refcount = \fR0\fP)\fR [inline]\fP"

.PP
Definition at line \fB3303\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > void \fBNapi::Reference\fP< T >::SuppressDestruct ()\fR [inline]\fP"

.PP
Definition at line \fB3315\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > uint32_t \fBNapi::Reference\fP< T >::Unref () const\fR [inline]\fP"

.PP
Definition at line \fB3286\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "template<typename T > T \fBNapi::Reference\fP< T >::Value () const\fR [inline]\fP"

.PP
Definition at line \fB3266\fP of file \fBnapi\-inl\&.h\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename T > napi_env \fBNapi::Reference\fP< T >::_env\fR [protected]\fP"

.PP
!cond INTERNAL 
.PP
Definition at line \fB1588\fP of file \fBnapi\&.h\fP\&.
.SS "template<typename T > napi_ref \fBNapi::Reference\fP< T >::_ref\fR [protected]\fP"

.PP
Definition at line \fB1589\fP of file \fBnapi\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
