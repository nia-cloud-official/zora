.TH "gyp.generator.ninja" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gyp.generator.ninja
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBNinjaWriter\fP"
.br
.ti -1c
.RI "class \fBTarget\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBStripPrefix\fP (arg, prefix)"
.br
.ti -1c
.RI "\fBQuoteShellArgument\fP (arg, flavor)"
.br
.ti -1c
.RI "\fBDefine\fP (d, flavor)"
.br
.ti -1c
.RI "\fBAddArch\fP (output, arch)"
.br
.ti -1c
.RI "\fBCalculateVariables\fP (default_variables, params)"
.br
.ti -1c
.RI "\fBComputeOutputDir\fP (params)"
.br
.ti -1c
.RI "\fBCalculateGeneratorInputInfo\fP (params)"
.br
.ti -1c
.RI "\fBOpenOutput\fP (path, mode='w')"
.br
.ti -1c
.RI "\fBCommandWithWrapper\fP (cmd, wrappers, prog)"
.br
.ti -1c
.RI "\fBGetDefaultConcurrentLinks\fP ()"
.br
.ti -1c
.RI "\fB_GetWinLinkRuleNameSuffix\fP (embed_manifest)"
.br
.ti -1c
.RI "\fB_AddWinLinkRules\fP (master_ninja, embed_manifest)"
.br
.ti -1c
.RI "\fBGenerateOutputForConfig\fP (target_list, target_dicts, data, params, config_name)"
.br
.ti -1c
.RI "\fBPerformBuild\fP (data, configurations, params)"
.br
.ti -1c
.RI "\fBCallGenerateOutputForConfig\fP (arglist)"
.br
.ti -1c
.RI "\fBGenerateOutput\fP (target_list, target_dicts, data, params)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "dict \fBgenerator_default_variables\fP"
.br
.ti -1c
.RI "list \fBgenerator_additional_non_configuration_keys\fP = []"
.br
.ti -1c
.RI "list \fBgenerator_additional_path_sections\fP = []"
.br
.ti -1c
.RI "list \fBgenerator_extra_sources_for_rules\fP = []"
.br
.ti -1c
.RI "\fBgenerator_filelist_paths\fP = None"
.br
.ti -1c
.RI "\fBgenerator_supports_multiple_toolsets\fP = \fBgyp\&.common\&.CrossCompileRequested\fP()"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "gyp\&.generator\&.ninja\&._AddWinLinkRules ( master_ninja,  embed_manifest)\fR [protected]\fP"

.PP
.nf
Adds link rules for Windows platform to |master_ninja|\&.
.fi
.PP
 
.PP
Definition at line \fB2149\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&._GetWinLinkRuleNameSuffix ( embed_manifest)\fR [protected]\fP"

.PP
.nf
Returns the suffix used to select an appropriate linking rule depending on
whether the manifest embedding is enabled\&.
.fi
.PP
 
.PP
Definition at line \fB2143\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.AddArch ( output,  arch)"

.PP
.nf
Adds an arch string to an output path\&.
.fi
.PP
 
.PP
Definition at line \fB95\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.CalculateGeneratorInputInfo ( params)"

.PP
.nf
Called by __init__ to initialize generator values based on params\&.
.fi
.PP
 
.PP
Definition at line \fB2060\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.CalculateVariables ( default_variables,  params)"

.PP
.nf
Calculate additional variables for use in the build (called by gyp)\&.
.fi
.PP
 
.PP
Definition at line \fB1985\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.CallGenerateOutputForConfig ( arglist)"

.PP
Definition at line \fB2894\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.CommandWithWrapper ( cmd,  wrappers,  prog)"

.PP
Definition at line \fB2081\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.ComputeOutputDir ( params)"

.PP
.nf
Returns the path from the toplevel_dir to the build output directory\&.
.fi
.PP
 
.PP
Definition at line \fB2047\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.Define ( d,  flavor)"

.PP
.nf
Takes a preprocessor define and returns a -D parameter that's ninja- and
shell-escaped\&.
.fi
.PP
 
.PP
Definition at line \fB85\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.GenerateOutput ( target_list,  target_dicts,  data,  params)"

.PP
Definition at line \fB2903\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.GenerateOutputForConfig ( target_list,  target_dicts,  data,  params,  config_name)"

.PP
Definition at line \fB2212\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.GetDefaultConcurrentLinks ()"

.PP
.nf
Returns a best-guess for a number of concurrent links\&.
.fi
.PP
 
.PP
Definition at line \fB2088\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.OpenOutput ( path,  mode = \fR'w'\fP)"

.PP
.nf
Open |path| for writing, creating directories if necessary\&.
.fi
.PP
 
.PP
Definition at line \fB2075\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.PerformBuild ( data,  configurations,  params)"

.PP
Definition at line \fB2885\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.QuoteShellArgument ( arg,  flavor)"

.PP
.nf
Quote a string such that it will be interpreted as a single argument
by the shell\&.
.fi
.PP
 
.PP
Definition at line \fB73\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.StripPrefix ( arg,  prefix)"

.PP
Definition at line \fB67\fP of file \fBninja\&.py\fP\&.
.SH "Variable Documentation"
.PP 
.SS "list gyp\&.generator\&.ninja\&.generator_additional_non_configuration_keys = []"

.PP
Definition at line \fB59\fP of file \fBninja\&.py\fP\&.
.SS "list gyp\&.generator\&.ninja\&.generator_additional_path_sections = []"

.PP
Definition at line \fB60\fP of file \fBninja\&.py\fP\&.
.SS "dict gyp\&.generator\&.ninja\&.generator_default_variables"
\fBInitial value:\fP
.nf
1 =  {
2     "EXECUTABLE_PREFIX": "",
3     "EXECUTABLE_SUFFIX": "",
4     "STATIC_LIB_PREFIX": "lib",
5     "STATIC_LIB_SUFFIX": "\&.a",
6     "SHARED_LIB_PREFIX": "lib",
7     # Gyp expects the following variables to be expandable by the build
8     # system to the appropriate locations\&.  Ninja prefers paths to be
9     # known at gyp time\&.  To resolve this, introduce special
10     # variables starting with $! and $| (which begin with a $ so gyp knows it
11     # should be treated specially, but is otherwise an invalid
12     # ninja/shell variable) that are passed to gyp here but expanded
13     # before writing out into the target \&.ninja files; see
14     # ExpandSpecial\&.
15     # $! is used for variables that represent a path and that can only appear at
16     # the start of a string, while $| is used for variables that can appear
17     # anywhere in a string\&.
18     "INTERMEDIATE_DIR": "$!INTERMEDIATE_DIR",
19     "SHARED_INTERMEDIATE_DIR": "$!PRODUCT_DIR/gen",
20     "PRODUCT_DIR": "$!PRODUCT_DIR",
21     "CONFIGURATION_NAME": "$|CONFIGURATION_NAME",
22     # Special variables that may be used by gyp 'rule' targets\&.
23     # We generate definitions for these variables on the fly when processing a
24     # rule\&.
25     "RULE_INPUT_ROOT": "${root}",
26     "RULE_INPUT_DIRNAME": "${dirname}",
27     "RULE_INPUT_PATH": "${source}",
28     "RULE_INPUT_EXT": "${ext}",
29     "RULE_INPUT_NAME": "${name}",
30 }
.PP
.fi

.PP
Definition at line \fB27\fP of file \fBninja\&.py\fP\&.
.SS "list gyp\&.generator\&.ninja\&.generator_extra_sources_for_rules = []"

.PP
Definition at line \fB61\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.generator_filelist_paths = None"

.PP
Definition at line \fB62\fP of file \fBninja\&.py\fP\&.
.SS "gyp\&.generator\&.ninja\&.generator_supports_multiple_toolsets = \fBgyp\&.common\&.CrossCompileRequested\fP()"

.PP
Definition at line \fB64\fP of file \fBninja\&.py\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
