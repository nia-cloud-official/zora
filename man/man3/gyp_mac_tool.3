.TH "gyp.mac_tool" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gyp.mac_tool
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBMacTool\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBmain\fP (args)"
.br
.ti -1c
.RI "\fBNextGreaterPowerOf2\fP (x)"
.br
.ti -1c
.RI "\fBWriteHmap\fP (output_name, filelist)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
.nf
Utility functions to perform Xcode-style build steps\&.

These functions are executed via gyp-mac-tool when using the Makefile generator\&.

.fi
.PP
 
.SH "Function Documentation"
.PP 
.SS "gyp\&.mac_tool\&.main ( args)"

.PP
Definition at line \fB26\fP of file \fBmac_tool\&.py\fP\&.
.SS "gyp\&.mac_tool\&.NextGreaterPowerOf2 ( x)"

.PP
Definition at line \fB692\fP of file \fBmac_tool\&.py\fP\&.
.SS "gyp\&.mac_tool\&.WriteHmap ( output_name,  filelist)"

.PP
.nf
Generates a header map based on |filelist|\&.

Per Mark Mentovai:
A header map is structured essentially as a hash table, keyed by names used
in #includes, and providing pathnames to the actual files\&.

The implementation below and the comment above comes from inspecting:
http://www\&.opensource\&.apple\&.com/source/distcc/distcc-2503/distcc_dist/include_server/headermap\&.py?txt
while also looking at the implementation in clang in:
https://llvm\&.org/svn/llvm-project/cfe/trunk/lib/Lex/HeaderMap\&.cpp

.fi
.PP
 
.PP
Definition at line \fB696\fP of file \fBmac_tool\&.py\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
