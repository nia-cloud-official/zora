.TH "md_backend_2node__modules_2base64-js_2_r_e_a_d_m_e" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_backend_2node__modules_2base64-js_2_r_e_a_d_m_e \- base64-js 
.PP
\fRbase64-js\fP does basic base64 encoding/decoding in pure JS\&.
.PP
\fR\fP.PP
Many browsers already have base64 encoding/decoding functionality, but it is for text data, not all-purpose binary data\&.
.PP
Sometimes encoding/decoding binary data in the browser is useful, and that is what this module does\&.
.SH "install"
.PP
With \fRnpm\fP do:
.PP
\fRnpm install base64-js\fP and `var base64js = require('base64-js')`
.PP
For use in web browsers do:
.PP
\fR<script src='base64js\&.min\&.js'></script>\fP
.PP
\fRGet supported base64-js with the Tidelift Subscription\fP
.SH "methods"
.PP
\fRbase64js\fP has three exposed functions, \fRbyteLength\fP, \fRtoByteArray\fP and \fRfromByteArray\fP, which both take a single argument\&.
.PP
.IP "\(bu" 2
\fRbyteLength\fP - Takes a base64 string and returns length of byte array
.IP "\(bu" 2
\fRtoByteArray\fP - Takes a base64 string and returns a byte array
.IP "\(bu" 2
\fRfromByteArray\fP - Takes a byte array and returns a base64 string
.PP
.SH "license"
.PP
MIT 
