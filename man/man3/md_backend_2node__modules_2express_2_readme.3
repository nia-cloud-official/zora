.TH "md_backend_2node__modules_2express_2_readme" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_backend_2node__modules_2express_2_readme \- Readme 
.PP
\fR\fP
.PP
Fast, unopinionated, minimalist web framework for \fRNode\&.js\fP\&.
.PP
\fR\fP \fR\fP \fR\fP
.PP
.PP
.nf
const express = require('express')
const app = express()

app\&.get('/', function (req, res) {
  res\&.send('Hello World')
})

app\&.listen(3000)
.fi
.PP
.SS "Installation"
This is a \fRNode\&.js\fP module available through the \fRnpm registry\fP\&.
.PP
Before installing, \fRdownload and install Node\&.js\fP\&. Node\&.js 0\&.10 or higher is required\&.
.PP
If this is a brand new project, make sure to create a \fRpackage\&.json\fP first with the \fR\fRnpm init\fP command\fP\&.
.PP
Installation is done using the \fR\fRnpm install\fP command\fP:
.PP
.PP
.nf
$ npm install express
.fi
.PP
.PP
Follow \fRour installing guide\fP for more information\&.
.SS "Features"
.IP "\(bu" 2
Robust routing
.IP "\(bu" 2
Focus on high performance
.IP "\(bu" 2
Super-high test coverage
.IP "\(bu" 2
HTTP helpers (redirection, caching, etc)
.IP "\(bu" 2
View system supporting 14+ template engines
.IP "\(bu" 2
Content negotiation
.IP "\(bu" 2
Executable for generating applications quickly
.PP
.SS "Docs & Community"
.IP "\(bu" 2
\fRWebsite and Documentation\fP - [\fRwebsite repo\fP]
.IP "\(bu" 2
\fR#express\fP on \fRLibera Chat\fP IRC
.IP "\(bu" 2
\fRGitHub Organization\fP for Official Middleware & Modules
.IP "\(bu" 2
Visit the \fRWiki\fP
.IP "\(bu" 2
\fRGoogle Group\fP for discussion
.IP "\(bu" 2
\fRGitter\fP for support and discussion
.PP
.PP
\fBPROTIP\fP Be sure to read \fRMigrating from 3\&.x to 4\&.x\fP as well as \fRNew features in 4\&.x\fP\&.
.SS "Quick Start"
The quickest way to get started with express is to utilize the executable \fR\fRexpress(1)\fP\fP to generate an application as shown below:
.PP
Install the executable\&. The executable's major version will match Express's:
.PP
.PP
.nf
$ npm install \-g express\-generator@4
.fi
.PP
.PP
Create the app:
.PP
.PP
.nf
$ express /tmp/foo && cd /tmp/foo
.fi
.PP
.PP
Install dependencies:
.PP
.PP
.nf
$ npm install
.fi
.PP
.PP
Start the server:
.PP
.PP
.nf
$ npm start
.fi
.PP
.PP
View the website at: http://localhost:3000
.SS "Philosophy"
The Express philosophy is to provide small, robust tooling for HTTP servers, making it a great solution for single page applications, websites, hybrids, or public HTTP APIs\&.
.PP
Express does not force you to use any specific ORM or template engine\&. With support for over 14 template engines via \fRConsolidate\&.js\fP, you can quickly craft your perfect framework\&.
.SS "Examples"
To view the examples, clone the Express repo and install the dependencies:
.PP
.PP
.nf
$ git clone https://github\&.com/expressjs/express\&.git \-\-depth 1
$ cd express
$ npm install
.fi
.PP
.PP
Then run whichever example you want:
.PP
.PP
.nf
$ node examples/content\-negotiation
.fi
.PP
.SS "Contributing"
\fR\fP \fR\fP \fR\fP
.PP
The Express\&.js project welcomes all constructive contributions\&. Contributions take many forms, from code for bug fixes and enhancements, to additions and fixes to documentation, additional tests, triaging incoming pull requests and issues, and more!
.PP
See the \fBContributing Guide\fP for more technical details on contributing\&.
.SS "Security Issues"
If you discover a security vulnerability in Express, please see \fBSecurity Policies and Procedures\fP\&.
.SS "Running Tests"
To run the test suite, first install the dependencies, then run \fRnpm test\fP:
.PP
.PP
.nf
$ npm install
$ npm test
.fi
.PP
.SS "People"
The original author of Express is \fRTJ Holowaychuk\fP
.PP
The current lead maintainer is \fRDouglas Christopher Wilson\fP
.PP
\fRList of all contributors\fP
.SS "License"
[MIT](LICENSE) 
