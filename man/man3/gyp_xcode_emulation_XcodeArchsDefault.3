.TH "gyp.xcode_emulation.XcodeArchsDefault" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gyp.xcode_emulation.XcodeArchsDefault
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__init__\fP (self, default, mac, iphonesimulator, iphoneos)"
.br
.ti -1c
.RI "\fBActiveArchs\fP (self, archs, valid_archs, sdkroot)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "\fBvariable_pattern\fP = re\&.compile(r'\\$\\([a\-zA\-Z_][a\-zA\-Z0\-9_]*\\)$')"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fB_VariableMapping\fP (self, sdkroot)"
.br
.ti -1c
.RI "\fB_ExpandArchs\fP (self, archs, sdkroot)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fB_default\fP"
.br
.ti -1c
.RI "\fB_archs\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
.nf
A class to resolve ARCHS variable from xcode_settings, resolving Xcode
macros and implementing filtering by VALID_ARCHS\&. The expansion of macros
depends on the SDKROOT used ('macosx', 'iphoneos', 'iphonesimulator') and
on the version of Xcode\&.

.fi
.PP
 
.PP
Definition at line \fB40\fP of file \fBxcode_emulation\&.py\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "gyp\&.xcode_emulation\&.XcodeArchsDefault\&.__init__ ( self,  default,  mac,  iphonesimulator,  iphoneos)"

.PP
Definition at line \fB50\fP of file \fBxcode_emulation\&.py\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "gyp\&.xcode_emulation\&.XcodeArchsDefault\&._ExpandArchs ( self,  archs,  sdkroot)\fR [protected]\fP"

.PP
.nf
Expands variables references in ARCHS, and remove duplicates\&.
.fi
.PP
 
.PP
Definition at line \fB64\fP of file \fBxcode_emulation\&.py\fP\&.
.SS "gyp\&.xcode_emulation\&.XcodeArchsDefault\&._VariableMapping ( self,  sdkroot)\fR [protected]\fP"

.PP
.nf
Returns the dictionary of variable mapping depending on the SDKROOT\&.
.fi
.PP
 
.PP
Definition at line \fB54\fP of file \fBxcode_emulation\&.py\fP\&.
.SS "gyp\&.xcode_emulation\&.XcodeArchsDefault\&.ActiveArchs ( self,  archs,  valid_archs,  sdkroot)"

.PP
.nf
Expands variables references in ARCHS, and filter by VALID_ARCHS if it
is defined (if not set, Xcode accept any value in ARCHS, otherwise, only
values present in VALID_ARCHS are kept)\&.
.fi
.PP
 
.PP
Definition at line \fB82\fP of file \fBxcode_emulation\&.py\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "gyp\&.xcode_emulation\&.XcodeArchsDefault\&._archs\fR [protected]\fP"

.PP
Definition at line \fB52\fP of file \fBxcode_emulation\&.py\fP\&.
.SS "gyp\&.xcode_emulation\&.XcodeArchsDefault\&._default\fR [protected]\fP"

.PP
Definition at line \fB51\fP of file \fBxcode_emulation\&.py\fP\&.
.SS "gyp\&.xcode_emulation\&.XcodeArchsDefault\&.variable_pattern = re\&.compile(r'\\$\\([a\-zA\-Z_][a\-zA\-Z0\-9_]*\\)$')\fR [static]\fP"

.PP
Definition at line \fB48\fP of file \fBxcode_emulation\&.py\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
