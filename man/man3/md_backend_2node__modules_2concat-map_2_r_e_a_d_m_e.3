.TH "md_backend_2node__modules_2concat-map_2_r_e_a_d_m_e" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_backend_2node__modules_2concat-map_2_r_e_a_d_m_e \- concat-map 
.PP
Concatenative mapdashery\&.
.PP
\fR\fP.PP
\fR\fP.SH "example"
.PP
.PP
.nf
 js
var concatMap = require('concat\-map');
var xs = [ 1, 2, 3, 4, 5, 6 ];
var ys = concatMap(xs, function (x) {
    return x % 2 ? [ x \- 0\&.1, x, x + 0\&.1 ] : [];
});
console\&.dir(ys);
.fi
.PP
.PP
.PP
.PP
.PP
.nf
[ 0\&.9, 1, 1\&.1, 2\&.9, 3, 3\&.1, 4\&.9, 5, 5\&.1 ]
.fi
.PP
.SH "methods"
.PP
.PP
.nf
 js
var concatMap = require('concat\-map')
.fi
.PP
.SS "concatMap(xs, fn)"
Return an array of concatenated elements by calling \fRfn(x, i)\fP for each element \fRx\fP and each index \fRi\fP in the array \fRxs\fP\&.
.PP
When \fRfn(x, i)\fP returns an array, its result will be concatenated with the result array\&. If \fRfn(x, i)\fP returns anything else, that value will be pushed onto the end of the result array\&.
.SH "install"
.PP
With \fRnpm\fP do:
.PP
.PP
.nf
npm install concat\-map
.fi
.PP
.SH "license"
.PP
MIT
.SH "notes"
.PP
This module was written while sitting high above the ground in a tree\&. 
