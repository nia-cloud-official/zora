.TH "md_backend_2node__modules_2set-function-length_2_r_e_a_d_m_e" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_backend_2node__modules_2set-function-length_2_r_e_a_d_m_e \- set-function-length \*{\fR\fP\*}  
.PP
 \fR\fP \fR\fP [][license-url] \fR\fP
.PP
\fR\fP.PP
Set a functionâ€™s length\&.
.PP
Arguments:
.IP "\(bu" 2
\fRfn\fP: the function
.IP "\(bu" 2
\fRlength\fP: the new length\&. Must be an integer between 0 and 2**32\&.
.IP "\(bu" 2
\fRloose\fP: Optional\&. If true, and the length fails to be set, do not throw\&. Default false\&.
.PP
.PP
Returns \fRfn\fP\&.
.SH "Usage"
.PP
.PP
.nf
var setFunctionLength = require('set\-function\-length');
var assert = require('assert');

function zero() {}
function one(_) {}
function two(_, __) {}

assert\&.equal(zero\&.length, 0);
assert\&.equal(one\&.length, 1);
assert\&.equal(two\&.length, 2);

assert\&.equal(setFunctionLength(zero, 10), zero);
assert\&.equal(setFunctionLength(one, 11), one);
assert\&.equal(setFunctionLength(two, 12), two);

assert\&.equal(zero\&.length, 10);
assert\&.equal(one\&.length, 11);
assert\&.equal(two\&.length, 12);
.fi
.PP
 
