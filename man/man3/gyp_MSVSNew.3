.TH "gyp.MSVSNew" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gyp.MSVSNew
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBMSVSFolder\fP"
.br
.ti -1c
.RI "class \fBMSVSProject\fP"
.br
.ti -1c
.RI "class \fBMSVSSolution\fP"
.br
.ti -1c
.RI "class \fBMSVSSolutionEntry\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBcmp\fP (x, y)"
.br
.ti -1c
.RI "\fBMakeGuid\fP (name, seed='msvs_new')"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "dict \fBENTRY_TYPE_GUIDS\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
.nf
New implementation of Visual Studio project generation\&.
.fi
.PP
 
.SH "Function Documentation"
.PP 
.SS "gyp\&.MSVSNew\&.cmp ( x,  y)"

.PP
Definition at line \fB15\fP of file \fBMSVSNew\&.py\fP\&.
.SS "gyp\&.MSVSNew\&.MakeGuid ( name,  seed = \fR'msvs_new'\fP)"

.PP
.nf
Returns a GUID for the specified target name\&.

Args:
name: Target name\&.
seed: Seed for MD5 hash\&.
Returns:
A GUID-line string calculated from the name and seed\&.

This generates something which looks like a GUID, but depends only on the
name and seed\&.  This means the same name/seed will always generate the same
GUID, so that projects and solutions which refer to each other can explicitly
determine the GUID to refer to explicitly\&.  It also means that the GUID will
not change when the project for a target is rebuilt\&.

.fi
.PP
 
.PP
Definition at line \fB32\fP of file \fBMSVSNew\&.py\fP\&.
.SH "Variable Documentation"
.PP 
.SS "dict gyp\&.MSVSNew\&.ENTRY_TYPE_GUIDS"
\fBInitial value:\fP
.nf
1 =  {
2     "project": "{8BC9CEB8\-8B4A\-11D0\-8D11\-00A0C91BC942}",
3     "folder": "{2150E333\-8FDC\-42A3\-9474\-1A3956D46DE8}",
4 }
.PP
.fi

.PP
Definition at line \fB23\fP of file \fBMSVSNew\&.py\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
