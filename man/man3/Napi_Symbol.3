.TH "Napi::Symbol" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Napi::Symbol \- A JavaScript symbol value\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <napi\&.h>\fP
.PP
Inherits \fBNapi::Name\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSymbol\fP ()"
.br
.RI "Creates a new \fIempty\fP \fBSymbol\fP instance\&. "
.ti -1c
.RI "\fBSymbol\fP (napi_env env, napi_value value)"
.br
.RI "Wraps a Node-API value primitive\&. "
.in -1c

Public Member Functions inherited from \fBNapi::Name\fP
.in +1c
.ti -1c
.RI "\fBName\fP ()"
.br
.RI "Creates a new \fIempty\fP \fBName\fP instance\&. "
.ti -1c
.RI "\fBName\fP (napi_env env, napi_value value)"
.br
.RI "Wraps a Node-API value primitive\&. "
.in -1c

Public Member Functions inherited from \fBNapi::Value\fP
.in +1c
.ti -1c
.RI "\fBValue\fP ()"
.br
.RI "Creates a new \fIempty\fP \fBValue\fP instance\&. "
.ti -1c
.RI "\fBValue\fP (napi_env env, napi_value value)"
.br
.RI "Wraps a Node-API value primitive\&. "
.ti -1c
.RI "\fBoperator napi_value\fP () const"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBValue\fP &other) const"
.br
.RI "Tests if this value strictly equals another value\&. "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBValue\fP &other) const"
.br
.RI "Tests if this value does not strictly equal another value\&. "
.ti -1c
.RI "bool \fBStrictEquals\fP (const \fBValue\fP &other) const"
.br
.RI "Tests if this value strictly equals another value\&. "
.ti -1c
.RI "\fBNapi::Env\fP \fBEnv\fP () const"
.br
.RI "Gets the environment the value is associated with\&. "
.ti -1c
.RI "bool \fBIsEmpty\fP () const"
.br
.ti -1c
.RI "napi_valuetype \fBType\fP () const"
.br
.RI "Gets the type of the value\&. "
.ti -1c
.RI "bool \fBIsUndefined\fP () const"
.br
.RI "Tests if a value is an undefined JavaScript value\&. "
.ti -1c
.RI "bool \fBIsNull\fP () const"
.br
.RI "Tests if a value is a null JavaScript value\&. "
.ti -1c
.RI "bool \fBIsBoolean\fP () const"
.br
.RI "Tests if a value is a JavaScript boolean\&. "
.ti -1c
.RI "bool \fBIsNumber\fP () const"
.br
.RI "Tests if a value is a JavaScript number\&. "
.ti -1c
.RI "bool \fBIsString\fP () const"
.br
.RI "Tests if a value is a JavaScript string\&. "
.ti -1c
.RI "bool \fBIsSymbol\fP () const"
.br
.RI "Tests if a value is a JavaScript symbol\&. "
.ti -1c
.RI "bool \fBIsArray\fP () const"
.br
.RI "Tests if a value is a JavaScript array\&. "
.ti -1c
.RI "bool \fBIsArrayBuffer\fP () const"
.br
.RI "Tests if a value is a JavaScript array buffer\&. "
.ti -1c
.RI "bool \fBIsTypedArray\fP () const"
.br
.RI "Tests if a value is a JavaScript typed array\&. "
.ti -1c
.RI "bool \fBIsObject\fP () const"
.br
.RI "Tests if a value is a JavaScript object\&. "
.ti -1c
.RI "bool \fBIsFunction\fP () const"
.br
.RI "Tests if a value is a JavaScript function\&. "
.ti -1c
.RI "bool \fBIsPromise\fP () const"
.br
.RI "Tests if a value is a JavaScript promise\&. "
.ti -1c
.RI "bool \fBIsDataView\fP () const"
.br
.RI "Tests if a value is a JavaScript data view\&. "
.ti -1c
.RI "bool \fBIsBuffer\fP () const"
.br
.RI "Tests if a value is a Node buffer\&. "
.ti -1c
.RI "bool \fBIsExternal\fP () const"
.br
.RI "Tests if a value is a pointer to external data\&. "
.ti -1c
.RI "template<typename T > T \fBAs\fP () const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBBoolean\fP > \fBToBoolean\fP () const"
.br
.RI "Coerces a value to a JavaScript boolean\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBNumber\fP > \fBToNumber\fP () const"
.br
.RI "Coerces a value to a JavaScript number\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBString\fP > \fBToString\fP () const"
.br
.RI "Coerces a value to a JavaScript string\&. "
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBObject\fP > \fBToObject\fP () const"
.br
.RI "Coerces a value to a JavaScript object\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSymbol\fP \fBNew\fP (napi_env env, const char *description=nullptr)"
.br
.RI "Creates a new \fBSymbol\fP value with an optional description\&. "
.ti -1c
.RI "static \fBSymbol\fP \fBNew\fP (napi_env env, const std::string &description)"
.br
.RI "Creates a new \fBSymbol\fP value with a description\&. "
.ti -1c
.RI "static \fBSymbol\fP \fBNew\fP (napi_env env, \fBString\fP description)"
.br
.RI "Creates a new \fBSymbol\fP value with a description\&. "
.ti -1c
.RI "static \fBSymbol\fP \fBNew\fP (napi_env env, napi_value description)"
.br
.RI "Creates a new \fBSymbol\fP value with a description\&. "
.ti -1c
.RI "static \fBMaybeOrValue\fP< \fBSymbol\fP > \fBWellKnown\fP (napi_env, const std::string &name)"
.br
.RI "Get a public \fBSymbol\fP (e\&.g\&. Symbol\&.iterator)\&. "
.ti -1c
.RI "static \fBMaybeOrValue\fP< \fBSymbol\fP > \fBFor\fP (napi_env env, const std::string &description)"
.br
.ti -1c
.RI "static \fBMaybeOrValue\fP< \fBSymbol\fP > \fBFor\fP (napi_env env, const char *description)"
.br
.ti -1c
.RI "static \fBMaybeOrValue\fP< \fBSymbol\fP > \fBFor\fP (napi_env env, \fBString\fP description)"
.br
.ti -1c
.RI "static \fBMaybeOrValue\fP< \fBSymbol\fP > \fBFor\fP (napi_env env, napi_value description)"
.br
.ti -1c
.RI "static void \fBCheckCast\fP (napi_env env, napi_value value)"
.br
.in -1c

Static Public Member Functions inherited from \fBNapi::Name\fP
.in +1c
.ti -1c
.RI "static void \fBCheckCast\fP (napi_env env, napi_value value)"
.br
.in -1c

Static Public Member Functions inherited from \fBNapi::Value\fP
.in +1c
.ti -1c
.RI "template<typename T > static \fBValue\fP \fBFrom\fP (napi_env env, const T &value)"
.br
.in -1c
.SS "Additional Inherited Members"


Protected Attributes inherited from \fBNapi::Value\fP
.in +1c
.ti -1c
.RI "napi_env \fB_env\fP"
.br
.RI "!cond INTERNAL "
.ti -1c
.RI "napi_value \fB_value\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
A JavaScript symbol value\&. 
.PP
Definition at line \fB688\fP of file \fBnapi\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Napi::Symbol::Symbol ()\fR [inline]\fP"

.PP
Creates a new \fIempty\fP \fBSymbol\fP instance\&. 
.PP
Definition at line \fB1238\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "Napi::Symbol::Symbol (napi_env env, napi_value value)\fR [inline]\fP"

.PP
Wraps a Node-API value primitive\&. 
.PP
Definition at line \fB1240\fP of file \fBnapi\-inl\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Napi::Symbol::CheckCast (napi_env env, napi_value value)\fR [inline]\fP, \fR [static]\fP"

.PP
Definition at line \fB1228\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBSymbol\fP > Napi::Symbol::For (napi_env env, const char * description)\fR [inline]\fP, \fR [static]\fP"

.PP
Definition at line \fB1197\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBSymbol\fP > Napi::Symbol::For (napi_env env, const std::string & description)\fR [inline]\fP, \fR [static]\fP"

.PP
Definition at line \fB1191\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBSymbol\fP > Napi::Symbol::For (napi_env env, napi_value description)\fR [inline]\fP, \fR [static]\fP"

.PP
Definition at line \fB1206\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBSymbol\fP > Napi::Symbol::For (napi_env env, \fBString\fP description)\fR [inline]\fP, \fR [static]\fP"

.PP
Definition at line \fB1202\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBSymbol\fP Napi::Symbol::New (napi_env env, const char * description = \fRnullptr\fP)\fR [inline]\fP, \fR [static]\fP"

.PP
Creates a new \fBSymbol\fP value with an optional description\&. 
.PP
\fBParameters\fP
.RS 4
\fIenv\fP Node-API environment  
.br
\fIdescription\fP Optional UTF-8 encoded null-terminated C string describing the symbol 
.RE
.PP

.PP
Definition at line \fB1147\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBSymbol\fP Napi::Symbol::New (napi_env env, const std::string & description)\fR [inline]\fP, \fR [static]\fP"

.PP
Creates a new \fBSymbol\fP value with a description\&. 
.PP
\fBParameters\fP
.RS 4
\fIenv\fP Node-API environment  
.br
\fIdescription\fP UTF-8 encoded C++ string describing the symbol 
.RE
.PP

.PP
Definition at line \fB1154\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBSymbol\fP Napi::Symbol::New (napi_env env, napi_value description)\fR [inline]\fP, \fR [static]\fP"

.PP
Creates a new \fBSymbol\fP value with a description\&. 
.PP
\fBParameters\fP
.RS 4
\fIenv\fP Node-API environment  
.br
\fIdescription\fP \fBString\fP value describing the symbol 
.RE
.PP

.PP
Definition at line \fB1164\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBSymbol\fP Napi::Symbol::New (napi_env env, \fBString\fP description)\fR [inline]\fP, \fR [static]\fP"

.PP
Creates a new \fBSymbol\fP value with a description\&. 
.PP
\fBParameters\fP
.RS 4
\fIenv\fP Node-API environment  
.br
\fIdescription\fP \fBString\fP value describing the symbol 
.RE
.PP

.PP
Definition at line \fB1159\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBMaybeOrValue\fP< \fBSymbol\fP > Napi::Symbol::WellKnown (napi_env env, const std::string & name)\fR [inline]\fP, \fR [static]\fP"

.PP
Get a public \fBSymbol\fP (e\&.g\&. Symbol\&.iterator)\&. 
.PP
Definition at line \fB1171\fP of file \fBnapi\-inl\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
