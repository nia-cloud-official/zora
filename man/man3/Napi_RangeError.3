.TH "Napi::RangeError" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Napi::RangeError
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <napi\&.h>\fP
.PP
Inherits \fBNapi::Error\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRangeError\fP ()"
.br
.ti -1c
.RI "\fBRangeError\fP (napi_env env, napi_value value)"
.br
.in -1c

Public Member Functions inherited from \fBNapi::Error\fP
.in +1c
.ti -1c
.RI "\fBError\fP ()"
.br
.ti -1c
.RI "\fBError\fP (napi_env env, napi_value value)"
.br
.ti -1c
.RI "\fBError\fP (\fBError\fP &&other)"
.br
.ti -1c
.RI "\fBError\fP & \fBoperator=\fP (\fBError\fP &&other)"
.br
.ti -1c
.RI "\fBError\fP (const \fBError\fP &)"
.br
.ti -1c
.RI "\fBError\fP & \fBoperator=\fP (const \fBError\fP &)"
.br
.ti -1c
.RI "const std::string & \fBMessage\fP () const \fBNAPI_NOEXCEPT\fP"
.br
.ti -1c
.RI "void \fBThrowAsJavaScriptException\fP () const"
.br
.ti -1c
.RI "\fBObject\fP \fBValue\fP () const"
.br
.in -1c

Public Member Functions inherited from \fBNapi::ObjectReference\fP
.in +1c
.ti -1c
.RI "\fBObjectReference\fP ()"
.br
.ti -1c
.RI "\fBObjectReference\fP (napi_env env, napi_ref ref)"
.br
.ti -1c
.RI "\fBObjectReference\fP (\fBReference\fP< \fBObject\fP > &&other)"
.br
.ti -1c
.RI "\fBObjectReference\fP & \fBoperator=\fP (\fBReference\fP< \fBObject\fP > &&other)"
.br
.ti -1c
.RI "\fBObjectReference\fP (\fBObjectReference\fP &&other)"
.br
.ti -1c
.RI "\fBObjectReference\fP & \fBoperator=\fP (\fBObjectReference\fP &&other)"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBNapi::Value\fP > \fBGet\fP (const char *utf8name) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBNapi::Value\fP > \fBGet\fP (const std::string &utf8name) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (const char *utf8name, napi_value value) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (const char *utf8name, \fBNapi::Value\fP value) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (const char *utf8name, const char *utf8value) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (const char *utf8name, bool boolValue) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (const char *utf8name, double numberValue) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (const std::string &utf8name, napi_value value) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (const std::string &utf8name, \fBNapi::Value\fP value) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (const std::string &utf8name, std::string &utf8value) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (const std::string &utf8name, bool boolValue) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (const std::string &utf8name, double numberValue) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< \fBNapi::Value\fP > \fBGet\fP (uint32_t index) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (uint32_t index, const napi_value value) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (uint32_t index, const \fBNapi::Value\fP value) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (uint32_t index, const char *utf8value) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (uint32_t index, const std::string &utf8value) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (uint32_t index, bool boolValue) const"
.br
.ti -1c
.RI "\fBMaybeOrValue\fP< bool > \fBSet\fP (uint32_t index, double numberValue) const"
.br
.in -1c

Public Member Functions inherited from \fBNapi::Reference< Object >\fP
.in +1c
.ti -1c
.RI "\fBReference\fP ()"
.br
.ti -1c
.RI "\fBReference\fP (napi_env env, napi_ref ref)"
.br
.ti -1c
.RI "\fBReference\fP (\fBReference\fP< \fBObject\fP > &&other)"
.br
.ti -1c
.RI "\fB~Reference\fP ()"
.br
.ti -1c
.RI "\fBReference\fP< \fBObject\fP > & \fBoperator=\fP (\fBReference\fP< \fBObject\fP > &&other)"
.br
.ti -1c
.RI "\fBoperator napi_ref\fP () const"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBReference\fP< \fBObject\fP > &other) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBReference\fP< \fBObject\fP > &other) const"
.br
.ti -1c
.RI "\fBNapi::Env\fP \fBEnv\fP () const"
.br
.ti -1c
.RI "bool \fBIsEmpty\fP () const"
.br
.ti -1c
.RI "\fBObject\fP \fBValue\fP () const"
.br
.ti -1c
.RI "uint32_t \fBRef\fP () const"
.br
.ti -1c
.RI "uint32_t \fBUnref\fP () const"
.br
.ti -1c
.RI "void \fBReset\fP ()"
.br
.ti -1c
.RI "void \fBReset\fP (const \fBObject\fP &value, uint32_t refcount=0)"
.br
.ti -1c
.RI "void \fBSuppressDestruct\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBRangeError\fP \fBNew\fP (napi_env env, const char *message)"
.br
.ti -1c
.RI "static \fBRangeError\fP \fBNew\fP (napi_env env, const std::string &message)"
.br
.in -1c

Static Public Member Functions inherited from \fBNapi::Error\fP
.in +1c
.ti -1c
.RI "static \fBError\fP \fBNew\fP (napi_env env)"
.br
.ti -1c
.RI "static \fBError\fP \fBNew\fP (napi_env env, const char *message)"
.br
.ti -1c
.RI "static \fBError\fP \fBNew\fP (napi_env env, const std::string &message)"
.br
.ti -1c
.RI "static NAPI_NO_RETURN void \fBFatal\fP (const char *location, const char *message)"
.br
.in -1c

Static Public Member Functions inherited from \fBNapi::Reference< Object >\fP
.in +1c
.ti -1c
.RI "static \fBReference\fP< \fBObject\fP > \fBNew\fP (const \fBObject\fP &value, uint32_t initialRefcount=0)"
.br
.in -1c
.SS "Additional Inherited Members"


Protected Types inherited from \fBNapi::Error\fP
.in +1c
.ti -1c
.RI "using \fBcreate_error_fn\fP"
.br
.RI "!cond INTERNAL "
.in -1c

Protected Member Functions inherited from \fBNapi::ObjectReference\fP
.in +1c
.ti -1c
.RI "\fBObjectReference\fP (const \fBObjectReference\fP &)"
.br
.in -1c

Protected Member Functions inherited from \fBNapi::Reference< Object >\fP
.in +1c
.ti -1c
.RI "\fBReference\fP (const \fBReference\fP< \fBObject\fP > &)"
.br
.in -1c

Static Protected Member Functions inherited from \fBNapi::Error\fP
.in +1c
.ti -1c
.RI "template<typename TError > static TError \fBNew\fP (napi_env env, const char *message, size_t length, \fBcreate_error_fn\fP create_error)"
.br
.in -1c

Protected Attributes inherited from \fBNapi::Reference< Object >\fP
.in +1c
.ti -1c
.RI "napi_env \fB_env\fP"
.br
.RI "!cond INTERNAL "
.ti -1c
.RI "napi_ref \fB_ref\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB1846\fP of file \fBnapi\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Napi::RangeError::RangeError ()\fR [inline]\fP"

.PP
Definition at line \fB3139\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "Napi::RangeError::RangeError (napi_env env, napi_value value)\fR [inline]\fP"

.PP
Definition at line \fB3141\fP of file \fBnapi\-inl\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBRangeError\fP Napi::RangeError::New (napi_env env, const char * message)\fR [inline]\fP, \fR [static]\fP"

.PP
Definition at line \fB3129\fP of file \fBnapi\-inl\&.h\fP\&.
.SS "\fBRangeError\fP Napi::RangeError::New (napi_env env, const std::string & message)\fR [inline]\fP, \fR [static]\fP"

.PP
Definition at line \fB3134\fP of file \fBnapi\-inl\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
