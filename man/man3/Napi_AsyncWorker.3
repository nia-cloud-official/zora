.TH "Napi::AsyncWorker" 3 "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Napi::AsyncWorker
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <napi\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~AsyncWorker\fP ()"
.br
.ti -1c
.RI "\fBoperator napi_async_work\fP () const"
.br
.ti -1c
.RI "\fBNapi::Env\fP \fBEnv\fP () const"
.br
.ti -1c
.RI "void \fBQueue\fP ()"
.br
.ti -1c
.RI "void \fBCancel\fP ()"
.br
.ti -1c
.RI "void \fBSuppressDestruct\fP ()"
.br
.ti -1c
.RI "\fBObjectReference\fP & \fBReceiver\fP ()"
.br
.ti -1c
.RI "\fBFunctionReference\fP & \fBCallback\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnExecute\fP (\fBNapi::Env\fP env)"
.br
.ti -1c
.RI "virtual void \fBOnWorkComplete\fP (\fBNapi::Env\fP env, napi_status status)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBAsyncWorker\fP (const \fBFunction\fP &callback)"
.br
.ti -1c
.RI "\fBAsyncWorker\fP (const \fBFunction\fP &callback, const char *resource_name)"
.br
.ti -1c
.RI "\fBAsyncWorker\fP (const \fBFunction\fP &callback, const char *resource_name, const \fBObject\fP &resource)"
.br
.ti -1c
.RI "\fBAsyncWorker\fP (const \fBObject\fP &receiver, const \fBFunction\fP &callback)"
.br
.ti -1c
.RI "\fBAsyncWorker\fP (const \fBObject\fP &receiver, const \fBFunction\fP &callback, const char *resource_name)"
.br
.ti -1c
.RI "\fBAsyncWorker\fP (const \fBObject\fP &receiver, const \fBFunction\fP &callback, const char *resource_name, const \fBObject\fP &resource)"
.br
.ti -1c
.RI "\fBAsyncWorker\fP (\fBNapi::Env\fP env)"
.br
.ti -1c
.RI "\fBAsyncWorker\fP (\fBNapi::Env\fP env, const char *resource_name)"
.br
.ti -1c
.RI "\fBAsyncWorker\fP (\fBNapi::Env\fP env, const char *resource_name, const \fBObject\fP &resource)"
.br
.ti -1c
.RI "virtual void \fBExecute\fP ()=0"
.br
.ti -1c
.RI "virtual void \fBOnOK\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnError\fP (const \fBError\fP &e)"
.br
.ti -1c
.RI "virtual void \fBDestroy\fP ()"
.br
.ti -1c
.RI "virtual std::vector< napi_value > \fBGetResult\fP (\fBNapi::Env\fP env)"
.br
.ti -1c
.RI "void \fBSetError\fP (const std::string &error)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB2524\fP of file \fBnapi\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "virtual Napi::AsyncWorker::~AsyncWorker ()\fR [virtual]\fP"

.SS "Napi::AsyncWorker::AsyncWorker (const \fBFunction\fP & callback)\fR [explicit]\fP, \fR [protected]\fP"

.SS "Napi::AsyncWorker::AsyncWorker (const \fBFunction\fP & callback, const char * resource_name)\fR [explicit]\fP, \fR [protected]\fP"

.SS "Napi::AsyncWorker::AsyncWorker (const \fBFunction\fP & callback, const char * resource_name, const \fBObject\fP & resource)\fR [explicit]\fP, \fR [protected]\fP"

.SS "Napi::AsyncWorker::AsyncWorker (const \fBObject\fP & receiver, const \fBFunction\fP & callback)\fR [explicit]\fP, \fR [protected]\fP"

.SS "Napi::AsyncWorker::AsyncWorker (const \fBObject\fP & receiver, const \fBFunction\fP & callback, const char * resource_name)\fR [explicit]\fP, \fR [protected]\fP"

.SS "Napi::AsyncWorker::AsyncWorker (const \fBObject\fP & receiver, const \fBFunction\fP & callback, const char * resource_name, const \fBObject\fP & resource)\fR [explicit]\fP, \fR [protected]\fP"

.SS "Napi::AsyncWorker::AsyncWorker (\fBNapi::Env\fP env)\fR [explicit]\fP, \fR [protected]\fP"

.SS "Napi::AsyncWorker::AsyncWorker (\fBNapi::Env\fP env, const char * resource_name)\fR [explicit]\fP, \fR [protected]\fP"

.SS "Napi::AsyncWorker::AsyncWorker (\fBNapi::Env\fP env, const char * resource_name, const \fBObject\fP & resource)\fR [explicit]\fP, \fR [protected]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBFunctionReference\fP & Napi::AsyncWorker::Callback ()"

.SS "void Napi::AsyncWorker::Cancel ()"

.SS "virtual void Napi::AsyncWorker::Destroy ()\fR [protected]\fP, \fR [virtual]\fP"

.SS "\fBNapi::Env\fP Napi::AsyncWorker::Env () const"

.SS "virtual void Napi::AsyncWorker::Execute ()\fR [protected]\fP, \fR [pure virtual]\fP"

.SS "virtual std::vector< napi_value > Napi::AsyncWorker::GetResult (\fBNapi::Env\fP env)\fR [protected]\fP, \fR [virtual]\fP"

.SS "virtual void Napi::AsyncWorker::OnError (const \fBError\fP & e)\fR [protected]\fP, \fR [virtual]\fP"

.SS "virtual void Napi::AsyncWorker::OnExecute (\fBNapi::Env\fP env)\fR [virtual]\fP"

.SS "virtual void Napi::AsyncWorker::OnOK ()\fR [protected]\fP, \fR [virtual]\fP"

.SS "virtual void Napi::AsyncWorker::OnWorkComplete (\fBNapi::Env\fP env, napi_status status)\fR [virtual]\fP"

.SS "Napi::AsyncWorker::operator napi_async_work () const"

.SS "void Napi::AsyncWorker::Queue ()"

.SS "\fBObjectReference\fP & Napi::AsyncWorker::Receiver ()"

.SS "void Napi::AsyncWorker::SetError (const std::string & error)\fR [protected]\fP"

.SS "void Napi::AsyncWorker::SuppressDestruct ()"


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
