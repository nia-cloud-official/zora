<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="analyzer_8py" kind="file" language="Python">
    <compoundname>analyzer.py</compoundname>
    <innerclass refid="classgyp_1_1generator_1_1analyzer_1_1_target" prot="public">gyp::generator::analyzer::Target</innerclass>
    <innerclass refid="classgyp_1_1generator_1_1analyzer_1_1_config" prot="public">gyp::generator::analyzer::Config</innerclass>
    <innerclass refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator" prot="public">gyp::generator::analyzer::TargetCalculator</innerclass>
    <innernamespace refid="namespacegyp">gyp</innernamespace>
    <innernamespace refid="namespacegyp_1_1generator">gyp::generator</innernamespace>
    <innernamespace refid="namespacegyp_1_1generator_1_1analyzer">gyp::generator::analyzer</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacegyp_1_1generator_1_1analyzer" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>2014<sp/>Google<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">This<sp/>script<sp/>is<sp/>intended<sp/>for<sp/>use<sp/>as<sp/>a<sp/>GYP_GENERATOR.<sp/>It<sp/>takes<sp/>as<sp/>input<sp/>(by<sp/>way<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">the<sp/>generator<sp/>flag<sp/>config_path)<sp/>the<sp/>path<sp/>of<sp/>a<sp/>json<sp/>file<sp/>that<sp/>dictates<sp/>the<sp/>files</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">and<sp/>targets<sp/>to<sp/>search<sp/>for.<sp/>The<sp/>following<sp/>keys<sp/>are<sp/>supported:</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">files:<sp/>list<sp/>of<sp/>paths<sp/>(relative)<sp/>of<sp/>the<sp/>files<sp/>to<sp/>search<sp/>for.</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">test_targets:<sp/>unqualified<sp/>target<sp/>names<sp/>to<sp/>search<sp/>for.<sp/>Any<sp/>target<sp/>in<sp/>this<sp/>list</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral">that<sp/>depends<sp/>upon<sp/>a<sp/>file<sp/>in<sp/>|files|<sp/>is<sp/>output<sp/>regardless<sp/>of<sp/>the<sp/>type<sp/>of<sp/>target</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">or<sp/>chain<sp/>of<sp/>dependencies.</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">additional_compile_targets:<sp/>Unqualified<sp/>targets<sp/>to<sp/>search<sp/>for<sp/>in<sp/>addition<sp/>to</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">test_targets.<sp/>Targets<sp/>in<sp/>the<sp/>combined<sp/>list<sp/>that<sp/>depend<sp/>upon<sp/>a<sp/>file<sp/>in<sp/>|files|</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">are<sp/>not<sp/>necessarily<sp/>output.<sp/>For<sp/>example,<sp/>if<sp/>the<sp/>target<sp/>is<sp/>of<sp/>type<sp/>none<sp/>then<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">target<sp/>is<sp/>not<sp/>output<sp/>(but<sp/>one<sp/>of<sp/>the<sp/>descendants<sp/>of<sp/>the<sp/>target<sp/>will<sp/>be).</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">The<sp/>following<sp/>is<sp/>output:</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">error:<sp/>only<sp/>supplied<sp/>if<sp/>there<sp/>is<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">compile_targets:<sp/>minimal<sp/>set<sp/>of<sp/>targets<sp/>that<sp/>directly<sp/>or<sp/>indirectly<sp/>(for</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/>targets<sp/>of<sp/>type<sp/>none)<sp/>depend<sp/>on<sp/>the<sp/>files<sp/>in<sp/>|files|<sp/>and<sp/>is<sp/>one<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/>supplied<sp/>targets<sp/>or<sp/>a<sp/>target<sp/>that<sp/>one<sp/>of<sp/>the<sp/>supplied<sp/>targets<sp/>depends<sp/>on.</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/>The<sp/>expectation<sp/>is<sp/>this<sp/>set<sp/>of<sp/>targets<sp/>is<sp/>passed<sp/>into<sp/>a<sp/>build<sp/>step.<sp/>This<sp/>list</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/>always<sp/>contains<sp/>the<sp/>output<sp/>of<sp/>test_targets<sp/>as<sp/>well.</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">test_targets:<sp/>set<sp/>of<sp/>targets<sp/>from<sp/>the<sp/>supplied<sp/>|test_targets|<sp/>that<sp/>either</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/>directly<sp/>or<sp/>indirectly<sp/>depend<sp/>upon<sp/>a<sp/>file<sp/>in<sp/>|files|.<sp/>This<sp/>list<sp/>if<sp/>useful</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/>if<sp/>additional<sp/>processing<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>for<sp/>certain<sp/>targets<sp/>after<sp/>the</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/>build,<sp/>such<sp/>as<sp/>running<sp/>tests.</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral">status:<sp/>outputs<sp/>one<sp/>of<sp/>three<sp/>values:<sp/>none<sp/>of<sp/>the<sp/>supplied<sp/>files<sp/>were<sp/>found,</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/>one<sp/>of<sp/>the<sp/>include<sp/>files<sp/>changed<sp/>so<sp/>that<sp/>it<sp/>should<sp/>be<sp/>assumed<sp/>everything</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/>changed<sp/>(in<sp/>this<sp/>case<sp/>test_targets<sp/>and<sp/>compile_targets<sp/>are<sp/>not<sp/>output)<sp/>or<sp/>at</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/>least<sp/>one<sp/>file<sp/>was<sp/>found.</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">invalid_targets:<sp/>list<sp/>of<sp/>supplied<sp/>targets<sp/>that<sp/>were<sp/>not<sp/>found.</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">Example:</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">Consider<sp/>a<sp/>graph<sp/>like<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/>A<sp/><sp/><sp/><sp/><sp/>D</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/>/<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral">B<sp/><sp/><sp/>C</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral">A<sp/>depends<sp/>upon<sp/>both<sp/>B<sp/>and<sp/>C,<sp/>A<sp/>is<sp/>of<sp/>type<sp/>none<sp/>and<sp/>B<sp/>and<sp/>C<sp/>are<sp/>executables.</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral">D<sp/>is<sp/>an<sp/>executable,<sp/>has<sp/>no<sp/>dependencies<sp/>and<sp/>nothing<sp/>depends<sp/>on<sp/>it.</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral">If<sp/>|additional_compile_targets|<sp/>=<sp/>[&quot;A&quot;],<sp/>|test_targets|<sp/>=<sp/>[&quot;B&quot;,<sp/>&quot;C&quot;]<sp/>and</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral">files<sp/>=<sp/>[&quot;b.cc&quot;,<sp/>&quot;d.cc&quot;]<sp/>(B<sp/>depends<sp/>upon<sp/>b.cc<sp/>and<sp/>D<sp/>depends<sp/>upon<sp/>d.cc),<sp/>then</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral">the<sp/>following<sp/>is<sp/>output:</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral">|compile_targets|<sp/>=<sp/>[&quot;B&quot;]<sp/>B<sp/>must<sp/>built<sp/>as<sp/>it<sp/>depends<sp/>upon<sp/>the<sp/>changed<sp/>file<sp/>b.cc</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral">and<sp/>the<sp/>supplied<sp/>target<sp/>A<sp/>depends<sp/>upon<sp/>it.<sp/>A<sp/>is<sp/>not<sp/>output<sp/>as<sp/>a<sp/>build_target</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral">as<sp/>it<sp/>is<sp/>of<sp/>type<sp/>none<sp/>with<sp/>no<sp/>rules<sp/>and<sp/>actions.</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral">|test_targets|<sp/>=<sp/>[&quot;B&quot;]<sp/>B<sp/>directly<sp/>depends<sp/>upon<sp/>the<sp/>change<sp/>file<sp/>b.cc.</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral">Even<sp/>though<sp/>the<sp/>file<sp/>d.cc,<sp/>which<sp/>D<sp/>depends<sp/>upon,<sp/>has<sp/>changed<sp/>D<sp/>is<sp/>not<sp/>output</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral">as<sp/>it<sp/>was<sp/>not<sp/>supplied<sp/>by<sp/>way<sp/>of<sp/>|additional_compile_targets|<sp/>or<sp/>|test_targets|.</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral">If<sp/>the<sp/>generator<sp/>flag<sp/>analyzer_output_path<sp/>is<sp/>specified,<sp/>output<sp/>is<sp/>written</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral">there.<sp/>Otherwise<sp/>output<sp/>is<sp/>written<sp/>to<sp/>stdout.</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral">In<sp/>Gyp<sp/>the<sp/>&quot;all&quot;<sp/>target<sp/>is<sp/>shorthand<sp/>for<sp/>the<sp/>root<sp/>targets<sp/>in<sp/>the<sp/>files<sp/>passed</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral">to<sp/>gyp.<sp/>For<sp/>example,<sp/>if<sp/>file<sp/>&quot;a.gyp&quot;<sp/>contains<sp/>targets<sp/>&quot;a1&quot;<sp/>and</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral">&quot;a2&quot;,<sp/>and<sp/>file<sp/>&quot;b.gyp&quot;<sp/>contains<sp/>targets<sp/>&quot;b1&quot;<sp/>and<sp/>&quot;b2&quot;<sp/>and<sp/>&quot;a2&quot;<sp/>has<sp/>a<sp/>dependency</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral">on<sp/>&quot;b2&quot;<sp/>and<sp/>gyp<sp/>is<sp/>supplied<sp/>&quot;a.gyp&quot;<sp/>then<sp/>&quot;all&quot;<sp/>consists<sp/>of<sp/>&quot;a1&quot;<sp/>and<sp/>&quot;a2&quot;.</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral">Notice<sp/>that<sp/>&quot;b1&quot;<sp/>and<sp/>&quot;b2&quot;<sp/>are<sp/>not<sp/>in<sp/>the<sp/>&quot;all&quot;<sp/>target<sp/>as<sp/>&quot;b.gyp&quot;<sp/>was<sp/>not</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral">directly<sp/>supplied<sp/>to<sp/>gyp.<sp/>OTOH<sp/>if<sp/>both<sp/>&quot;a.gyp&quot;<sp/>and<sp/>&quot;b.gyp&quot;<sp/>are<sp/>supplied<sp/>to<sp/>gyp</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral">then<sp/>the<sp/>&quot;all&quot;<sp/>target<sp/>includes<sp/>&quot;b1&quot;<sp/>and<sp/>&quot;b2&quot;.</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1common" kindref="compound">gyp.common</ref></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>json</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>posixpath</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="namespacegyp_1_1generator_1_1analyzer_1ae9dae30b406e5b3bc7e364447a96a78b" refkind="member"><highlight class="normal">debug<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="namespacegyp_1_1generator_1_1analyzer_1ad9b17a3ba3a42255e00d33895e322d92" refkind="member"><highlight class="normal">found_dependency_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Found<sp/>dependency&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="namespacegyp_1_1generator_1_1analyzer_1a0b9d5dd240b13450932fb21ad121fc9a" refkind="member"><highlight class="normal">no_dependency_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>dependencies&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Status<sp/>when<sp/>it<sp/>should<sp/>be<sp/>assumed<sp/>that<sp/>everything<sp/>has<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="namespacegyp_1_1generator_1_1analyzer_1a14aff076479a4d5f15e80d6fffd90196" refkind="member"><highlight class="normal">all_changed_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Found<sp/>dependency<sp/>(all)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">#<sp/>MatchStatus<sp/>is<sp/>used<sp/>indicate<sp/>if<sp/>and<sp/>how<sp/>a<sp/>target<sp/>depends<sp/>upon<sp/>the<sp/>supplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">#<sp/>sources.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>target&apos;s<sp/>sources<sp/>contain<sp/>one<sp/>of<sp/>the<sp/>supplied<sp/>paths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="namespacegyp_1_1generator_1_1analyzer_1a1ec70f6a78d2164a956131dd3e37c692" refkind="member"><highlight class="normal">MATCH_STATUS_MATCHES<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>target<sp/>has<sp/>a<sp/>dependency<sp/>on<sp/>another<sp/>target<sp/>that<sp/>contains<sp/>one<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">#<sp/>supplied<sp/>paths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="namespacegyp_1_1generator_1_1analyzer_1afb3ee729857675326a19be15b77a5012" refkind="member"><highlight class="normal">MATCH_STATUS_MATCHES_BY_DEPENDENCY<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>target&apos;s<sp/>sources<sp/>weren&apos;t<sp/>in<sp/>the<sp/>supplied<sp/>paths<sp/>and<sp/>none<sp/>of<sp/>the<sp/>target&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">#<sp/>dependencies<sp/>depend<sp/>upon<sp/>a<sp/>target<sp/>that<sp/>matched.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="namespacegyp_1_1generator_1_1analyzer_1ab248be80e1d0f06e6057d3882261770a" refkind="member"><highlight class="normal">MATCH_STATUS_DOESNT_MATCH<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>target<sp/>doesn&apos;t<sp/>contain<sp/>the<sp/>source,<sp/>but<sp/>the<sp/>dependent<sp/>targets<sp/>have<sp/>not<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">#<sp/>been<sp/>visited<sp/>to<sp/>determine<sp/>a<sp/>more<sp/>specific<sp/>status<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="namespacegyp_1_1generator_1_1analyzer_1ab95d4d9818c9826ffd715ba4f9781880" refkind="member"><highlight class="normal">MATCH_STATUS_TBD<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="namespacegyp_1_1generator_1_1analyzer_1a3e0d29d026c0e306e0f3042f5385f682" refkind="member"><highlight class="normal">generator_supports_multiple_toolsets<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a640222462da2ef3272c47d05459eb35e" kindref="member">gyp.common.CrossCompileRequested</ref>()</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="namespacegyp_1_1generator_1_1analyzer_1a83e08e4984e8210506f95b660211da13" refkind="member"><highlight class="normal">generator_wants_static_library_dependencies_adjusted<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="namespacegyp_1_1generator_1_1analyzer_1af99254dad6db51b9cc8e935133787c13" refkind="member"><highlight class="normal">generator_default_variables<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dirname<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;INTERMEDIATE_DIR&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SHARED_INTERMEDIATE_DIR&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PRODUCT_DIR&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LIB_DIR&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SHARED_LIB_DIR&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="103"><highlight class="normal">]:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>generator_default_variables[dirname]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;!!!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>unused<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_PATH&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_ROOT&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_NAME&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_DIRNAME&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_EXT&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EXECUTABLE_PREFIX&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EXECUTABLE_SUFFIX&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;STATIC_LIB_PREFIX&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;STATIC_LIB_SUFFIX&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SHARED_LIB_PREFIX&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SHARED_LIB_SUFFIX&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CONFIGURATION_NAME&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="119"><highlight class="normal">]:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>generator_default_variables[unused]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="namespacegyp_1_1generator_1_1analyzer_1a0fb8fbedd8384e9c3cfe5e2fcb7a1e90" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a0fb8fbedd8384e9c3cfe5e2fcb7a1e90" kindref="member">_ToGypPath</ref>(path):</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Converts<sp/>a<sp/>path<sp/>to<sp/>the<sp/>format<sp/>used<sp/>by<sp/>gyp.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.sep<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>os.altsep<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path.replace(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="namespacegyp_1_1generator_1_1analyzer_1a08dd28bdc50e7bb4118685a6d89426d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a08dd28bdc50e7bb4118685a6d89426d9" kindref="member">_ResolveParent</ref>(path,<sp/>base_path_components):</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Resolves<sp/>|path|,<sp/>which<sp/>starts<sp/>with<sp/>at<sp/>least<sp/>one<sp/>&apos;../&apos;.<sp/>Returns<sp/>an<sp/>empty</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/>string<sp/>if<sp/>the<sp/>path<sp/>shouldn&apos;t<sp/>be<sp/>considered.<sp/>See<sp/>_AddSources()<sp/>for<sp/>a</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/>description<sp/>of<sp/>|base_path_components|.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>depth<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>path.startswith(</highlight><highlight class="stringliteral">&quot;../&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>path[3:]</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Relative<sp/>includes<sp/>may<sp/>go<sp/>outside<sp/>the<sp/>source<sp/>tree.<sp/>For<sp/>example,<sp/>an<sp/>action<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>have<sp/>inputs<sp/>in<sp/>/usr/include,<sp/>which<sp/>are<sp/>not<sp/>in<sp/>the<sp/>source<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>depth<sp/>&gt;<sp/>len(base_path_components):</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>depth<sp/>==<sp/>len(base_path_components):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">.join(base_path_components[0<sp/>:<sp/>len(base_path_components)<sp/>-<sp/>depth])</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>path</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="namespacegyp_1_1generator_1_1analyzer_1abe284df749d40a559dc1e5e3b3b3a3ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1abe284df749d40a559dc1e5e3b3b3a3ef" kindref="member">_AddSources</ref>(sources,<sp/>base_path,<sp/>base_path_components,<sp/>result):</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Extracts<sp/>valid<sp/>sources<sp/>from<sp/>|sources|<sp/>and<sp/>adds<sp/>them<sp/>to<sp/>|result|.<sp/>Each</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/>source<sp/>file<sp/>is<sp/>relative<sp/>to<sp/>|base_path|,<sp/>but<sp/>may<sp/>contain<sp/>&apos;..&apos;.<sp/>To<sp/>make</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/>resolving<sp/>&apos;..&apos;<sp/>easier<sp/>|base_path_components|<sp/>contains<sp/>each<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/>directories<sp/>in<sp/>|base_path|.<sp/>Additionally<sp/>each<sp/>source<sp/>may<sp/>contain<sp/>variables.</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/>Such<sp/>sources<sp/>are<sp/>ignored<sp/>as<sp/>it<sp/>is<sp/>assumed<sp/>dependencies<sp/>on<sp/>them<sp/>are<sp/>expressed</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/>and<sp/>tracked<sp/>in<sp/>some<sp/>other<sp/>means.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>gyp<sp/>paths<sp/>are<sp/>always<sp/>posix<sp/>style.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>source<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sources:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>len(source)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>source.startswith(</highlight><highlight class="stringliteral">&quot;!!!&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>source.startswith(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>variable<sp/>expansion<sp/>may<sp/>lead<sp/>to<sp/>//.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>org_source<sp/>=<sp/>source</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/>=<sp/>source[0]<sp/>+<sp/>source[1:].replace(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>source.startswith(</highlight><highlight class="stringliteral">&quot;../&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a08dd28bdc50e7bb4118685a6d89426d9" kindref="member">_ResolveParent</ref>(source,<sp/>base_path_components)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(source):</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(source)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(base_path<sp/>+<sp/>source)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>debug:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;AddSource&quot;</highlight><highlight class="normal">,<sp/>org_source,<sp/>result[len(result)<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="namespacegyp_1_1generator_1_1analyzer_1a2d283afc16e78b8ac026982c3b596f14" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a2d283afc16e78b8ac026982c3b596f14" kindref="member">_ExtractSourcesFromAction</ref>(action,<sp/>base_path,<sp/>base_path_components,<sp/>results):</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;inputs&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>action:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1abe284df749d40a559dc1e5e3b3b3a3ef" kindref="member">_AddSources</ref>(action[</highlight><highlight class="stringliteral">&quot;inputs&quot;</highlight><highlight class="normal">],<sp/>base_path,<sp/>base_path_components,<sp/>results)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="namespacegyp_1_1generator_1_1analyzer_1a92d90e3ac6093e77dcf0127a556f613a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a92d90e3ac6093e77dcf0127a556f613a" kindref="member">_ToLocalPath</ref>(toplevel_dir,<sp/>path):</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Converts<sp/>|path|<sp/>to<sp/>a<sp/>path<sp/>relative<sp/>to<sp/>|toplevel_dir|.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>path<sp/>==<sp/>toplevel_dir:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>path.startswith(toplevel_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path[len(toplevel_dir)<sp/>+<sp/>len(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)<sp/>:]</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="namespacegyp_1_1generator_1_1analyzer_1a0605c9e20717cccacbac819832000101" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a0605c9e20717cccacbac819832000101" kindref="member">_ExtractSources</ref>(target,<sp/>target_dict,<sp/>toplevel_dir):</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>|target|<sp/>is<sp/>either<sp/>absolute<sp/>or<sp/>relative<sp/>and<sp/>in<sp/>the<sp/>format<sp/>of<sp/>the<sp/>OS.<sp/>Gyp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>source<sp/>paths<sp/>are<sp/>always<sp/>posix.<sp/>Convert<sp/>|target|<sp/>to<sp/>a<sp/>posix<sp/>path<sp/>relative<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>|toplevel_dir_|.<sp/>This<sp/>is<sp/>done<sp/>to<sp/>make<sp/>it<sp/>easy<sp/>to<sp/>build<sp/>source<sp/>paths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>base_path<sp/>=<sp/>posixpath.dirname(<ref refid="namespacegyp_1_1generator_1_1analyzer_1a92d90e3ac6093e77dcf0127a556f613a" kindref="member">_ToLocalPath</ref>(toplevel_dir,<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a0fb8fbedd8384e9c3cfe5e2fcb7a1e90" kindref="member">_ToGypPath</ref>(target)))</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>base_path_components<sp/>=<sp/>base_path.split(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>a<sp/>trailing<sp/>&apos;/&apos;<sp/>so<sp/>that<sp/>_AddSources()<sp/>can<sp/>easily<sp/>build<sp/>paths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(base_path):</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_path<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>debug:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;ExtractSources&quot;</highlight><highlight class="normal">,<sp/>target,<sp/>base_path)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>results<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;sources&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_dict:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1abe284df749d40a559dc1e5e3b3b3a3ef" kindref="member">_AddSources</ref>(target_dict[</highlight><highlight class="stringliteral">&quot;sources&quot;</highlight><highlight class="normal">],<sp/>base_path,<sp/>base_path_components,<sp/>results)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Include<sp/>the<sp/>inputs<sp/>from<sp/>any<sp/>actions.<sp/>Any<sp/>changes<sp/>to<sp/>these<sp/>affect<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>resulting<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;actions&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_dict:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>action<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_dict[</highlight><highlight class="stringliteral">&quot;actions&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a2d283afc16e78b8ac026982c3b596f14" kindref="member">_ExtractSourcesFromAction</ref>(action,<sp/>base_path,<sp/>base_path_components,<sp/>results)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;rules&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_dict:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rule<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_dict[</highlight><highlight class="stringliteral">&quot;rules&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a2d283afc16e78b8ac026982c3b596f14" kindref="member">_ExtractSourcesFromAction</ref>(rule,<sp/>base_path,<sp/>base_path_components,<sp/>results)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classgyp_1_1generator_1_1analyzer_1_1_target" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1analyzer_1_1_target" kindref="compound">Target</ref>:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Holds<sp/>information<sp/>about<sp/>a<sp/>particular<sp/>target:</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/>deps:<sp/>set<sp/>of<sp/>Targets<sp/>this<sp/>Target<sp/>depends<sp/>upon.<sp/>This<sp/>is<sp/>not<sp/>recursive,<sp/>only<sp/>the</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>direct<sp/>dependent<sp/>Targets.</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/>match_status:<sp/>one<sp/>of<sp/>the<sp/>MatchStatus<sp/>values.</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/>back_deps:<sp/>set<sp/>of<sp/>Targets<sp/>that<sp/>have<sp/>a<sp/>dependency<sp/>on<sp/>this<sp/>Target.</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/>visited:<sp/>used<sp/>during<sp/>iteration<sp/>to<sp/>indicate<sp/>whether<sp/>we&apos;ve<sp/>visited<sp/>this<sp/>target.</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>is<sp/>used<sp/>for<sp/>two<sp/>iterations,<sp/>once<sp/>in<sp/>building<sp/>the<sp/>set<sp/>of<sp/>Targets<sp/>and</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>again<sp/>in<sp/>_GetBuildTargets().</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/>name:<sp/>fully<sp/>qualified<sp/>name<sp/>of<sp/>the<sp/>target.</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/>requires_build:<sp/>True<sp/>if<sp/>the<sp/>target<sp/>type<sp/>is<sp/>such<sp/>that<sp/>it<sp/>needs<sp/>to<sp/>be<sp/>built.</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>See<sp/>_DoesTargetTypeRequireBuild<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/>added_to_compile_targets:<sp/>used<sp/>when<sp/>determining<sp/>if<sp/>the<sp/>target<sp/>was<sp/>added<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>set<sp/>of<sp/>targets<sp/>that<sp/>needs<sp/>to<sp/>be<sp/>built.</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/>in_roots:<sp/>true<sp/>if<sp/>this<sp/>target<sp/>is<sp/>a<sp/>descendant<sp/>of<sp/>one<sp/>of<sp/>the<sp/>root<sp/>nodes.</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/>is_executable:<sp/>true<sp/>if<sp/>the<sp/>type<sp/>of<sp/>target<sp/>is<sp/>executable.</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/>is_static_library:<sp/>true<sp/>if<sp/>the<sp/>type<sp/>of<sp/>target<sp/>is<sp/>static_library.</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/>is_or_has_linked_ancestor:<sp/>true<sp/>if<sp/>the<sp/>target<sp/>does<sp/>a<sp/>link<sp/>(eg<sp/>executable),<sp/>or</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>there<sp/>is<sp/>a<sp/>target<sp/>in<sp/>back_deps<sp/>that<sp/>does<sp/>a<sp/>link.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classgyp_1_1generator_1_1analyzer_1_1_target_1ad54f512ee2ba5fd5312908a206187460" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_1ad54f512ee2ba5fd5312908a206187460" kindref="member">__init__</ref>(self,<sp/>name):</highlight></codeline>
<codeline lineno="239" refid="classgyp_1_1generator_1_1analyzer_1_1_target_1a4b0e5a126a5fbb62f363ab35cc410fa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_1a4b0e5a126a5fbb62f363ab35cc410fa1" kindref="member">deps</ref><sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="240" refid="classgyp_1_1generator_1_1analyzer_1_1_target_1a2c3ca555a942fe777e1061e21c5cf962" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_1a2c3ca555a942fe777e1061e21c5cf962" kindref="member">match_status</ref><sp/>=<sp/>MATCH_STATUS_TBD</highlight></codeline>
<codeline lineno="241" refid="classgyp_1_1generator_1_1analyzer_1_1_target_1aee75ba9ef97eb5bd90f3883bd0bde041" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_1aee75ba9ef97eb5bd90f3883bd0bde041" kindref="member">back_deps</ref><sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="242" refid="classgyp_1_1generator_1_1analyzer_1_1_target_1ad28fece66b22fe7a652ba9880a0a5c7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_1ad28fece66b22fe7a652ba9880a0a5c7a" kindref="member">name</ref><sp/>=<sp/>name</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO(sky):<sp/>I<sp/>don&apos;t<sp/>like<sp/>hanging<sp/>this<sp/>off<sp/>Target.<sp/>This<sp/>state<sp/>is<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>certain<sp/>functions<sp/>and<sp/>should<sp/>be<sp/>isolated<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classgyp_1_1generator_1_1analyzer_1_1_target_1a01e3eda32dc6b74ff49086942fe42ae2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_1a01e3eda32dc6b74ff49086942fe42ae2" kindref="member">visited</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classgyp_1_1generator_1_1analyzer_1_1_target_1a6e0f2a19e76fba491ec04491cc3c6036" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_1a6e0f2a19e76fba491ec04491cc3c6036" kindref="member">requires_build</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="classgyp_1_1generator_1_1analyzer_1_1_target_1a7ac25cb042c19dc461d0d9f6defb5e28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_1a7ac25cb042c19dc461d0d9f6defb5e28" kindref="member">added_to_compile_targets</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="classgyp_1_1generator_1_1analyzer_1_1_target_1af7b6e00c3d150719163bdc702a20fe7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_1af7b6e00c3d150719163bdc702a20fe7a" kindref="member">in_roots</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classgyp_1_1generator_1_1analyzer_1_1_target_1a721804735088a9a287bda28745b31d02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_1a721804735088a9a287bda28745b31d02" kindref="member">is_executable</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="classgyp_1_1generator_1_1analyzer_1_1_target_1add56c544318c4d28146b069a3d6e0bdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_1add56c544318c4d28146b069a3d6e0bdf" kindref="member">is_static_library</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="classgyp_1_1generator_1_1analyzer_1_1_target_1aee8c95526b6b23f14ea9db2186cb495e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_1aee8c95526b6b23f14ea9db2186cb495e" kindref="member">is_or_has_linked_ancestor</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="classgyp_1_1generator_1_1analyzer_1_1_config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1analyzer_1_1_config" kindref="compound">Config</ref>:</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Details<sp/>what<sp/>we&apos;re<sp/>looking<sp/>for</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/>files:<sp/>set<sp/>of<sp/>files<sp/>to<sp/>search<sp/>for</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/>targets:<sp/>see<sp/>file<sp/>description<sp/>for<sp/>details.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="classgyp_1_1generator_1_1analyzer_1_1_config_1a4875513c2e42e5bb3b34ba8d37b8c2e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1analyzer_1_1_config_1a4875513c2e42e5bb3b34ba8d37b8c2e7" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="260" refid="classgyp_1_1generator_1_1analyzer_1_1_config_1a1b87234d6a45264ee93d9bd934744e9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_config_1a1b87234d6a45264ee93d9bd934744e9b" kindref="member">files</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="261" refid="classgyp_1_1generator_1_1analyzer_1_1_config_1ac902955df86551d52115a9566d8b2d42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_config_1ac902955df86551d52115a9566d8b2d42" kindref="member">targets</ref><sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="262" refid="classgyp_1_1generator_1_1analyzer_1_1_config_1adc23d7f008c4fb5c6cafb03067534d6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_config_1adc23d7f008c4fb5c6cafb03067534d6c" kindref="member">additional_compile_target_names</ref><sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="263" refid="classgyp_1_1generator_1_1analyzer_1_1_config_1a0e7768b8f4595e248fd846d7618a6a87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_config_1a0e7768b8f4595e248fd846d7618a6a87" kindref="member">test_target_names</ref><sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classgyp_1_1generator_1_1analyzer_1_1_config_1acc99228162fc46728e056ece04df545a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1analyzer_1_1_config_1acc99228162fc46728e056ece04df545a" kindref="member">Init</ref>(self,<sp/>params):</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Initializes<sp/>Config.<sp/>This<sp/>is<sp/>a<sp/>separate<sp/>method<sp/>as<sp/>it<sp/>raises<sp/>an<sp/>exception</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>there<sp/>is<sp/>a<sp/>parse<sp/>error.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generator_flags<sp/>=<sp/>params.get(</highlight><highlight class="stringliteral">&quot;generator_flags&quot;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_path<sp/>=<sp/>generator_flags.get(</highlight><highlight class="stringliteral">&quot;config_path&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>config_path:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(config_path)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config<sp/>=<sp/>json.load(f)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close()</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>OSError:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>config_path)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>parse<sp/>config<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>config_path<sp/>+<sp/>str(e))</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(config,<sp/>dict):</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;config_path<sp/>must<sp/>be<sp/>a<sp/>JSON<sp/>file<sp/>containing<sp/>a<sp/>dictionary&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_config_1a1b87234d6a45264ee93d9bd934744e9b" kindref="member">files</ref><sp/>=<sp/>config.get(</highlight><highlight class="stringliteral">&quot;files&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_config_1adc23d7f008c4fb5c6cafb03067534d6c" kindref="member">additional_compile_target_names</ref><sp/>=<sp/>set(</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.get(</highlight><highlight class="stringliteral">&quot;additional_compile_targets&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_config_1a0e7768b8f4595e248fd846d7618a6a87" kindref="member">test_target_names</ref><sp/>=<sp/>set(config.get(</highlight><highlight class="stringliteral">&quot;test_targets&quot;</highlight><highlight class="normal">,<sp/>[]))</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="namespacegyp_1_1generator_1_1analyzer_1a7309e5724d576a05b802fcf6d30b996f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a7309e5724d576a05b802fcf6d30b996f" kindref="member">_WasBuildFileModified</ref>(build_file,<sp/>data,<sp/>files,<sp/>toplevel_dir):</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>true<sp/>if<sp/>the<sp/>build<sp/>file<sp/>|build_file|<sp/>is<sp/>either<sp/>in<sp/>|files|<sp/>or</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"><sp/><sp/>one<sp/>of<sp/>the<sp/>files<sp/>included<sp/>by<sp/>|build_file|<sp/>is<sp/>in<sp/>|files|.<sp/>|toplevel_dir|<sp/>is</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/>the<sp/>root<sp/>of<sp/>the<sp/>source<sp/>tree.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a92d90e3ac6093e77dcf0127a556f613a" kindref="member">_ToLocalPath</ref>(toplevel_dir,<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a0fb8fbedd8384e9c3cfe5e2fcb7a1e90" kindref="member">_ToGypPath</ref>(build_file))<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>debug:</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;gyp<sp/>file<sp/>modified&quot;</highlight><highlight class="normal">,<sp/>build_file)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>First<sp/>element<sp/>of<sp/>included_files<sp/>is<sp/>the<sp/>file<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(data[build_file][</highlight><highlight class="stringliteral">&quot;included_files&quot;</highlight><highlight class="normal">])<sp/>&lt;=<sp/>1:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>include_file<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>data[build_file][</highlight><highlight class="stringliteral">&quot;included_files&quot;</highlight><highlight class="normal">][1:]:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>|included_files|<sp/>are<sp/>relative<sp/>to<sp/>the<sp/>directory<sp/>of<sp/>the<sp/>|build_file|.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rel_include_file<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a0fb8fbedd8384e9c3cfe5e2fcb7a1e90" kindref="member">_ToGypPath</ref>(</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1common_1a44c828a533e5ef5b8d9435f02d37bb0e" kindref="member">gyp.common.UnrelativePath</ref>(include_file,<sp/>build_file)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a92d90e3ac6093e77dcf0127a556f613a" kindref="member">_ToLocalPath</ref>(toplevel_dir,<sp/>rel_include_file)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files:</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>debug:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;included<sp/>gyp<sp/>file<sp/>modified,<sp/>gyp_file=&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_file,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;included<sp/>file=&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rel_include_file,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="namespacegyp_1_1generator_1_1analyzer_1a638c053ab9bfc7e668a000144a8faac3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a638c053ab9bfc7e668a000144a8faac3" kindref="member">_GetOrCreateTargetByName</ref>(targets,<sp/>target_name):</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Creates<sp/>or<sp/>returns<sp/>the<sp/>Target<sp/>at<sp/>targets[target_name].<sp/>If<sp/>there<sp/>is<sp/>no</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/>Target<sp/>for<sp/>|target_name|<sp/>one<sp/>is<sp/>created.<sp/>Returns<sp/>a<sp/>tuple<sp/>of<sp/>whether<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/>Target<sp/>was<sp/>created<sp/>and<sp/>the<sp/>Target.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>target_name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>targets:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>targets[target_name]</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>target<sp/>=<sp/><ref refid="classgyp_1_1generator_1_1analyzer_1_1_target" kindref="compound">Target</ref>(target_name)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>targets[target_name]<sp/>=<sp/>target</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>target</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="namespacegyp_1_1generator_1_1analyzer_1a36e73efcc9d0c8574d8efc92253812ba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a36e73efcc9d0c8574d8efc92253812ba" kindref="member">_DoesTargetTypeRequireBuild</ref>(target_dict):</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>true<sp/>if<sp/>the<sp/>target<sp/>type<sp/>is<sp/>such<sp/>that<sp/>it<sp/>needs<sp/>to<sp/>be<sp/>built.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>a<sp/>&apos;none&apos;<sp/>target<sp/>has<sp/>rules<sp/>or<sp/>actions<sp/>we<sp/>assume<sp/>it<sp/>requires<sp/>a<sp/>build.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bool(</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_dict[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>target_dict.get(</highlight><highlight class="stringliteral">&quot;actions&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>target_dict.get(</highlight><highlight class="stringliteral">&quot;rules&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="namespacegyp_1_1generator_1_1analyzer_1a800f9efb065408b558eb6dd6a6c6efe0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a800f9efb065408b558eb6dd6a6c6efe0" kindref="member">_GenerateTargets</ref>(data,<sp/>target_list,<sp/>target_dicts,<sp/>toplevel_dir,<sp/>files,<sp/>build_files):</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>tuple<sp/>of<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/>.<sp/>A<sp/>dictionary<sp/>mapping<sp/>from<sp/>fully<sp/>qualified<sp/>name<sp/>to<sp/>Target.</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"><sp/><sp/>.<sp/>A<sp/>list<sp/>of<sp/>the<sp/>targets<sp/>that<sp/>have<sp/>a<sp/>source<sp/>file<sp/>in<sp/>|files|.</highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/>.<sp/>Targets<sp/>that<sp/>constitute<sp/>the<sp/>&apos;all&apos;<sp/>target.<sp/>See<sp/>description<sp/>at<sp/>top<sp/>of<sp/>file</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>details<sp/>on<sp/>the<sp/>&apos;all&apos;<sp/>target.</highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"><sp/><sp/>This<sp/>sets<sp/>the<sp/>|match_status|<sp/>of<sp/>the<sp/>targets<sp/>that<sp/>contain<sp/>any<sp/>of<sp/>the<sp/>source</highlight></codeline>
<codeline lineno="347"><highlight class="stringliteral"><sp/><sp/>files<sp/>in<sp/>|files|<sp/>to<sp/>MATCH_STATUS_MATCHES.</highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral"><sp/><sp/>|toplevel_dir|<sp/>is<sp/>the<sp/>root<sp/>of<sp/>the<sp/>source<sp/>tree.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Maps<sp/>from<sp/>target<sp/>name<sp/>to<sp/>Target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>name_to_target<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Targets<sp/>that<sp/>matched.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>matching_targets<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Queue<sp/>of<sp/>targets<sp/>to<sp/>visit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>targets_to_visit<sp/>=<sp/>target_list[:]</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Maps<sp/>from<sp/>build<sp/>file<sp/>to<sp/>a<sp/>boolean<sp/>indicating<sp/>whether<sp/>the<sp/>build<sp/>file<sp/>is<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>|files|.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>build_file_in_files<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Root<sp/>targets<sp/>across<sp/>all<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>roots<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>of<sp/>Targets<sp/>in<sp/>|build_files|.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>build_file_targets<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(targets_to_visit)<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_name<sp/>=<sp/>targets_to_visit.pop()</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>created_target,<sp/>target<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a638c053ab9bfc7e668a000144a8faac3" kindref="member">_GetOrCreateTargetByName</ref>(name_to_target,<sp/>target_name)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>created_target:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roots.add(target)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>target.visited:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.visited<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.requires_build<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a36e73efcc9d0c8574d8efc92253812ba" kindref="member">_DoesTargetTypeRequireBuild</ref>(target_dicts[target_name])</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_type<sp/>=<sp/>target_dicts[target_name][</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.is_executable<sp/>=<sp/>target_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;executable&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.is_static_library<sp/>=<sp/>target_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;static_library&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.is_or_has_linked_ancestor<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;executable&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>target_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;shared_library&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_file<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a51180f038e57ff79c30f6231d1d7958f" kindref="member">gyp.common.ParseQualifiedTarget</ref>(target_name)[0]</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>build_file<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>build_file_in_files:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_file_in_files[build_file]<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a7309e5724d576a05b802fcf6d30b996f" kindref="member">_WasBuildFileModified</ref>(</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_file,<sp/>data,<sp/>files,<sp/>toplevel_dir</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>build_file<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>build_files:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_file_targets.add(target)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>a<sp/>build<sp/>file<sp/>(or<sp/>any<sp/>of<sp/>its<sp/>included<sp/>files)<sp/>is<sp/>modified<sp/>we<sp/>assume<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>targets<sp/>in<sp/>the<sp/>file<sp/>are<sp/>modified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>build_file_in_files[build_file]:</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;matching<sp/>target<sp/>from<sp/>modified<sp/>build<sp/>file&quot;</highlight><highlight class="normal">,<sp/>target_name)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.match_status<sp/>=<sp/>MATCH_STATUS_MATCHES</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matching_targets.append(target)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sources<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a0605c9e20717cccacbac819832000101" kindref="member">_ExtractSources</ref>(</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_name,<sp/>target_dicts[target_name],<sp/>toplevel_dir</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>source<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sources:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a0fb8fbedd8384e9c3cfe5e2fcb7a1e90" kindref="member">_ToGypPath</ref>(os.path.normpath(source))<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files:</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;target&quot;</highlight><highlight class="normal">,<sp/>target_name,<sp/></highlight><highlight class="stringliteral">&quot;matches&quot;</highlight><highlight class="normal">,<sp/>source)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.match_status<sp/>=<sp/>MATCH_STATUS_MATCHES</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matching_targets.append(target)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>dependencies<sp/>to<sp/>visit<sp/>as<sp/>well<sp/>as<sp/>updating<sp/>back<sp/>pointers<sp/>for<sp/>deps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_dicts[target_name].get(</highlight><highlight class="stringliteral">&quot;dependencies&quot;</highlight><highlight class="normal">,<sp/>[]):</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targets_to_visit.append(dep)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>created_dep_target,<sp/>dep_target<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a638c053ab9bfc7e668a000144a8faac3" kindref="member">_GetOrCreateTargetByName</ref>(</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_to_target,<sp/>dep</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>created_dep_target:</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roots.discard(dep_target)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.deps.add(dep_target)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dep_target.back_deps.add(target)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name_to_target,<sp/>matching_targets,<sp/>roots<sp/>&amp;<sp/>build_file_targets</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="namespacegyp_1_1generator_1_1analyzer_1a598405ed50326e29d3ba4467e8ce5723" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a598405ed50326e29d3ba4467e8ce5723" kindref="member">_GetUnqualifiedToTargetMapping</ref>(all_targets,<sp/>to_find):</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>tuple<sp/>of<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="429"><highlight class="stringliteral"><sp/><sp/>.<sp/>mapping<sp/>(dictionary)<sp/>from<sp/>unqualified<sp/>name<sp/>to<sp/>Target<sp/>for<sp/>all<sp/>the</highlight></codeline>
<codeline lineno="430"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Targets<sp/>in<sp/>|to_find|.</highlight></codeline>
<codeline lineno="431"><highlight class="stringliteral"><sp/><sp/>.<sp/>any<sp/>target<sp/>names<sp/>not<sp/>found.<sp/>If<sp/>this<sp/>is<sp/>empty<sp/>all<sp/>targets<sp/>were<sp/>found.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>to_find:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{},<sp/>[]</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>to_find<sp/>=<sp/>set(to_find)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target_name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>all_targets.keys():</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extracted<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a51180f038e57ff79c30f6231d1d7958f" kindref="member">gyp.common.ParseQualifiedTarget</ref>(target_name)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(extracted)<sp/>&gt;<sp/>1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>extracted[1]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>to_find:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_find.remove(extracted[1])</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[extracted[1]]<sp/>=<sp/>all_targets[target_name]</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>to_find:</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result,<sp/>[]</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result,<sp/>[x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>to_find]</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="namespacegyp_1_1generator_1_1analyzer_1ab40f4cc6a82f35b993e7e56cf3e85de2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1ab40f4cc6a82f35b993e7e56cf3e85de2" kindref="member">_DoesTargetDependOnMatchingTargets</ref>(target):</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>true<sp/>if<sp/>|target|<sp/>or<sp/>any<sp/>of<sp/>its<sp/>dependencies<sp/>is<sp/>one<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="448"><highlight class="stringliteral"><sp/><sp/>targets<sp/>containing<sp/>the<sp/>files<sp/>supplied<sp/>as<sp/>input<sp/>to<sp/>analyzer.<sp/>This<sp/>updates</highlight></codeline>
<codeline lineno="449"><highlight class="stringliteral"><sp/><sp/>|matches|<sp/>of<sp/>the<sp/>Targets<sp/>as<sp/>it<sp/>recurses.</highlight></codeline>
<codeline lineno="450"><highlight class="stringliteral"><sp/><sp/>target:<sp/>the<sp/>Target<sp/>to<sp/>look<sp/>for.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>target.match_status<sp/>==<sp/>MATCH_STATUS_DOESNT_MATCH:</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.match_status<sp/>==<sp/>MATCH_STATUS_MATCHES</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>target.match_status<sp/>==<sp/>MATCH_STATUS_MATCHES_BY_DEPENDENCY</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target.deps:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1ab40f4cc6a82f35b993e7e56cf3e85de2" kindref="member">_DoesTargetDependOnMatchingTargets</ref>(dep):</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.match_status<sp/>=<sp/>MATCH_STATUS_MATCHES_BY_DEPENDENCY</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>target.name,<sp/></highlight><highlight class="stringliteral">&quot;matches<sp/>by<sp/>dep&quot;</highlight><highlight class="normal">,<sp/>dep.name)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>target.match_status<sp/>=<sp/>MATCH_STATUS_DOESNT_MATCH</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="namespacegyp_1_1generator_1_1analyzer_1a82e8e7ce9b540f326d0788992aa1bde3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a82e8e7ce9b540f326d0788992aa1bde3" kindref="member">_GetTargetsDependingOnMatchingTargets</ref>(possible_targets):</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>list<sp/>of<sp/>Targets<sp/>in<sp/>|possible_targets|<sp/>that<sp/>depend<sp/>(either</highlight></codeline>
<codeline lineno="469"><highlight class="stringliteral"><sp/><sp/>directly<sp/>on<sp/>indirectly)<sp/>on<sp/>at<sp/>least<sp/>one<sp/>of<sp/>the<sp/>targets<sp/>containing<sp/>the<sp/>files</highlight></codeline>
<codeline lineno="470"><highlight class="stringliteral"><sp/><sp/>supplied<sp/>as<sp/>input<sp/>to<sp/>analyzer.</highlight></codeline>
<codeline lineno="471"><highlight class="stringliteral"><sp/><sp/>possible_targets:<sp/>targets<sp/>to<sp/>search<sp/>from.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>found<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Targets<sp/>that<sp/>matched<sp/>by<sp/>dependency:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>possible_targets:</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1ab40f4cc6a82f35b993e7e56cf3e85de2" kindref="member">_DoesTargetDependOnMatchingTargets</ref>(target):</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found.append(target)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>found</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="namespacegyp_1_1generator_1_1analyzer_1a430b1c820fcf3e57fb76d40053da06f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a430b1c820fcf3e57fb76d40053da06f8" kindref="member">_AddCompileTargets</ref>(target,<sp/>roots,<sp/>add_if_no_ancestor,<sp/>result):</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Recurses<sp/>through<sp/>all<sp/>targets<sp/>that<sp/>depend<sp/>on<sp/>|target|,<sp/>adding<sp/>all<sp/>targets</highlight></codeline>
<codeline lineno="482"><highlight class="stringliteral"><sp/><sp/>that<sp/>need<sp/>to<sp/>be<sp/>built<sp/>(and<sp/>are<sp/>in<sp/>|roots|)<sp/>to<sp/>|result|.</highlight></codeline>
<codeline lineno="483"><highlight class="stringliteral"><sp/><sp/>roots:<sp/>set<sp/>of<sp/>root<sp/>targets.</highlight></codeline>
<codeline lineno="484"><highlight class="stringliteral"><sp/><sp/>add_if_no_ancestor:<sp/>If<sp/>true<sp/>and<sp/>there<sp/>are<sp/>no<sp/>ancestors<sp/>of<sp/>|target|<sp/>then<sp/>add</highlight></codeline>
<codeline lineno="485"><highlight class="stringliteral"><sp/><sp/>|target|<sp/>to<sp/>|result|.<sp/>|target|<sp/>must<sp/>still<sp/>be<sp/>in<sp/>|roots|.</highlight></codeline>
<codeline lineno="486"><highlight class="stringliteral"><sp/><sp/>result:<sp/>targets<sp/>that<sp/>need<sp/>to<sp/>be<sp/>built<sp/>are<sp/>added<sp/>here.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>target.visited:</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>target.visited<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>target.in_roots<sp/>=<sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>roots</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>back_dep_target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target.back_deps:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a430b1c820fcf3e57fb76d40053da06f8" kindref="member">_AddCompileTargets</ref>(back_dep_target,<sp/>roots,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>result)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.added_to_compile_targets<sp/>|=<sp/>back_dep_target.added_to_compile_targets</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.in_roots<sp/>|=<sp/>back_dep_target.in_roots</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.is_or_has_linked_ancestor<sp/>|=<sp/>back_dep_target.is_or_has_linked_ancestor</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Always<sp/>add<sp/>&apos;executable&apos;<sp/>targets.<sp/>Even<sp/>though<sp/>they<sp/>may<sp/>be<sp/>built<sp/>by<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>targets<sp/>that<sp/>depend<sp/>upon<sp/>them<sp/>it<sp/>makes<sp/>detection<sp/>of<sp/>what<sp/>is<sp/>going<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>built<sp/>easier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>And<sp/>always<sp/>add<sp/>static_libraries<sp/>that<sp/>have<sp/>no<sp/>dependencies<sp/>on<sp/>them<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>linkables.<sp/>This<sp/>is<sp/>necessary<sp/>as<sp/>the<sp/>other<sp/>dependencies<sp/>on<sp/>them<sp/>may<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>static<sp/>libraries<sp/>themselves,<sp/>which<sp/>are<sp/>not<sp/>compile<sp/>time<sp/>dependencies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>target.in_roots<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.is_executable</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>target.added_to_compile_targets</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(add_if_no_ancestor<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>target.requires_build)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.is_static_library</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>add_if_no_ancestor</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>target.is_or_has_linked_ancestor</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t\tadding<sp/>to<sp/>compile<sp/>targets&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.name,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;executable&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.is_executable,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;added_to_compile_targets&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.added_to_compile_targets,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;add_if_no_ancestor&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_if_no_ancestor,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;requires_build&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.requires_build,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is_static_library&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.is_static_library,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is_or_has_linked_ancestor&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.is_or_has_linked_ancestor,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.add(target)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.added_to_compile_targets<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537" refid="namespacegyp_1_1generator_1_1analyzer_1acca6cc8120f7c8e00c26d86782dafaeb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1acca6cc8120f7c8e00c26d86782dafaeb" kindref="member">_GetCompileTargets</ref>(matching_targets,<sp/>supplied_targets):</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>set<sp/>of<sp/>Targets<sp/>that<sp/>require<sp/>a<sp/>build.</highlight></codeline>
<codeline lineno="539"><highlight class="stringliteral"><sp/><sp/>matching_targets:<sp/>targets<sp/>that<sp/>changed<sp/>and<sp/>need<sp/>to<sp/>be<sp/>built.</highlight></codeline>
<codeline lineno="540"><highlight class="stringliteral"><sp/><sp/>supplied_targets:<sp/>set<sp/>of<sp/>targets<sp/>supplied<sp/>to<sp/>analyzer<sp/>to<sp/>search<sp/>from.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>matching_targets:</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;finding<sp/>compile<sp/>targets<sp/>for<sp/>match&quot;</highlight><highlight class="normal">,<sp/>target.name)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a430b1c820fcf3e57fb76d40053da06f8" kindref="member">_AddCompileTargets</ref>(target,<sp/>supplied_targets,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>result)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="namespacegyp_1_1generator_1_1analyzer_1ad360daaecda7734777d754b947aad18d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1ad360daaecda7734777d754b947aad18d" kindref="member">_WriteOutput</ref>(params,<sp/>**values):</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Writes<sp/>the<sp/>output,<sp/>either<sp/>to<sp/>stdout<sp/>or<sp/>a<sp/>file<sp/>is<sp/>specified.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values:</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Error:&quot;</highlight><highlight class="normal">,<sp/>values[</highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values:</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(values[</highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;targets&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values:</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[</highlight><highlight class="stringliteral">&quot;targets&quot;</highlight><highlight class="normal">].sort()</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Supplied<sp/>targets<sp/>that<sp/>depend<sp/>on<sp/>changed<sp/>files:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values[</highlight><highlight class="stringliteral">&quot;targets&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>target)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;invalid_targets&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values:</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[</highlight><highlight class="stringliteral">&quot;invalid_targets&quot;</highlight><highlight class="normal">].sort()</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;The<sp/>following<sp/>targets<sp/>were<sp/>not<sp/>found:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values[</highlight><highlight class="stringliteral">&quot;invalid_targets&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>target)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;build_targets&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values:</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[</highlight><highlight class="stringliteral">&quot;build_targets&quot;</highlight><highlight class="normal">].sort()</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Targets<sp/>that<sp/>require<sp/>a<sp/>build:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values[</highlight><highlight class="stringliteral">&quot;build_targets&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>target)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;compile_targets&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values:</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[</highlight><highlight class="stringliteral">&quot;compile_targets&quot;</highlight><highlight class="normal">].sort()</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Targets<sp/>that<sp/>need<sp/>to<sp/>be<sp/>built:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values[</highlight><highlight class="stringliteral">&quot;compile_targets&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>target)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;test_targets&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values:</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[</highlight><highlight class="stringliteral">&quot;test_targets&quot;</highlight><highlight class="normal">].sort()</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Test<sp/>targets:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values[</highlight><highlight class="stringliteral">&quot;test_targets&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>target)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>output_path<sp/>=<sp/>params.get(</highlight><highlight class="stringliteral">&quot;generator_flags&quot;</highlight><highlight class="normal">,<sp/>{}).get(</highlight><highlight class="stringliteral">&quot;analyzer_output_path&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>output_path:</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(json.dumps(values))</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(output_path,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(json.dumps(values)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close()</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>OSError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Error<sp/>writing<sp/>to<sp/>output<sp/>file&quot;</highlight><highlight class="normal">,<sp/>output_path,<sp/>str(e))</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="namespacegyp_1_1generator_1_1analyzer_1ae3600023757f94202c43f813ab474119" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1ae3600023757f94202c43f813ab474119" kindref="member">_WasGypIncludeFileModified</ref>(params,<sp/>files):</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>true<sp/>if<sp/>one<sp/>of<sp/>the<sp/>files<sp/>in<sp/>|files|<sp/>is<sp/>in<sp/>the<sp/>set<sp/>of<sp/>included</highlight></codeline>
<codeline lineno="594"><highlight class="stringliteral"><sp/><sp/>files.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>params[</highlight><highlight class="stringliteral">&quot;options&quot;</highlight><highlight class="normal">].includes:</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>include<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>params[</highlight><highlight class="stringliteral">&quot;options&quot;</highlight><highlight class="normal">].includes:</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a0fb8fbedd8384e9c3cfe5e2fcb7a1e90" kindref="member">_ToGypPath</ref>(os.path.normpath(include))<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files:</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Include<sp/>file<sp/>modified,<sp/>assuming<sp/>all<sp/>changed&quot;</highlight><highlight class="normal">,<sp/>include)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="namespacegyp_1_1generator_1_1analyzer_1a1317b3e31abf71aefae38cb1ddc6297f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a1317b3e31abf71aefae38cb1ddc6297f" kindref="member">_NamesNotIn</ref>(names,<sp/>mapping):</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>list<sp/>of<sp/>the<sp/>values<sp/>in<sp/>|names|<sp/>that<sp/>are<sp/>not<sp/>in<sp/>|mapping|.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[name<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>names<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mapping]</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="namespacegyp_1_1generator_1_1analyzer_1a46ef0699855052658cd0a41170234005" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a46ef0699855052658cd0a41170234005" kindref="member">_LookupTargets</ref>(names,<sp/>mapping):</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>list<sp/>of<sp/>the<sp/>mapping[name]<sp/>for<sp/>each<sp/>value<sp/>in<sp/>|names|<sp/>that<sp/>is<sp/>in</highlight></codeline>
<codeline lineno="610"><highlight class="stringliteral"><sp/><sp/>|mapping|.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[mapping[name]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>names<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mapping]</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="namespacegyp_1_1generator_1_1analyzer_1a074754ac25afdce0d8cf92e48dd53c45" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1a074754ac25afdce0d8cf92e48dd53c45" kindref="member">CalculateVariables</ref>(default_variables,<sp/>params):</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Calculate<sp/>additional<sp/>variables<sp/>for<sp/>use<sp/>in<sp/>the<sp/>build<sp/>(called<sp/>by<sp/>gyp).&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>flavor<sp/>=<sp/><ref refid="namespacegyp_1_1common_1aeb48ab17a03cd7c40f5ad72fac713486" kindref="member">gyp.common.GetFlavor</ref>(params)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flavor<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mac&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_variables.setdefault(</highlight><highlight class="stringliteral">&quot;OS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mac&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>flavor<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;win&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_variables.setdefault(</highlight><highlight class="stringliteral">&quot;OS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;win&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1msvs__emulation_1a2316a951538835fe54c73af2cc38f12a" kindref="member">gyp.msvs_emulation.CalculateCommonVariables</ref>(default_variables,<sp/>params)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operating_system<sp/>=<sp/>flavor</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flavor<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;android&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operating_system<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;linux&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Keep<sp/>this<sp/>legacy<sp/>behavior<sp/>for<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_variables.setdefault(</highlight><highlight class="stringliteral">&quot;OS&quot;</highlight><highlight class="normal">,<sp/>operating_system)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator" kindref="compound">TargetCalculator</ref>:</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Calculates<sp/>the<sp/>matching<sp/>test_targets<sp/>and<sp/>matching<sp/>compile_targets.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a022a5c7be9f50b065e891d012700d56e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a022a5c7be9f50b065e891d012700d56e" kindref="member">__init__</ref>(</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>files,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>additional_compile_target_names,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_target_names,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_list,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_dicts,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toplevel_dir,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_files,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="643" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a2b2ce9670cffcadc166a3662f884a86a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a2b2ce9670cffcadc166a3662f884a86a" kindref="member">_additional_compile_target_names</ref><sp/>=<sp/>set(additional_compile_target_names)</highlight></codeline>
<codeline lineno="644" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ae22aa315c48766b95a31896597db0dbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ae22aa315c48766b95a31896597db0dbc" kindref="member">_test_target_names</ref><sp/>=<sp/>set(test_target_names)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="646" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a9ed45193c080043d57253e8ed7837b4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a9ed45193c080043d57253e8ed7837b4e" kindref="member">_name_to_target</ref>,</highlight></codeline>
<codeline lineno="647" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1aaf6160e01859a39ae8dc92d733f5a5e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1aaf6160e01859a39ae8dc92d733f5a5e2" kindref="member">_changed_targets</ref>,</highlight></codeline>
<codeline lineno="648" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a369b4a2e87d287f8c8286e97acd49fa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a369b4a2e87d287f8c8286e97acd49fa4" kindref="member">_root_targets</ref>,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a800f9efb065408b558eb6dd6a6c6efe0" kindref="member">_GenerateTargets</ref>(</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,<sp/>target_list,<sp/>target_dicts,<sp/>toplevel_dir,<sp/>frozenset(files),<sp/>build_files</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="653" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1af4cd148e3e47206dc6d877d0c75e7295" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1af4cd148e3e47206dc6d877d0c75e7295" kindref="member">_unqualified_mapping</ref>,</highlight></codeline>
<codeline lineno="654" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1aa30408fef14af0a8992f61e8e7d8d0e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1aa30408fef14af0a8992f61e8e7d8d0e4" kindref="member">invalid_targets</ref>,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a598405ed50326e29d3ba4467e8ce5723" kindref="member">_GetUnqualifiedToTargetMapping</ref>(</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a9ed45193c080043d57253e8ed7837b4e" kindref="member">_name_to_target</ref>,<sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ab4908bb56a38361e1010b3b2c0869d9f" kindref="member">_supplied_target_names_no_all</ref>()</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ae49ad7bb5d66548e53fae33ee533a49b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ae49ad7bb5d66548e53fae33ee533a49b" kindref="member">_supplied_target_names</ref>(self):</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a2b2ce9670cffcadc166a3662f884a86a" kindref="member">_additional_compile_target_names</ref><sp/>|<sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ae22aa315c48766b95a31896597db0dbc" kindref="member">_test_target_names</ref></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ab4908bb56a38361e1010b3b2c0869d9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ab4908bb56a38361e1010b3b2c0869d9f" kindref="member">_supplied_target_names_no_all</ref>(self):</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>supplied<sp/>test<sp/>targets<sp/>without<sp/>&apos;all&apos;.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ae49ad7bb5d66548e53fae33ee533a49b" kindref="member">_supplied_target_names</ref>()</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.discard(</highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ad8661a92b29ff342aca20c97581266b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ad8661a92b29ff342aca20c97581266b1" kindref="member">is_build_impacted</ref>(self):</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>true<sp/>if<sp/>the<sp/>supplied<sp/>files<sp/>impact<sp/>the<sp/>build<sp/>at<sp/>all.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1aaf6160e01859a39ae8dc92d733f5a5e2" kindref="member">_changed_targets</ref></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a7766f7a977afc1c9b14ad359d7593247" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a7766f7a977afc1c9b14ad359d7593247" kindref="member">find_matching_test_target_names</ref>(self):</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>set<sp/>of<sp/>output<sp/>test<sp/>targets.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ad8661a92b29ff342aca20c97581266b1" kindref="member">is_build_impacted</ref>()</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>the<sp/>test<sp/>targets<sp/>first.<sp/>&apos;all&apos;<sp/>is<sp/>special<sp/>cased<sp/>to<sp/>mean<sp/>all<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>root<sp/>targets.<sp/>To<sp/>deal<sp/>with<sp/>all<sp/>the<sp/>supplied<sp/>|test_targets|<sp/>are<sp/>expanded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>include<sp/>the<sp/>root<sp/>targets<sp/>during<sp/>lookup.<sp/>If<sp/>any<sp/>of<sp/>the<sp/>root<sp/>targets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>match,<sp/>we<sp/>remove<sp/>it<sp/>and<sp/>replace<sp/>it<sp/>with<sp/>&apos;all&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_target_names_no_all<sp/>=<sp/>set(self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ae22aa315c48766b95a31896597db0dbc" kindref="member">_test_target_names</ref>)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_target_names_no_all.discard(</highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_targets_no_all<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a46ef0699855052658cd0a41170234005" kindref="member">_LookupTargets</ref>(</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_target_names_no_all,<sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1af4cd148e3e47206dc6d877d0c75e7295" kindref="member">_unqualified_mapping</ref></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_target_names_contains_all<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ae22aa315c48766b95a31896597db0dbc" kindref="member">_test_target_names</ref></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>test_target_names_contains_all:</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_targets<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(set(test_targets_no_all)<sp/>|<sp/>set(self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a369b4a2e87d287f8c8286e97acd49fa4" kindref="member">_root_targets</ref>))</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_targets<sp/>=<sp/>[x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>test_targets_no_all]</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;supplied<sp/>test_targets&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target_name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ae22aa315c48766b95a31896597db0dbc" kindref="member">_test_target_names</ref>:</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>target_name)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;found<sp/>test_targets&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>test_targets:</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>target.name)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;searching<sp/>for<sp/>matching<sp/>test<sp/>targets&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matching_test_targets<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a82e8e7ce9b540f326d0788992aa1bde3" kindref="member">_GetTargetsDependingOnMatchingTargets</ref>(test_targets)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matching_test_targets_contains_all<sp/>=<sp/>test_target_names_contains_all<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>set(</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matching_test_targets</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&amp;<sp/>set(self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a369b4a2e87d287f8c8286e97acd49fa4" kindref="member">_root_targets</ref>)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>matching_test_targets_contains_all:</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Remove<sp/>any<sp/>of<sp/>the<sp/>targets<sp/>for<sp/>all<sp/>that<sp/>were<sp/>not<sp/>explicitly<sp/>supplied,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>&apos;all&apos;<sp/>is<sp/>subsequentely<sp/>added<sp/>to<sp/>the<sp/>matching<sp/>names<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matching_test_targets<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(set(matching_test_targets)<sp/>&amp;<sp/>set(test_targets_no_all))</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;matched<sp/>test_targets&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>matching_test_targets:</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>target.name)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matching_target_names<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1common_1a51180f038e57ff79c30f6231d1d7958f" kindref="member">gyp.common.ParseQualifiedTarget</ref>(target.name)[1]</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>matching_test_targets</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>matching_test_targets_contains_all:</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matching_target_names.append(</highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\tall&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matching_target_names</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a28e627c2ffb2f85f38fd1a10e9dd15ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a28e627c2ffb2f85f38fd1a10e9dd15ea" kindref="member">find_matching_compile_target_names</ref>(self):</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>set<sp/>of<sp/>output<sp/>compile<sp/>targets.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ad8661a92b29ff342aca20c97581266b1" kindref="member">is_build_impacted</ref>()</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compile<sp/>targets<sp/>are<sp/>found<sp/>by<sp/>searching<sp/>up<sp/>from<sp/>changed<sp/>targets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Reset<sp/>the<sp/>visited<sp/>status<sp/>for<sp/>_GetBuildTargets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a9ed45193c080043d57253e8ed7837b4e" kindref="member">_name_to_target</ref>.values():</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.visited<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>supplied_targets<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a46ef0699855052658cd0a41170234005" kindref="member">_LookupTargets</ref>(</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ab4908bb56a38361e1010b3b2c0869d9f" kindref="member">_supplied_target_names_no_all</ref>(),<sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1af4cd148e3e47206dc6d877d0c75e7295" kindref="member">_unqualified_mapping</ref></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1ae49ad7bb5d66548e53fae33ee533a49b" kindref="member">_supplied_target_names</ref>():</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>supplied_targets<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(set(supplied_targets)<sp/>|<sp/>set(self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1a369b4a2e87d287f8c8286e97acd49fa4" kindref="member">_root_targets</ref>))</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Supplied<sp/>test_targets<sp/>&amp;<sp/>compile_targets&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>supplied_targets:</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>target.name)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Finding<sp/>compile<sp/>targets&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compile_targets<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1acca6cc8120f7c8e00c26d86782dafaeb" kindref="member">_GetCompileTargets</ref>(self.<ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator_1aaf6160e01859a39ae8dc92d733f5a5e2" kindref="member">_changed_targets</ref>,<sp/>supplied_targets)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1common_1a51180f038e57ff79c30f6231d1d7958f" kindref="member">gyp.common.ParseQualifiedTarget</ref>(target.name)[1]</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>compile_targets</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746" refid="namespacegyp_1_1generator_1_1analyzer_1ac24839ed451580122c6c3eed49982cf0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1analyzer_1ac24839ed451580122c6c3eed49982cf0" kindref="member">GenerateOutput</ref>(target_list,<sp/>target_dicts,<sp/>data,<sp/>params):</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Called<sp/>by<sp/>gyp<sp/>as<sp/>the<sp/>final<sp/>stage.<sp/>Outputs<sp/>results.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>config<sp/>=<sp/><ref refid="classgyp_1_1generator_1_1analyzer_1_1_config" kindref="compound">Config</ref>()</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.Init(params)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>config.files:</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Must<sp/>specify<sp/>files<sp/>to<sp/>analyze<sp/>via<sp/>config_path<sp/>generator<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;flag&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toplevel_dir<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1a0fb8fbedd8384e9c3cfe5e2fcb7a1e90" kindref="member">_ToGypPath</ref>(os.path.abspath(params[</highlight><highlight class="stringliteral">&quot;options&quot;</highlight><highlight class="normal">].toplevel_dir))</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>debug:</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;toplevel_dir&quot;</highlight><highlight class="normal">,<sp/>toplevel_dir)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1ae3600023757f94202c43f813ab474119" kindref="member">_WasGypIncludeFileModified</ref>(params,<sp/>config.files):</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_dict<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">:<sp/>all_changed_string,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;test_targets&quot;</highlight><highlight class="normal">:<sp/>list(config.test_target_names),</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;compile_targets&quot;</highlight><highlight class="normal">:<sp/>list(</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.additional_compile_target_names<sp/>|<sp/>config.test_target_names</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1ad360daaecda7734777d754b947aad18d" kindref="member">_WriteOutput</ref>(params,<sp/>**result_dict)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculator<sp/>=<sp/><ref refid="classgyp_1_1generator_1_1analyzer_1_1_target_calculator" kindref="compound">TargetCalculator</ref>(</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.files,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.additional_compile_target_names,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.test_target_names,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_list,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_dicts,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toplevel_dir,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params[</highlight><highlight class="stringliteral">&quot;build_files&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>calculator.is_build_impacted():</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_dict<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">:<sp/>no_dependency_string,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;test_targets&quot;</highlight><highlight class="normal">:<sp/>[],</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;compile_targets&quot;</highlight><highlight class="normal">:<sp/>[],</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>calculator.invalid_targets:</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_dict[</highlight><highlight class="stringliteral">&quot;invalid_targets&quot;</highlight><highlight class="normal">]<sp/>=<sp/>calculator.invalid_targets</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1ad360daaecda7734777d754b947aad18d" kindref="member">_WriteOutput</ref>(params,<sp/>**result_dict)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_target_names<sp/>=<sp/>calculator.find_matching_test_target_names()</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compile_target_names<sp/>=<sp/>calculator.find_matching_compile_target_names()</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found_at_least_one_target<sp/>=<sp/>compile_target_names<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>test_target_names</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_dict<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;test_targets&quot;</highlight><highlight class="normal">:<sp/>test_target_names,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">:<sp/>found_dependency_string</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>found_at_least_one_target</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>no_dependency_string,</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;compile_targets&quot;</highlight><highlight class="normal">:<sp/>list(set(compile_target_names)<sp/>|<sp/>set(test_target_names)),</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>calculator.invalid_targets:</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_dict[</highlight><highlight class="stringliteral">&quot;invalid_targets&quot;</highlight><highlight class="normal">]<sp/>=<sp/>calculator.invalid_targets</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1ad360daaecda7734777d754b947aad18d" kindref="member">_WriteOutput</ref>(params,<sp/>**result_dict)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1analyzer_1ad360daaecda7734777d754b947aad18d" kindref="member">_WriteOutput</ref>(params,<sp/>error=str(e))</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/generator/analyzer.py"/>
  </compounddef>
</doxygen>
