<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2rimraf_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">[![Build<sp/>Status](https://travis-ci.org/isaacs/rimraf.svg?branch=master)](https://travis-ci.org/isaacs/rimraf)<sp/>[![Dependency<sp/>Status](https://david-dm.org/isaacs/rimraf.svg)](https://david-dm.org/isaacs/rimraf)<sp/>[![devDependency<sp/>Status](https://david-dm.org/isaacs/rimraf/dev-status.svg)](https://david-dm.org/isaacs/rimraf#info=devDependencies)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>[UNIX<sp/>command](http://en.wikipedia.org/wiki/Rm_(Unix))<sp/>`rm<sp/>-rf`<sp/>for<sp/>node.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Install<sp/>with<sp/>`npm<sp/>install<sp/>rimraf`,<sp/>or<sp/>just<sp/>drop<sp/>rimraf.js<sp/>somewhere.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`rimraf(f,<sp/>[opts],<sp/>callback)`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>first<sp/>parameter<sp/>will<sp/>be<sp/>interpreted<sp/>as<sp/>a<sp/>globbing<sp/>pattern<sp/>for<sp/>files.<sp/>If<sp/>you</highlight></codeline>
<codeline><highlight class="normal">want<sp/>to<sp/>disable<sp/>globbing<sp/>you<sp/>can<sp/>do<sp/>so<sp/>with<sp/>`opts.disableGlob`<sp/>(defaults<sp/>to</highlight></codeline>
<codeline><highlight class="normal">`false`).<sp/>This<sp/>might<sp/>be<sp/>handy,<sp/>for<sp/>instance,<sp/>if<sp/>you<sp/>have<sp/>filenames<sp/>that<sp/>contain</highlight></codeline>
<codeline><highlight class="normal">globbing<sp/>wildcard<sp/>characters.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>callback<sp/>will<sp/>be<sp/>called<sp/>with<sp/>an<sp/>error<sp/>if<sp/>there<sp/>is<sp/>one.<sp/><sp/>Certain</highlight></codeline>
<codeline><highlight class="normal">errors<sp/>are<sp/>handled<sp/>for<sp/>you:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>Windows:<sp/>`EBUSY`<sp/>and<sp/>`ENOTEMPTY`<sp/>-<sp/>rimraf<sp/>will<sp/>back<sp/>off<sp/>a<sp/>maximum<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`opts.maxBusyTries`<sp/>times<sp/>before<sp/>giving<sp/>up,<sp/>adding<sp/>100ms<sp/>of<sp/>wait</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>between<sp/>each<sp/>attempt.<sp/><sp/>The<sp/>default<sp/>`maxBusyTries`<sp/>is<sp/>3.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`ENOENT`<sp/>-<sp/>If<sp/>the<sp/>file<sp/>doesn&apos;t<sp/>exist,<sp/>rimraf<sp/>will<sp/>return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>successfully,<sp/>since<sp/>your<sp/>desired<sp/>outcome<sp/>is<sp/>already<sp/>the<sp/>case.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`EMFILE`<sp/>-<sp/>Since<sp/>`readdir`<sp/>requires<sp/>opening<sp/>a<sp/>file<sp/>descriptor,<sp/>it&apos;s</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>possible<sp/>to<sp/>hit<sp/>`EMFILE`<sp/>if<sp/>too<sp/>many<sp/>file<sp/>descriptors<sp/>are<sp/>in<sp/>use.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>In<sp/>the<sp/>sync<sp/>case,<sp/>there&apos;s<sp/>nothing<sp/>to<sp/>be<sp/>done<sp/>for<sp/>this.<sp/><sp/>But<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>async<sp/>case,<sp/>rimraf<sp/>will<sp/>gradually<sp/>back<sp/>off<sp/>with<sp/>timeouts<sp/>up<sp/>to</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`opts.emfileWait`<sp/>ms,<sp/>which<sp/>defaults<sp/>to<sp/>1000.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>options</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>unlink,<sp/>chmod,<sp/>stat,<sp/>lstat,<sp/>rmdir,<sp/>readdir,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unlinkSync,<sp/>chmodSync,<sp/>statSync,<sp/>lstatSync,<sp/>rmdirSync,<sp/>readdirSync</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>In<sp/>order<sp/>to<sp/>use<sp/>a<sp/>custom<sp/>file<sp/>system<sp/>library,<sp/>you<sp/>can<sp/>override</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>specific<sp/>fs<sp/>functions<sp/>on<sp/>the<sp/>options<sp/>object.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>If<sp/>any<sp/>of<sp/>these<sp/>functions<sp/>are<sp/>present<sp/>on<sp/>the<sp/>options<sp/>object,<sp/>then</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>supplied<sp/>function<sp/>will<sp/>be<sp/>used<sp/>instead<sp/>of<sp/>the<sp/>default<sp/>fs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>method.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Sync<sp/>methods<sp/>are<sp/>only<sp/>relevant<sp/>for<sp/>`rimraf.sync()`,<sp/>of<sp/>course.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>For<sp/>example:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```javascript</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>myCustomFS<sp/>=<sp/>require(&apos;some-custom-fs&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>rimraf(&apos;some-thing&apos;,<sp/>myCustomFS,<sp/>callback)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>maxBusyTries</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>If<sp/>an<sp/>`EBUSY`,<sp/>`ENOTEMPTY`,<sp/>or<sp/>`EPERM`<sp/>error<sp/>code<sp/>is<sp/>encountered</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>on<sp/>Windows<sp/>systems,<sp/>then<sp/>rimraf<sp/>will<sp/>retry<sp/>with<sp/>a<sp/>linear<sp/>backoff</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wait<sp/>of<sp/>100ms<sp/>longer<sp/>on<sp/>each<sp/>try.<sp/><sp/>The<sp/>default<sp/>maxBusyTries<sp/>is<sp/>3.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Only<sp/>relevant<sp/>for<sp/>async<sp/>usage.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>emfileWait</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>If<sp/>an<sp/>`EMFILE`<sp/>error<sp/>is<sp/>encountered,<sp/>then<sp/>rimraf<sp/>will<sp/>retry</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>repeatedly<sp/>with<sp/>a<sp/>linear<sp/>backoff<sp/>of<sp/>1ms<sp/>longer<sp/>on<sp/>each<sp/>try,<sp/>until</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>timeout<sp/>counter<sp/>hits<sp/>this<sp/>max.<sp/><sp/>The<sp/>default<sp/>limit<sp/>is<sp/>1000.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>If<sp/>you<sp/>repeatedly<sp/>encounter<sp/>`EMFILE`<sp/>errors,<sp/>then<sp/>consider<sp/>using</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[graceful-fs](http://npm.im/graceful-fs)<sp/>in<sp/>your<sp/>program.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Only<sp/>relevant<sp/>for<sp/>async<sp/>usage.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>glob</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Set<sp/>to<sp/>`false`<sp/>to<sp/>disable<sp/>[glob](http://npm.im/glob)<sp/>pattern</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>matching.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Set<sp/>to<sp/>an<sp/>object<sp/>to<sp/>pass<sp/>options<sp/>to<sp/>the<sp/>glob<sp/>module.<sp/><sp/>The<sp/>default</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glob<sp/>options<sp/>are<sp/>`{<sp/>nosort:<sp/>true,<sp/>silent:<sp/>true<sp/>}`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Glob<sp/>version<sp/>6<sp/>is<sp/>used<sp/>in<sp/>this<sp/>module.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Relevant<sp/>for<sp/>both<sp/>sync<sp/>and<sp/>async<sp/>usage.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>disableGlob</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Set<sp/>to<sp/>any<sp/>non-falsey<sp/>value<sp/>to<sp/>disable<sp/>globbing<sp/>entirely.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(Equivalent<sp/>to<sp/>setting<sp/>`glob:<sp/>false`.)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>rimraf.sync</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">It<sp/>can<sp/>remove<sp/>stuff<sp/>synchronously,<sp/>too.<sp/><sp/>But<sp/>that&apos;s<sp/>not<sp/>so<sp/>good.<sp/><sp/>Use</highlight></codeline>
<codeline><highlight class="normal">the<sp/>async<sp/>API.<sp/><sp/>It&apos;s<sp/>better.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>CLI</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>installed<sp/>with<sp/>`npm<sp/>install<sp/>rimraf<sp/>-g`<sp/>it<sp/>can<sp/>be<sp/>used<sp/>as<sp/>a<sp/>global</highlight></codeline>
<codeline><highlight class="normal">command<sp/>`rimraf<sp/>&lt;path&gt;<sp/>[&lt;path&gt;<sp/>...]`<sp/>which<sp/>is<sp/>useful<sp/>for<sp/>cross<sp/>platform<sp/>support.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>mkdirp</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>need<sp/>to<sp/>create<sp/>a<sp/>directory<sp/>recursively,<sp/>check<sp/>out</highlight></codeline>
<codeline><highlight class="normal">[mkdirp](https://github.com/substack/node-mkdirp).</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/rimraf/README.md"/>
  </compounddef>
</doxygen>
