<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2tar_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>node-tar</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Fast<sp/>and<sp/>full-featured<sp/>Tar<sp/>for<sp/>Node.js</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>API<sp/>is<sp/>designed<sp/>to<sp/>mimic<sp/>the<sp/>behavior<sp/>of<sp/>`tar(1)`<sp/>on<sp/>unix<sp/>systems.</highlight></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>are<sp/>familiar<sp/>with<sp/>how<sp/>tar<sp/>works,<sp/>most<sp/>of<sp/>this<sp/>will<sp/>hopefully<sp/>be</highlight></codeline>
<codeline><highlight class="normal">straightforward<sp/>for<sp/>you.<sp/><sp/>If<sp/>not,<sp/>then<sp/>hopefully<sp/>this<sp/>module<sp/>can<sp/>teach</highlight></codeline>
<codeline><highlight class="normal">you<sp/>useful<sp/>unix<sp/>skills<sp/>that<sp/>may<sp/>come<sp/>in<sp/>handy<sp/>someday<sp/>:)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Background</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>&quot;tar<sp/>file&quot;<sp/>or<sp/>&quot;tarball&quot;<sp/>is<sp/>an<sp/>archive<sp/>of<sp/>file<sp/>system<sp/>entries</highlight></codeline>
<codeline><highlight class="normal">(directories,<sp/>files,<sp/>links,<sp/>etc.)<sp/><sp/>The<sp/>name<sp/>comes<sp/>from<sp/>&quot;tape<sp/>archive&quot;.</highlight></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>run<sp/>`man<sp/>tar`<sp/>on<sp/>almost<sp/>any<sp/>Unix<sp/>command<sp/>line,<sp/>you&apos;ll<sp/>learn</highlight></codeline>
<codeline><highlight class="normal">quite<sp/>a<sp/>bit<sp/>about<sp/>what<sp/>it<sp/>can<sp/>do,<sp/>and<sp/>its<sp/>history.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Tar<sp/>has<sp/>5<sp/>main<sp/>top-level<sp/>commands:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>`c`<sp/>Create<sp/>an<sp/>archive</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`r`<sp/>Replace<sp/>entries<sp/>within<sp/>an<sp/>archive</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`u`<sp/>Update<sp/>entries<sp/>within<sp/>an<sp/>archive<sp/>(ie,<sp/>replace<sp/>if<sp/>they&apos;re<sp/>newer)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`t`<sp/>List<sp/>out<sp/>the<sp/>contents<sp/>of<sp/>an<sp/>archive</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`x`<sp/>Extract<sp/>an<sp/>archive<sp/>to<sp/>disk</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>other<sp/>flags<sp/>and<sp/>options<sp/>modify<sp/>how<sp/>this<sp/>top<sp/>level<sp/>function<sp/>works.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>High-Level<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">These<sp/>5<sp/>functions<sp/>are<sp/>the<sp/>high-level<sp/>API.<sp/><sp/>All<sp/>of<sp/>them<sp/>have<sp/>a</highlight></codeline>
<codeline><highlight class="normal">single-character<sp/>name<sp/>(for<sp/>unix<sp/>nerds<sp/>familiar<sp/>with<sp/>`tar(1)`)<sp/>as<sp/>well</highlight></codeline>
<codeline><highlight class="normal">as<sp/>a<sp/>long<sp/>name<sp/>(for<sp/>everyone<sp/>else).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">All<sp/>the<sp/>high-level<sp/>functions<sp/>take<sp/>the<sp/>following<sp/>arguments,<sp/>all<sp/>three</highlight></codeline>
<codeline><highlight class="normal">of<sp/>which<sp/>are<sp/>optional<sp/>and<sp/>may<sp/>be<sp/>omitted.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>`options`<sp/>-<sp/>An<sp/>optional<sp/>object<sp/>specifying<sp/>various<sp/>options</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>`paths`<sp/>-<sp/>An<sp/>array<sp/>of<sp/>paths<sp/>to<sp/>add<sp/>or<sp/>extract</highlight></codeline>
<codeline><highlight class="normal">3.<sp/>`callback`<sp/>-<sp/>Called<sp/>when<sp/>the<sp/>command<sp/>is<sp/>completed,<sp/>if<sp/>async.<sp/><sp/>(If</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>sync<sp/>or<sp/>no<sp/>file<sp/>specified,<sp/>providing<sp/>a<sp/>callback<sp/>throws<sp/>a</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>`TypeError`.)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>the<sp/>command<sp/>is<sp/>sync<sp/>(ie,<sp/>if<sp/>`options.sync=true`),<sp/>then<sp/>the</highlight></codeline>
<codeline><highlight class="normal">callback<sp/>is<sp/>not<sp/>allowed,<sp/>since<sp/>the<sp/>action<sp/>will<sp/>be<sp/>completed<sp/>immediately.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>a<sp/>`file`<sp/>argument<sp/>is<sp/>specified,<sp/>and<sp/>the<sp/>command<sp/>is<sp/>async,<sp/>then<sp/>a</highlight></codeline>
<codeline><highlight class="normal">`Promise`<sp/>is<sp/>returned.<sp/><sp/>In<sp/>this<sp/>case,<sp/>if<sp/>async,<sp/>a<sp/>callback<sp/>may<sp/>be</highlight></codeline>
<codeline><highlight class="normal">provided<sp/>which<sp/>is<sp/>called<sp/>when<sp/>the<sp/>command<sp/>is<sp/>completed.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>a<sp/>`file`<sp/>option<sp/>is<sp/>not<sp/>specified,<sp/>then<sp/>a<sp/>stream<sp/>is<sp/>returned.<sp/><sp/>For</highlight></codeline>
<codeline><highlight class="normal">`create`,<sp/>this<sp/>is<sp/>a<sp/>readable<sp/>stream<sp/>of<sp/>the<sp/>generated<sp/>archive.<sp/><sp/>For</highlight></codeline>
<codeline><highlight class="normal">`list`<sp/>and<sp/>`extract`<sp/>this<sp/>is<sp/>a<sp/>writable<sp/>stream<sp/>that<sp/>an<sp/>archive<sp/>should</highlight></codeline>
<codeline><highlight class="normal">be<sp/>written<sp/>into.<sp/><sp/>If<sp/>a<sp/>file<sp/>is<sp/>not<sp/>specified,<sp/>then<sp/>a<sp/>callback<sp/>is<sp/>not</highlight></codeline>
<codeline><highlight class="normal">allowed,<sp/>because<sp/>you&apos;re<sp/>already<sp/>getting<sp/>a<sp/>stream<sp/>to<sp/>work<sp/>with.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`replace`<sp/>and<sp/>`update`<sp/>only<sp/>work<sp/>on<sp/>existing<sp/>archives,<sp/>and<sp/>so<sp/>require</highlight></codeline>
<codeline><highlight class="normal">a<sp/>`file`<sp/>argument.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Sync<sp/>commands<sp/>without<sp/>a<sp/>file<sp/>argument<sp/>return<sp/>a<sp/>stream<sp/>that<sp/>acts<sp/>on<sp/>its</highlight></codeline>
<codeline><highlight class="normal">input<sp/>immediately<sp/>in<sp/>the<sp/>same<sp/>tick.<sp/><sp/>For<sp/>readable<sp/>streams,<sp/>this<sp/>means</highlight></codeline>
<codeline><highlight class="normal">that<sp/>all<sp/>of<sp/>the<sp/>data<sp/>is<sp/>immediately<sp/>available<sp/>by<sp/>calling</highlight></codeline>
<codeline><highlight class="normal">`stream.read()`.<sp/><sp/>For<sp/>writable<sp/>streams,<sp/>it<sp/>will<sp/>be<sp/>acted<sp/>upon<sp/>as<sp/>soon</highlight></codeline>
<codeline><highlight class="normal">as<sp/>it<sp/>is<sp/>provided,<sp/>but<sp/>this<sp/>can<sp/>be<sp/>at<sp/>any<sp/>time.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Warnings<sp/>and<sp/>Errors</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Tar<sp/>emits<sp/>warnings<sp/>and<sp/>errors<sp/>for<sp/>recoverable<sp/>and<sp/>unrecoverable<sp/>situations,</highlight></codeline>
<codeline><highlight class="normal">respectively.<sp/><sp/>In<sp/>many<sp/>cases,<sp/>a<sp/>warning<sp/>only<sp/>affects<sp/>a<sp/>single<sp/>entry<sp/>in<sp/>an</highlight></codeline>
<codeline><highlight class="normal">archive,<sp/>or<sp/>is<sp/>simply<sp/>informing<sp/>you<sp/>that<sp/>it&apos;s<sp/>modifying<sp/>an<sp/>entry<sp/>to<sp/>comply</highlight></codeline>
<codeline><highlight class="normal">with<sp/>the<sp/>settings<sp/>provided.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Unrecoverable<sp/>warnings<sp/>will<sp/>always<sp/>raise<sp/>an<sp/>error<sp/>(ie,<sp/>emit<sp/>`&apos;error&apos;`<sp/>on</highlight></codeline>
<codeline><highlight class="normal">streaming<sp/>actions,<sp/>throw<sp/>for<sp/>non-streaming<sp/>sync<sp/>actions,<sp/>reject<sp/>the</highlight></codeline>
<codeline><highlight class="normal">returned<sp/>Promise<sp/>for<sp/>non-streaming<sp/>async<sp/>operations,<sp/>or<sp/>call<sp/>a<sp/>provided</highlight></codeline>
<codeline><highlight class="normal">callback<sp/>with<sp/>an<sp/>`Error`<sp/>as<sp/>the<sp/>first<sp/>argument).<sp/><sp/>Recoverable<sp/>errors<sp/>will</highlight></codeline>
<codeline><highlight class="normal">raise<sp/>an<sp/>error<sp/>only<sp/>if<sp/>`strict:<sp/>true`<sp/>is<sp/>set<sp/>in<sp/>the<sp/>options.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Respond<sp/>to<sp/>(recoverable)<sp/>warnings<sp/>by<sp/>listening<sp/>to<sp/>the<sp/>`warn`<sp/>event.</highlight></codeline>
<codeline><highlight class="normal">Handlers<sp/>receive<sp/>3<sp/>arguments:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`code`<sp/>String.<sp/><sp/>One<sp/>of<sp/>the<sp/>error<sp/>codes<sp/>below.<sp/><sp/>This<sp/>may<sp/>not<sp/>match</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`data.code`,<sp/>which<sp/>preserves<sp/>the<sp/>original<sp/>error<sp/>code<sp/>from<sp/>fs<sp/>and<sp/>zlib.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`message`<sp/>String.<sp/><sp/>More<sp/>details<sp/>about<sp/>the<sp/>error.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`data`<sp/>Metadata<sp/>about<sp/>the<sp/>error.<sp/><sp/>An<sp/>`Error`<sp/>object<sp/>for<sp/>errors<sp/>raised<sp/>by</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>fs<sp/>and<sp/>zlib.<sp/><sp/>All<sp/>fields<sp/>are<sp/>attached<sp/>to<sp/>errors<sp/>raisd<sp/>by<sp/>tar.<sp/><sp/>Typically</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>contains<sp/>the<sp/>following<sp/>fields,<sp/>as<sp/>relevant:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`tarCode`<sp/>The<sp/>tar<sp/>error<sp/>code.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`code`<sp/>Either<sp/>the<sp/>tar<sp/>error<sp/>code,<sp/>or<sp/>the<sp/>error<sp/>code<sp/>set<sp/>by<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>underlying<sp/>system.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`file`<sp/>The<sp/>archive<sp/>file<sp/>being<sp/>read<sp/>or<sp/>written.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`cwd`<sp/>Working<sp/>directory<sp/>for<sp/>creation<sp/>and<sp/>extraction<sp/>operations.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`entry`<sp/>The<sp/>entry<sp/>object<sp/>(if<sp/>it<sp/>could<sp/>be<sp/>created)<sp/>for<sp/>`TAR_ENTRY_INFO`,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>`TAR_ENTRY_INVALID`,<sp/>and<sp/>`TAR_ENTRY_ERROR`<sp/>warnings.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`header`<sp/>The<sp/>header<sp/>object<sp/>(if<sp/>it<sp/>could<sp/>be<sp/>created,<sp/>and<sp/>the<sp/>entry<sp/>could</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>not<sp/>be<sp/>created)<sp/>for<sp/>`TAR_ENTRY_INFO`<sp/>and<sp/>`TAR_ENTRY_INVALID`<sp/>warnings.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`recoverable`<sp/>Boolean.<sp/><sp/>If<sp/>`false`,<sp/>then<sp/>the<sp/>warning<sp/>will<sp/>emit<sp/>an</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>`error`,<sp/>even<sp/>in<sp/>non-strict<sp/>mode.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Error<sp/>Codes</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>`TAR_ENTRY_INFO`<sp/><sp/>An<sp/>informative<sp/>error<sp/>indicating<sp/>that<sp/>an<sp/>entry<sp/>is<sp/>being</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>modified,<sp/>but<sp/>otherwise<sp/>processed<sp/>normally.<sp/><sp/>For<sp/>example,<sp/>removing<sp/>`/`<sp/>or</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`C:\`<sp/>from<sp/>absolute<sp/>paths<sp/>if<sp/>`preservePaths`<sp/>is<sp/>not<sp/>set.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>`TAR_ENTRY_INVALID`<sp/>An<sp/>indication<sp/>that<sp/>a<sp/>given<sp/>entry<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>tar</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>archive<sp/>entry,<sp/>and<sp/>will<sp/>be<sp/>skipped.<sp/><sp/>This<sp/>occurs<sp/>when:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>a<sp/>checksum<sp/>fails,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>a<sp/>`linkpath`<sp/>is<sp/>missing<sp/>for<sp/>a<sp/>link<sp/>type,<sp/>or</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>a<sp/>`linkpath`<sp/>is<sp/>provided<sp/>for<sp/>a<sp/>non-link<sp/>type.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>If<sp/>every<sp/>entry<sp/>in<sp/>a<sp/>parsed<sp/>archive<sp/>raises<sp/>an<sp/>`TAR_ENTRY_INVALID`<sp/>error,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>then<sp/>the<sp/>archive<sp/>is<sp/>presumed<sp/>to<sp/>be<sp/>unrecoverably<sp/>broken,<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`TAR_BAD_ARCHIVE`<sp/>will<sp/>be<sp/>raised.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>`TAR_ENTRY_ERROR`<sp/>The<sp/>entry<sp/>appears<sp/>to<sp/>be<sp/>a<sp/>valid<sp/>tar<sp/>archive<sp/>entry,<sp/>but</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>encountered<sp/>an<sp/>error<sp/>which<sp/>prevented<sp/>it<sp/>from<sp/>being<sp/>unpacked.<sp/><sp/>This<sp/>occurs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>when:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>an<sp/>unrecoverable<sp/>fs<sp/>error<sp/>happens<sp/>during<sp/>unpacking,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>an<sp/>entry<sp/>is<sp/>trying<sp/>to<sp/>extract<sp/>into<sp/>an<sp/>excessively<sp/>deep</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>location<sp/>(by<sp/>default,<sp/>limited<sp/>to<sp/>1024<sp/>subfolders),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>an<sp/>entry<sp/>has<sp/>`..`<sp/>in<sp/>the<sp/>path<sp/>and<sp/>`preservePaths`<sp/>is<sp/>not<sp/>set,<sp/>or</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>an<sp/>entry<sp/>is<sp/>extracting<sp/>through<sp/>a<sp/>symbolic<sp/>link,<sp/>when<sp/>`preservePaths`<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>not<sp/>set.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>`TAR_ENTRY_UNSUPPORTED`<sp/><sp/>An<sp/>indication<sp/>that<sp/>a<sp/>given<sp/>entry<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>a<sp/>valid<sp/>archive<sp/>entry,<sp/>but<sp/>of<sp/>a<sp/>type<sp/>that<sp/>is<sp/>unsupported,<sp/>and<sp/>so<sp/>will<sp/>be</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>skipped<sp/>in<sp/>archive<sp/>creation<sp/>or<sp/>extracting.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>`TAR_ABORT`<sp/><sp/>When<sp/>parsing<sp/>gzipped-encoded<sp/>archives,<sp/>the<sp/>parser<sp/>will</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>abort<sp/>the<sp/>parse<sp/>process<sp/>raise<sp/>a<sp/>warning<sp/>for<sp/>any<sp/>zlib<sp/>errors<sp/>encountered.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Aborts<sp/>are<sp/>considered<sp/>unrecoverable<sp/>for<sp/>both<sp/>parsing<sp/>and<sp/>unpacking.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>`TAR_BAD_ARCHIVE`<sp/><sp/>The<sp/>archive<sp/>file<sp/>is<sp/>totally<sp/>hosed.<sp/><sp/>This<sp/>can<sp/>happen<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>a<sp/>number<sp/>of<sp/>reasons,<sp/>and<sp/>always<sp/>occurs<sp/>at<sp/>the<sp/>end<sp/>of<sp/>a<sp/>parse<sp/>or<sp/>extract:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>An<sp/>entry<sp/>body<sp/>was<sp/>truncated<sp/>before<sp/>seeing<sp/>the<sp/>full<sp/>number<sp/>of<sp/>bytes.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>The<sp/>archive<sp/>contained<sp/>only<sp/>invalid<sp/>entries,<sp/>indicating<sp/>that<sp/>it<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>likely<sp/>not<sp/>an<sp/>archive,<sp/>or<sp/>at<sp/>least,<sp/>not<sp/>an<sp/>archive<sp/>this<sp/>library<sp/>can</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>parse.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>`TAR_BAD_ARCHIVE`<sp/>is<sp/>considered<sp/>informative<sp/>for<sp/>parse<sp/>operations,<sp/>but</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>unrecoverable<sp/>for<sp/>extraction.<sp/><sp/>Note<sp/>that,<sp/>if<sp/>encountered<sp/>at<sp/>the<sp/>end<sp/>of<sp/>an</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>extraction,<sp/>tar<sp/>WILL<sp/>still<sp/>have<sp/>extracted<sp/>as<sp/>much<sp/>it<sp/>could<sp/>from<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>archive,<sp/>so<sp/>there<sp/>may<sp/>be<sp/>some<sp/>garbage<sp/>files<sp/>to<sp/>clean<sp/>up.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Errors<sp/>that<sp/>occur<sp/>deeper<sp/>in<sp/>the<sp/>system<sp/>(ie,<sp/>either<sp/>the<sp/>filesystem<sp/>or<sp/>zlib)</highlight></codeline>
<codeline><highlight class="normal">will<sp/>have<sp/>their<sp/>error<sp/>codes<sp/>left<sp/>intact,<sp/>and<sp/>a<sp/>`tarCode`<sp/>matching<sp/>one<sp/>of</highlight></codeline>
<codeline><highlight class="normal">the<sp/>above<sp/>will<sp/>be<sp/>added<sp/>to<sp/>the<sp/>warning<sp/>metadata<sp/>or<sp/>the<sp/>raised<sp/>error<sp/>object.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Errors<sp/>generated<sp/>by<sp/>tar<sp/>will<sp/>have<sp/>one<sp/>of<sp/>the<sp/>above<sp/>codes<sp/>set<sp/>as<sp/>the</highlight></codeline>
<codeline><highlight class="normal">`error.code`<sp/>field<sp/>as<sp/>well,<sp/>but<sp/>since<sp/>errors<sp/>originating<sp/>in<sp/>zlib<sp/>or<sp/>fs<sp/>will</highlight></codeline>
<codeline><highlight class="normal">have<sp/>their<sp/>original<sp/>codes,<sp/>it&apos;s<sp/>better<sp/>to<sp/>read<sp/>`error.tarCode`<sp/>if<sp/>you<sp/>wish</highlight></codeline>
<codeline><highlight class="normal">to<sp/>see<sp/>how<sp/>tar<sp/>is<sp/>handling<sp/>the<sp/>issue.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Examples</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>API<sp/>mimics<sp/>the<sp/>`tar(1)`<sp/>command<sp/>line<sp/>functionality,<sp/>with<sp/>aliases</highlight></codeline>
<codeline><highlight class="normal">for<sp/>more<sp/>human-readable<sp/>option<sp/>and<sp/>function<sp/>names.<sp/><sp/>The<sp/>goal<sp/>is<sp/>that</highlight></codeline>
<codeline><highlight class="normal">if<sp/>you<sp/>know<sp/>how<sp/>to<sp/>use<sp/>`tar(1)`<sp/>in<sp/>Unix,<sp/>then<sp/>you<sp/>know<sp/>how<sp/>to<sp/>use</highlight></codeline>
<codeline><highlight class="normal">`require(&apos;tar&apos;)`<sp/>in<sp/>JavaScript.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>replicate<sp/>`tar<sp/>czf<sp/>my-tarball.tgz<sp/>files<sp/>and<sp/>folders`,<sp/>you&apos;d<sp/>do:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">tar.c(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>gzip:<sp/>&lt;true|gzip<sp/>options&gt;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>file:<sp/>&apos;my-tarball.tgz&apos;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[&apos;some&apos;,<sp/>&apos;files&apos;,<sp/>&apos;and&apos;,<sp/>&apos;folders&apos;]</highlight></codeline>
<codeline><highlight class="normal">).then(_<sp/>=&gt;<sp/>{<sp/>..<sp/>tarball<sp/>has<sp/>been<sp/>created<sp/>..<sp/>})</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>replicate<sp/>`tar<sp/>cz<sp/>files<sp/>and<sp/>folders<sp/>&gt;<sp/>my-tarball.tgz`,<sp/>you&apos;d<sp/>do:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">tar.c(<sp/>//<sp/>or<sp/>tar.create</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>gzip:<sp/>&lt;true|gzip<sp/>options&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[&apos;some&apos;,<sp/>&apos;files&apos;,<sp/>&apos;and&apos;,<sp/>&apos;folders&apos;]</highlight></codeline>
<codeline><highlight class="normal">).pipe(fs.createWriteStream(&apos;my-tarball.tgz&apos;))</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>replicate<sp/>`tar<sp/>xf<sp/>my-tarball.tgz`<sp/>you&apos;d<sp/>do:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">tar.x(<sp/><sp/>//<sp/>or<sp/>tar.extract(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>file:<sp/>&apos;my-tarball.tgz&apos;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">).then(_=&gt;<sp/>{<sp/>..<sp/>tarball<sp/>has<sp/>been<sp/>dumped<sp/>in<sp/>cwd<sp/>..<sp/>})</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>replicate<sp/>`cat<sp/>my-tarball.tgz<sp/>|<sp/>tar<sp/>x<sp/>-C<sp/>some-dir<sp/>--strip=1`:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">fs.createReadStream(&apos;my-tarball.tgz&apos;).pipe(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>tar.x({</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>strip:<sp/>1,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>C:<sp/>&apos;some-dir&apos;<sp/>//<sp/>alias<sp/>for<sp/>cwd:&apos;some-dir&apos;,<sp/>also<sp/>ok</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>})</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>replicate<sp/>`tar<sp/>tf<sp/>my-tarball.tgz`,<sp/>do<sp/>this:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">tar.t({</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>file:<sp/>&apos;my-tarball.tgz&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>onentry:<sp/>entry<sp/>=&gt;<sp/>{<sp/>..<sp/>do<sp/>whatever<sp/>with<sp/>it<sp/>..<sp/>}</highlight></codeline>
<codeline><highlight class="normal">})</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>example,<sp/>to<sp/>just<sp/>get<sp/>the<sp/>list<sp/>of<sp/>filenames<sp/>from<sp/>an<sp/>archive:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">const<sp/>getEntryFilenames<sp/>=<sp/>async<sp/>tarballFilename<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>filenames<sp/>=<sp/>[]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>await<sp/>tar.t({</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>file:<sp/>tarballFilename,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>onentry:<sp/>entry<sp/>=&gt;<sp/>filenames.push(entry.path),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>})</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>filenames</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>replicate<sp/>`cat<sp/>my-tarball.tgz<sp/>|<sp/>tar<sp/>t`<sp/>do:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">fs.createReadStream(&apos;my-tarball.tgz&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.pipe(tar.t())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.on(&apos;entry&apos;,<sp/>entry<sp/>=&gt;<sp/>{<sp/>..<sp/>do<sp/>whatever<sp/>with<sp/>it<sp/>..<sp/>})</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>do<sp/>anything<sp/>synchronous,<sp/>add<sp/>`sync:<sp/>true`<sp/>to<sp/>the<sp/>options.<sp/><sp/>Note</highlight></codeline>
<codeline><highlight class="normal">that<sp/>sync<sp/>functions<sp/>don&apos;t<sp/>take<sp/>a<sp/>callback<sp/>and<sp/>don&apos;t<sp/>return<sp/>a<sp/>promise.</highlight></codeline>
<codeline><highlight class="normal">When<sp/>the<sp/>function<sp/>returns,<sp/>it&apos;s<sp/>already<sp/>done.<sp/><sp/>Sync<sp/>methods<sp/>without<sp/>a</highlight></codeline>
<codeline><highlight class="normal">file<sp/>argument<sp/>return<sp/>a<sp/>sync<sp/>stream,<sp/>which<sp/>flushes<sp/>immediately.<sp/><sp/>But,</highlight></codeline>
<codeline><highlight class="normal">of<sp/>course,<sp/>it<sp/>still<sp/>won&apos;t<sp/>be<sp/>done<sp/>until<sp/>you<sp/>`.end()`<sp/>it.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">const<sp/>getEntryFilenamesSync<sp/>=<sp/>tarballFilename<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>filenames<sp/>=<sp/>[]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>tar.t({</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>file:<sp/>tarballFilename,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>onentry:<sp/>entry<sp/>=&gt;<sp/>filenames.push(entry.path),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sync:<sp/>true,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>})</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>filenames</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>filter<sp/>entries,<sp/>add<sp/>`filter:<sp/>&lt;function&gt;`<sp/>to<sp/>the<sp/>options.</highlight></codeline>
<codeline><highlight class="normal">Tar-creating<sp/>methods<sp/>call<sp/>the<sp/>filter<sp/>with<sp/>`filter(path,<sp/>stat)`.</highlight></codeline>
<codeline><highlight class="normal">Tar-reading<sp/>methods<sp/>(including<sp/>extraction)<sp/>call<sp/>the<sp/>filter<sp/>with</highlight></codeline>
<codeline><highlight class="normal">`filter(path,<sp/>entry)`.<sp/><sp/>The<sp/>filter<sp/>is<sp/>called<sp/>in<sp/>the<sp/>`this`-context<sp/>of</highlight></codeline>
<codeline><highlight class="normal">the<sp/>`Pack`<sp/>or<sp/>`Unpack`<sp/>stream<sp/>object.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>arguments<sp/>list<sp/>to<sp/>`tar<sp/>t`<sp/>and<sp/>`tar<sp/>x`<sp/>specify<sp/>a<sp/>list<sp/>of<sp/>filenames</highlight></codeline>
<codeline><highlight class="normal">to<sp/>extract<sp/>or<sp/>list,<sp/>so<sp/>they&apos;re<sp/>equivalent<sp/>to<sp/>a<sp/>filter<sp/>that<sp/>tests<sp/>if</highlight></codeline>
<codeline><highlight class="normal">the<sp/>file<sp/>is<sp/>in<sp/>the<sp/>list.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>those<sp/>who<sp/>_aren&apos;t_<sp/>fans<sp/>of<sp/>tar&apos;s<sp/>single-character<sp/>command<sp/>names:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">tar.c<sp/>===<sp/>tar.create</highlight></codeline>
<codeline><highlight class="normal">tar.r<sp/>===<sp/>tar.replace<sp/>(appends<sp/>to<sp/>archive,<sp/>file<sp/>is<sp/>required)</highlight></codeline>
<codeline><highlight class="normal">tar.u<sp/>===<sp/>tar.update<sp/>(appends<sp/>if<sp/>newer,<sp/>file<sp/>is<sp/>required)</highlight></codeline>
<codeline><highlight class="normal">tar.x<sp/>===<sp/>tar.extract</highlight></codeline>
<codeline><highlight class="normal">tar.t<sp/>===<sp/>tar.list</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Keep<sp/>reading<sp/>for<sp/>all<sp/>the<sp/>command<sp/>descriptions<sp/>and<sp/>options,<sp/>as<sp/>well<sp/>as</highlight></codeline>
<codeline><highlight class="normal">the<sp/>low-level<sp/>API<sp/>that<sp/>they<sp/>are<sp/>built<sp/>on.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>tar.c(options,<sp/>fileList,<sp/>callback)<sp/>[alias:<sp/>tar.create]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>a<sp/>tarball<sp/>archive.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>`fileList`<sp/>is<sp/>an<sp/>array<sp/>of<sp/>paths<sp/>to<sp/>add<sp/>to<sp/>the<sp/>tarball.<sp/><sp/>Adding<sp/>a</highlight></codeline>
<codeline><highlight class="normal">directory<sp/>also<sp/>adds<sp/>its<sp/>children<sp/>recursively.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">An<sp/>entry<sp/>in<sp/>`fileList`<sp/>that<sp/>starts<sp/>with<sp/>an<sp/>`@`<sp/>symbol<sp/>is<sp/>a<sp/>tar<sp/>archive</highlight></codeline>
<codeline><highlight class="normal">whose<sp/>entries<sp/>will<sp/>be<sp/>added.<sp/><sp/>To<sp/>add<sp/>a<sp/>file<sp/>that<sp/>starts<sp/>with<sp/>`@`,</highlight></codeline>
<codeline><highlight class="normal">prepend<sp/>it<sp/>with<sp/>`./`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>options<sp/>are<sp/>supported:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`file`<sp/>Write<sp/>the<sp/>tarball<sp/>archive<sp/>to<sp/>the<sp/>specified<sp/>filename.<sp/><sp/>If<sp/>this</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>is<sp/>specified,<sp/>then<sp/>the<sp/>callback<sp/>will<sp/>be<sp/>fired<sp/>when<sp/>the<sp/>file<sp/>has<sp/>been</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>written,<sp/>and<sp/>a<sp/>promise<sp/>will<sp/>be<sp/>returned<sp/>that<sp/>resolves<sp/>when<sp/>the<sp/>file</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>is<sp/>written.<sp/><sp/>If<sp/>a<sp/>filename<sp/>is<sp/>not<sp/>specified,<sp/>then<sp/>a<sp/>Readable<sp/>Stream</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>will<sp/>be<sp/>returned<sp/>which<sp/>will<sp/>emit<sp/>the<sp/>file<sp/>data.<sp/>[Alias:<sp/>`f`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`sync`<sp/>Act<sp/>synchronously.<sp/><sp/>If<sp/>this<sp/>is<sp/>set,<sp/>then<sp/>any<sp/>provided<sp/>file</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>will<sp/>be<sp/>fully<sp/>written<sp/>after<sp/>the<sp/>call<sp/>to<sp/>`tar.c`.<sp/><sp/>If<sp/>this<sp/>is<sp/>set,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>and<sp/>a<sp/>file<sp/>is<sp/>not<sp/>provided,<sp/>then<sp/>the<sp/>resulting<sp/>stream<sp/>will<sp/>already</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>have<sp/>the<sp/>data<sp/>ready<sp/>to<sp/>`read`<sp/>or<sp/>`emit(&apos;data&apos;)`<sp/>as<sp/>soon<sp/>as<sp/>you</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>request<sp/>it.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onwarn`<sp/>A<sp/>function<sp/>that<sp/>will<sp/>get<sp/>called<sp/>with<sp/>`(code,<sp/>message,<sp/>data)`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>warnings<sp/>encountered.<sp/><sp/>(See<sp/>&quot;Warnings<sp/>and<sp/>Errors&quot;)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`strict`<sp/>Treat<sp/>warnings<sp/>as<sp/>crash-worthy<sp/>errors.<sp/><sp/>Default<sp/>false.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`cwd`<sp/>The<sp/>current<sp/>working<sp/>directory<sp/>for<sp/>creating<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>`process.cwd()`.<sp/><sp/>[Alias:<sp/>`C`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`prefix`<sp/>A<sp/>path<sp/>portion<sp/>to<sp/>prefix<sp/>onto<sp/>the<sp/>entries<sp/>in<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`gzip`<sp/>Set<sp/>to<sp/>any<sp/>truthy<sp/>value<sp/>to<sp/>create<sp/>a<sp/>gzipped<sp/>archive,<sp/>or<sp/>an</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>object<sp/>with<sp/>settings<sp/>for<sp/>`zlib.Gzip()`<sp/>[Alias:<sp/>`z`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`filter`<sp/>A<sp/>function<sp/>that<sp/>gets<sp/>called<sp/>with<sp/>`(path,<sp/>stat)`<sp/>for<sp/>each</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>entry<sp/>being<sp/>added.<sp/><sp/>Return<sp/>`true`<sp/>to<sp/>add<sp/>the<sp/>entry<sp/>to<sp/>the<sp/>archive,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>or<sp/>`false`<sp/>to<sp/>omit<sp/>it.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`portable`<sp/>Omit<sp/>metadata<sp/>that<sp/>is<sp/>system-specific:<sp/>`ctime`,<sp/>`atime`,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`uid`,<sp/>`gid`,<sp/>`uname`,<sp/>`gname`,<sp/>`dev`,<sp/>`ino`,<sp/>and<sp/>`nlink`.<sp/><sp/>Note</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>that<sp/>`mtime`<sp/>is<sp/>still<sp/>included,<sp/>because<sp/>this<sp/>is<sp/>necessary<sp/>for<sp/>other</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>time-based<sp/>operations.<sp/><sp/>Additionally,<sp/>`mode`<sp/>is<sp/>set<sp/>to<sp/>a<sp/>&quot;reasonable</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>default&quot;<sp/>for<sp/>most<sp/>unix<sp/>systems,<sp/>based<sp/>on<sp/>a<sp/>`umask`<sp/>value<sp/>of<sp/>`0o22`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`preservePaths`<sp/>Allow<sp/>absolute<sp/>paths.<sp/><sp/>By<sp/>default,<sp/>`/`<sp/>is<sp/>stripped</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>from<sp/>absolute<sp/>paths.<sp/>[Alias:<sp/>`P`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`mode`<sp/>The<sp/>mode<sp/>to<sp/>set<sp/>on<sp/>the<sp/>created<sp/>file<sp/>archive</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noDirRecurse`<sp/>Do<sp/>not<sp/>recursively<sp/>archive<sp/>the<sp/>contents<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>directories.<sp/>[Alias:<sp/>`n`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`follow`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>pack<sp/>the<sp/>targets<sp/>of<sp/>symbolic<sp/>links.<sp/><sp/>Without</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>this<sp/>option,<sp/>symbolic<sp/>links<sp/>are<sp/>archived<sp/>as<sp/>such.<sp/>[Alias:<sp/>`L`,<sp/>`h`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noPax`<sp/>Suppress<sp/>pax<sp/>extended<sp/>headers.<sp/><sp/>Note<sp/>that<sp/>this<sp/>means<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>long<sp/>paths<sp/>and<sp/>linkpaths<sp/>will<sp/>be<sp/>truncated,<sp/>and<sp/>large<sp/>or<sp/>negative</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>numeric<sp/>values<sp/>may<sp/>be<sp/>interpreted<sp/>incorrectly.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noMtime`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>omit<sp/>writing<sp/>`mtime`<sp/>values<sp/>for<sp/>entries.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Note<sp/>that<sp/>this<sp/>prevents<sp/>using<sp/>other<sp/>mtime-based<sp/>features<sp/>like</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`tar.update`<sp/>or<sp/>the<sp/>`keepNewer`<sp/>option<sp/>with<sp/>the<sp/>resulting<sp/>tar<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[Alias:<sp/>`m`,<sp/>`no-mtime`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`mtime`<sp/>Set<sp/>to<sp/>a<sp/>`Date`<sp/>object<sp/>to<sp/>force<sp/>a<sp/>specific<sp/>`mtime`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>everything<sp/>added<sp/>to<sp/>the<sp/>archive.<sp/><sp/>Overridden<sp/>by<sp/>`noMtime`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>options<sp/>are<sp/>mostly<sp/>internal,<sp/>but<sp/>can<sp/>be<sp/>modified<sp/>in<sp/>some</highlight></codeline>
<codeline><highlight class="normal">advanced<sp/>use<sp/>cases,<sp/>such<sp/>as<sp/>re-using<sp/>caches<sp/>between<sp/>runs.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`linkCache`<sp/>A<sp/>Map<sp/>object<sp/>containing<sp/>the<sp/>device<sp/>and<sp/>inode<sp/>value<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>file<sp/>whose<sp/>nlink<sp/>is<sp/>&gt;<sp/>1,<sp/>to<sp/>identify<sp/>hard<sp/>links.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`statCache`<sp/>A<sp/>Map<sp/>object<sp/>that<sp/>caches<sp/>calls<sp/>`lstat`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`readdirCache`<sp/>A<sp/>Map<sp/>object<sp/>that<sp/>caches<sp/>calls<sp/>to<sp/>`readdir`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`jobs`<sp/>A<sp/>number<sp/>specifying<sp/>how<sp/>many<sp/>concurrent<sp/>jobs<sp/>to<sp/>run.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>4.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`maxReadSize`<sp/>The<sp/>maximum<sp/>buffer<sp/>size<sp/>for<sp/>`fs.read()`<sp/>operations.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>16<sp/>MB.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>tar.x(options,<sp/>fileList,<sp/>callback)<sp/>[alias:<sp/>tar.extract]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Extract<sp/>a<sp/>tarball<sp/>archive.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>`fileList`<sp/>is<sp/>an<sp/>array<sp/>of<sp/>paths<sp/>to<sp/>extract<sp/>from<sp/>the<sp/>tarball.<sp/><sp/>If</highlight></codeline>
<codeline><highlight class="normal">no<sp/>paths<sp/>are<sp/>provided,<sp/>then<sp/>all<sp/>the<sp/>entries<sp/>are<sp/>extracted.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>the<sp/>archive<sp/>is<sp/>gzipped,<sp/>then<sp/>tar<sp/>will<sp/>detect<sp/>this<sp/>and<sp/>unzip<sp/>it.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Note<sp/>that<sp/>all<sp/>directories<sp/>that<sp/>are<sp/>created<sp/>will<sp/>be<sp/>forced<sp/>to<sp/>be</highlight></codeline>
<codeline><highlight class="normal">writable,<sp/>readable,<sp/>and<sp/>listable<sp/>by<sp/>their<sp/>owner,<sp/>to<sp/>avoid<sp/>cases<sp/>where</highlight></codeline>
<codeline><highlight class="normal">a<sp/>directory<sp/>prevents<sp/>extraction<sp/>of<sp/>child<sp/>entries<sp/>by<sp/>virtue<sp/>of<sp/>its</highlight></codeline>
<codeline><highlight class="normal">mode.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Most<sp/>extraction<sp/>errors<sp/>will<sp/>cause<sp/>a<sp/>`warn`<sp/>event<sp/>to<sp/>be<sp/>emitted.<sp/><sp/>If</highlight></codeline>
<codeline><highlight class="normal">the<sp/>`cwd`<sp/>is<sp/>missing,<sp/>or<sp/>not<sp/>a<sp/>directory,<sp/>then<sp/>the<sp/>extraction<sp/>will</highlight></codeline>
<codeline><highlight class="normal">fail<sp/>completely.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>options<sp/>are<sp/>supported:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`cwd`<sp/>Extract<sp/>files<sp/>relative<sp/>to<sp/>the<sp/>specified<sp/>directory.<sp/><sp/>Defaults</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>to<sp/>`process.cwd()`.<sp/><sp/>If<sp/>provided,<sp/>this<sp/>must<sp/>exist<sp/>and<sp/>must<sp/>be<sp/>a</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>directory.<sp/>[Alias:<sp/>`C`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`file`<sp/>The<sp/>archive<sp/>file<sp/>to<sp/>extract.<sp/><sp/>If<sp/>not<sp/>specified,<sp/>then<sp/>a</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Writable<sp/>stream<sp/>is<sp/>returned<sp/>where<sp/>the<sp/>archive<sp/>data<sp/>should<sp/>be</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>written.<sp/>[Alias:<sp/>`f`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`sync`<sp/>Create<sp/>files<sp/>and<sp/>directories<sp/>synchronously.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`strict`<sp/>Treat<sp/>warnings<sp/>as<sp/>crash-worthy<sp/>errors.<sp/><sp/>Default<sp/>false.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`filter`<sp/>A<sp/>function<sp/>that<sp/>gets<sp/>called<sp/>with<sp/>`(path,<sp/>entry)`<sp/>for<sp/>each</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>entry<sp/>being<sp/>unpacked.<sp/><sp/>Return<sp/>`true`<sp/>to<sp/>unpack<sp/>the<sp/>entry<sp/>from<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>archive,<sp/>or<sp/>`false`<sp/>to<sp/>skip<sp/>it.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`newer`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>keep<sp/>the<sp/>existing<sp/>file<sp/>on<sp/>disk<sp/>if<sp/>it&apos;s<sp/>newer</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>than<sp/>the<sp/>file<sp/>in<sp/>the<sp/>archive.<sp/>[Alias:<sp/>`keep-newer`,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`keep-newer-files`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`keep`<sp/>Do<sp/>not<sp/>overwrite<sp/>existing<sp/>files.<sp/><sp/>In<sp/>particular,<sp/>if<sp/>a<sp/>file</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>appears<sp/>more<sp/>than<sp/>once<sp/>in<sp/>an<sp/>archive,<sp/>later<sp/>copies<sp/>will<sp/>not</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>overwrite<sp/>earlier<sp/>copies.<sp/>[Alias:<sp/>`k`,<sp/>`keep-existing`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`preservePaths`<sp/>Allow<sp/>absolute<sp/>paths,<sp/>paths<sp/>containing<sp/>`..`,<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>extracting<sp/>through<sp/>symbolic<sp/>links.<sp/><sp/>By<sp/>default,<sp/>`/`<sp/>is<sp/>stripped<sp/>from</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>absolute<sp/>paths,<sp/>`..`<sp/>paths<sp/>are<sp/>not<sp/>extracted,<sp/>and<sp/>any<sp/>file<sp/>whose</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>location<sp/>would<sp/>be<sp/>modified<sp/>by<sp/>a<sp/>symbolic<sp/>link<sp/>is<sp/>not<sp/>extracted.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[Alias:<sp/>`P`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`unlink`<sp/>Unlink<sp/>files<sp/>before<sp/>creating<sp/>them.<sp/><sp/>Without<sp/>this<sp/>option,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>tar<sp/>overwrites<sp/>existing<sp/>files,<sp/>which<sp/>preserves<sp/>existing<sp/>hardlinks.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>With<sp/>this<sp/>option,<sp/>existing<sp/>hardlinks<sp/>will<sp/>be<sp/>broken,<sp/>as<sp/>will<sp/>any</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>symlink<sp/>that<sp/>would<sp/>affect<sp/>the<sp/>location<sp/>of<sp/>an<sp/>extracted<sp/>file.<sp/>[Alias:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`U`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`strip`<sp/>Remove<sp/>the<sp/>specified<sp/>number<sp/>of<sp/>leading<sp/>path<sp/>elements.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Pathnames<sp/>with<sp/>fewer<sp/>elements<sp/>will<sp/>be<sp/>silently<sp/>skipped.<sp/><sp/>Note<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>the<sp/>pathname<sp/>is<sp/>edited<sp/>after<sp/>applying<sp/>the<sp/>filter,<sp/>but<sp/>before</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>security<sp/>checks.<sp/>[Alias:<sp/>`strip-components`,<sp/>`stripComponents`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onwarn`<sp/>A<sp/>function<sp/>that<sp/>will<sp/>get<sp/>called<sp/>with<sp/>`(code,<sp/>message,<sp/>data)`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>warnings<sp/>encountered.<sp/><sp/>(See<sp/>&quot;Warnings<sp/>and<sp/>Errors&quot;)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`preserveOwner`<sp/>If<sp/>true,<sp/>tar<sp/>will<sp/>set<sp/>the<sp/>`uid`<sp/>and<sp/>`gid`<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>extracted<sp/>entries<sp/>to<sp/>the<sp/>`uid`<sp/>and<sp/>`gid`<sp/>fields<sp/>in<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>This<sp/>defaults<sp/>to<sp/>true<sp/>when<sp/>run<sp/>as<sp/>root,<sp/>and<sp/>false<sp/>otherwise.<sp/><sp/>If</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>false,<sp/>then<sp/>files<sp/>and<sp/>directories<sp/>will<sp/>be<sp/>set<sp/>with<sp/>the<sp/>owner<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>group<sp/>of<sp/>the<sp/>user<sp/>running<sp/>the<sp/>process.<sp/><sp/>This<sp/>is<sp/>similar<sp/>to<sp/>`-p`<sp/>in</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`tar(1)`,<sp/>but<sp/>ACLs<sp/>and<sp/>other<sp/>system-specific<sp/>data<sp/>is<sp/>never<sp/>unpacked</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>in<sp/>this<sp/>implementation,<sp/>and<sp/>modes<sp/>are<sp/>set<sp/>by<sp/>default<sp/>already.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[Alias:<sp/>`p`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`uid`<sp/>Set<sp/>to<sp/>a<sp/>number<sp/>to<sp/>force<sp/>ownership<sp/>of<sp/>all<sp/>extracted<sp/>files<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>folders,<sp/>and<sp/>all<sp/>implicitly<sp/>created<sp/>directories,<sp/>to<sp/>be<sp/>owned<sp/>by<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>specified<sp/>user<sp/>id,<sp/>regardless<sp/>of<sp/>the<sp/>`uid`<sp/>field<sp/>in<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Cannot<sp/>be<sp/>used<sp/>along<sp/>with<sp/>`preserveOwner`.<sp/><sp/>Requires<sp/>also<sp/>setting<sp/>a</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`gid`<sp/>option.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`gid`<sp/>Set<sp/>to<sp/>a<sp/>number<sp/>to<sp/>force<sp/>ownership<sp/>of<sp/>all<sp/>extracted<sp/>files<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>folders,<sp/>and<sp/>all<sp/>implicitly<sp/>created<sp/>directories,<sp/>to<sp/>be<sp/>owned<sp/>by<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>specified<sp/>group<sp/>id,<sp/>regardless<sp/>of<sp/>the<sp/>`gid`<sp/>field<sp/>in<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Cannot<sp/>be<sp/>used<sp/>along<sp/>with<sp/>`preserveOwner`.<sp/><sp/>Requires<sp/>also<sp/>setting<sp/>a</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`uid`<sp/>option.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noMtime`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>omit<sp/>writing<sp/>`mtime`<sp/>value<sp/>for<sp/>extracted</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>entries.<sp/>[Alias:<sp/>`m`,<sp/>`no-mtime`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`transform`<sp/>Provide<sp/>a<sp/>function<sp/>that<sp/>takes<sp/>an<sp/>`entry`<sp/>object,<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>returns<sp/>a<sp/>stream,<sp/>or<sp/>any<sp/>falsey<sp/>value.<sp/><sp/>If<sp/>a<sp/>stream<sp/>is<sp/>provided,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>then<sp/>that<sp/>stream&apos;s<sp/>data<sp/>will<sp/>be<sp/>written<sp/>instead<sp/>of<sp/>the<sp/>contents<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>the<sp/>archive<sp/>entry.<sp/><sp/>If<sp/>a<sp/>falsey<sp/>value<sp/>is<sp/>provided,<sp/>then<sp/>the<sp/>entry<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>written<sp/>to<sp/>disk<sp/>as<sp/>normal.<sp/><sp/>(To<sp/>exclude<sp/>items<sp/>from<sp/>extraction,<sp/>use</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>the<sp/>`filter`<sp/>option<sp/>described<sp/>above.)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onentry`<sp/>A<sp/>function<sp/>that<sp/>gets<sp/>called<sp/>with<sp/>`(entry)`<sp/>for<sp/>each<sp/>entry</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>that<sp/>passes<sp/>the<sp/>filter.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onwarn`<sp/>A<sp/>function<sp/>that<sp/>will<sp/>get<sp/>called<sp/>with<sp/>`(code,<sp/>message,<sp/>data)`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>warnings<sp/>encountered.<sp/><sp/>(See<sp/>&quot;Warnings<sp/>and<sp/>Errors&quot;)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noChmod`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>omit<sp/>calling<sp/>`fs.chmod()`<sp/>to<sp/>ensure<sp/>that<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>extracted<sp/>file<sp/>matches<sp/>the<sp/>entry<sp/>mode.<sp/><sp/>This<sp/>also<sp/>suppresses<sp/>the<sp/>call<sp/>to</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`process.umask()`<sp/>to<sp/>determine<sp/>the<sp/>default<sp/>umask<sp/>value,<sp/>since<sp/>tar<sp/>will</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>extract<sp/>with<sp/>whatever<sp/>mode<sp/>is<sp/>provided,<sp/>and<sp/>let<sp/>the<sp/>process<sp/>`umask`<sp/>apply</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>normally.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`maxDepth`<sp/>The<sp/>maximum<sp/>depth<sp/>of<sp/>subfolders<sp/>to<sp/>extract<sp/>into.<sp/>This</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>defaults<sp/>to<sp/>1024.<sp/>Anything<sp/>deeper<sp/>than<sp/>the<sp/>limit<sp/>will<sp/>raise<sp/>a</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>warning<sp/>and<sp/>skip<sp/>the<sp/>entry.<sp/>Set<sp/>to<sp/>`Infinity`<sp/>to<sp/>remove<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>limitation.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>options<sp/>are<sp/>mostly<sp/>internal,<sp/>but<sp/>can<sp/>be<sp/>modified<sp/>in<sp/>some</highlight></codeline>
<codeline><highlight class="normal">advanced<sp/>use<sp/>cases,<sp/>such<sp/>as<sp/>re-using<sp/>caches<sp/>between<sp/>runs.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`maxReadSize`<sp/>The<sp/>maximum<sp/>buffer<sp/>size<sp/>for<sp/>`fs.read()`<sp/>operations.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>16<sp/>MB.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`umask`<sp/>Filter<sp/>the<sp/>modes<sp/>of<sp/>entries<sp/>like<sp/>`process.umask()`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`dmode`<sp/>Default<sp/>mode<sp/>for<sp/>directories</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`fmode`<sp/>Default<sp/>mode<sp/>for<sp/>files</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`dirCache`<sp/>A<sp/>Map<sp/>object<sp/>of<sp/>which<sp/>directories<sp/>exist.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`maxMetaEntrySize`<sp/>The<sp/>maximum<sp/>size<sp/>of<sp/>meta<sp/>entries<sp/>that<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>supported.<sp/><sp/>Defaults<sp/>to<sp/>1<sp/>MB.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Note<sp/>that<sp/>using<sp/>an<sp/>asynchronous<sp/>stream<sp/>type<sp/>with<sp/>the<sp/>`transform`</highlight></codeline>
<codeline><highlight class="normal">option<sp/>will<sp/>cause<sp/>undefined<sp/>behavior<sp/>in<sp/>sync<sp/>extractions.</highlight></codeline>
<codeline><highlight class="normal">[MiniPass](http://npm.im/minipass)-based<sp/>streams<sp/>are<sp/>designed<sp/>for<sp/>this</highlight></codeline>
<codeline><highlight class="normal">use<sp/>case.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>tar.t(options,<sp/>fileList,<sp/>callback)<sp/>[alias:<sp/>tar.list]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">List<sp/>the<sp/>contents<sp/>of<sp/>a<sp/>tarball<sp/>archive.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>`fileList`<sp/>is<sp/>an<sp/>array<sp/>of<sp/>paths<sp/>to<sp/>list<sp/>from<sp/>the<sp/>tarball.<sp/><sp/>If</highlight></codeline>
<codeline><highlight class="normal">no<sp/>paths<sp/>are<sp/>provided,<sp/>then<sp/>all<sp/>the<sp/>entries<sp/>are<sp/>listed.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>the<sp/>archive<sp/>is<sp/>gzipped,<sp/>then<sp/>tar<sp/>will<sp/>detect<sp/>this<sp/>and<sp/>unzip<sp/>it.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>the<sp/>`file`<sp/>option<sp/>is<sp/>_not_<sp/>provided,<sp/>then<sp/>returns<sp/>an<sp/>event<sp/>emitter<sp/>that</highlight></codeline>
<codeline><highlight class="normal">emits<sp/>`entry`<sp/>events<sp/>with<sp/>`tar.ReadEntry`<sp/>objects.<sp/><sp/>However,<sp/>they<sp/>don&apos;t</highlight></codeline>
<codeline><highlight class="normal">emit<sp/>`&apos;data&apos;`<sp/>or<sp/>`&apos;end&apos;`<sp/>events.<sp/><sp/>(If<sp/>you<sp/>want<sp/>to<sp/>get<sp/>actual<sp/>readable</highlight></codeline>
<codeline><highlight class="normal">entries,<sp/>use<sp/>the<sp/>`tar.Parse`<sp/>class<sp/>instead.)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>a<sp/>`file`<sp/>option<sp/>_is_<sp/>provided,<sp/>then<sp/>the<sp/>return<sp/>value<sp/>will<sp/>be<sp/>a<sp/>promise</highlight></codeline>
<codeline><highlight class="normal">that<sp/>resolves<sp/>when<sp/>the<sp/>file<sp/>has<sp/>been<sp/>fully<sp/>traversed<sp/>in<sp/>async<sp/>mode,<sp/>or</highlight></codeline>
<codeline><highlight class="normal">`undefined`<sp/>if<sp/>`sync:<sp/>true`<sp/>is<sp/>set.<sp/><sp/>Thus,<sp/>you<sp/>_must_<sp/>specify<sp/>an<sp/>`onentry`</highlight></codeline>
<codeline><highlight class="normal">method<sp/>in<sp/>order<sp/>to<sp/>do<sp/>anything<sp/>useful<sp/>with<sp/>the<sp/>data<sp/>it<sp/>parses.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>options<sp/>are<sp/>supported:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`file`<sp/>The<sp/>archive<sp/>file<sp/>to<sp/>list.<sp/><sp/>If<sp/>not<sp/>specified,<sp/>then<sp/>a</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Writable<sp/>stream<sp/>is<sp/>returned<sp/>where<sp/>the<sp/>archive<sp/>data<sp/>should<sp/>be</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>written.<sp/>[Alias:<sp/>`f`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`sync`<sp/>Read<sp/>the<sp/>specified<sp/>file<sp/>synchronously.<sp/><sp/>(This<sp/>has<sp/>no<sp/>effect</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>when<sp/>a<sp/>file<sp/>option<sp/>isn&apos;t<sp/>specified,<sp/>because<sp/>entries<sp/>are<sp/>emitted<sp/>as</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>fast<sp/>as<sp/>they<sp/>are<sp/>parsed<sp/>from<sp/>the<sp/>stream<sp/>anyway.)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`strict`<sp/>Treat<sp/>warnings<sp/>as<sp/>crash-worthy<sp/>errors.<sp/><sp/>Default<sp/>false.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`filter`<sp/>A<sp/>function<sp/>that<sp/>gets<sp/>called<sp/>with<sp/>`(path,<sp/>entry)`<sp/>for<sp/>each</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>entry<sp/>being<sp/>listed.<sp/><sp/>Return<sp/>`true`<sp/>to<sp/>emit<sp/>the<sp/>entry<sp/>from<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>archive,<sp/>or<sp/>`false`<sp/>to<sp/>skip<sp/>it.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onentry`<sp/>A<sp/>function<sp/>that<sp/>gets<sp/>called<sp/>with<sp/>`(entry)`<sp/>for<sp/>each<sp/>entry</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>that<sp/>passes<sp/>the<sp/>filter.<sp/><sp/>This<sp/>is<sp/>important<sp/>for<sp/>when<sp/>`file`<sp/>is<sp/>set,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>because<sp/>there<sp/>is<sp/>no<sp/>other<sp/>way<sp/>to<sp/>do<sp/>anything<sp/>useful<sp/>with<sp/>this<sp/>method.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`maxReadSize`<sp/>The<sp/>maximum<sp/>buffer<sp/>size<sp/>for<sp/>`fs.read()`<sp/>operations.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>16<sp/>MB.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noResume`<sp/>By<sp/>default,<sp/>`entry`<sp/>streams<sp/>are<sp/>resumed<sp/>immediately<sp/>after</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>the<sp/>call<sp/>to<sp/>`onentry`.<sp/><sp/>Set<sp/>`noResume:<sp/>true`<sp/>to<sp/>suppress<sp/>this</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>behavior.<sp/><sp/>Note<sp/>that<sp/>by<sp/>opting<sp/>into<sp/>this,<sp/>the<sp/>stream<sp/>will<sp/>never</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>complete<sp/>until<sp/>the<sp/>entry<sp/>data<sp/>is<sp/>consumed.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onwarn`<sp/>A<sp/>function<sp/>that<sp/>will<sp/>get<sp/>called<sp/>with<sp/>`(code,<sp/>message,<sp/>data)`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>warnings<sp/>encountered.<sp/><sp/>(See<sp/>&quot;Warnings<sp/>and<sp/>Errors&quot;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>tar.u(options,<sp/>fileList,<sp/>callback)<sp/>[alias:<sp/>tar.update]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Add<sp/>files<sp/>to<sp/>an<sp/>archive<sp/>if<sp/>they<sp/>are<sp/>newer<sp/>than<sp/>the<sp/>entry<sp/>already<sp/>in</highlight></codeline>
<codeline><highlight class="normal">the<sp/>tarball<sp/>archive.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>`fileList`<sp/>is<sp/>an<sp/>array<sp/>of<sp/>paths<sp/>to<sp/>add<sp/>to<sp/>the<sp/>tarball.<sp/><sp/>Adding<sp/>a</highlight></codeline>
<codeline><highlight class="normal">directory<sp/>also<sp/>adds<sp/>its<sp/>children<sp/>recursively.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">An<sp/>entry<sp/>in<sp/>`fileList`<sp/>that<sp/>starts<sp/>with<sp/>an<sp/>`@`<sp/>symbol<sp/>is<sp/>a<sp/>tar<sp/>archive</highlight></codeline>
<codeline><highlight class="normal">whose<sp/>entries<sp/>will<sp/>be<sp/>added.<sp/><sp/>To<sp/>add<sp/>a<sp/>file<sp/>that<sp/>starts<sp/>with<sp/>`@`,</highlight></codeline>
<codeline><highlight class="normal">prepend<sp/>it<sp/>with<sp/>`./`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>options<sp/>are<sp/>supported:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`file`<sp/>Required.<sp/>Write<sp/>the<sp/>tarball<sp/>archive<sp/>to<sp/>the<sp/>specified</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>filename.<sp/>[Alias:<sp/>`f`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`sync`<sp/>Act<sp/>synchronously.<sp/><sp/>If<sp/>this<sp/>is<sp/>set,<sp/>then<sp/>any<sp/>provided<sp/>file</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>will<sp/>be<sp/>fully<sp/>written<sp/>after<sp/>the<sp/>call<sp/>to<sp/>`tar.c`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onwarn`<sp/>A<sp/>function<sp/>that<sp/>will<sp/>get<sp/>called<sp/>with<sp/>`(code,<sp/>message,<sp/>data)`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>warnings<sp/>encountered.<sp/><sp/>(See<sp/>&quot;Warnings<sp/>and<sp/>Errors&quot;)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`strict`<sp/>Treat<sp/>warnings<sp/>as<sp/>crash-worthy<sp/>errors.<sp/><sp/>Default<sp/>false.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`cwd`<sp/>The<sp/>current<sp/>working<sp/>directory<sp/>for<sp/>adding<sp/>entries<sp/>to<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>archive.<sp/><sp/>Defaults<sp/>to<sp/>`process.cwd()`.<sp/><sp/>[Alias:<sp/>`C`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`prefix`<sp/>A<sp/>path<sp/>portion<sp/>to<sp/>prefix<sp/>onto<sp/>the<sp/>entries<sp/>in<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`gzip`<sp/>Set<sp/>to<sp/>any<sp/>truthy<sp/>value<sp/>to<sp/>create<sp/>a<sp/>gzipped<sp/>archive,<sp/>or<sp/>an</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>object<sp/>with<sp/>settings<sp/>for<sp/>`zlib.Gzip()`<sp/>[Alias:<sp/>`z`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`filter`<sp/>A<sp/>function<sp/>that<sp/>gets<sp/>called<sp/>with<sp/>`(path,<sp/>stat)`<sp/>for<sp/>each</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>entry<sp/>being<sp/>added.<sp/><sp/>Return<sp/>`true`<sp/>to<sp/>add<sp/>the<sp/>entry<sp/>to<sp/>the<sp/>archive,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>or<sp/>`false`<sp/>to<sp/>omit<sp/>it.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`portable`<sp/>Omit<sp/>metadata<sp/>that<sp/>is<sp/>system-specific:<sp/>`ctime`,<sp/>`atime`,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`uid`,<sp/>`gid`,<sp/>`uname`,<sp/>`gname`,<sp/>`dev`,<sp/>`ino`,<sp/>and<sp/>`nlink`.<sp/><sp/>Note</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>that<sp/>`mtime`<sp/>is<sp/>still<sp/>included,<sp/>because<sp/>this<sp/>is<sp/>necessary<sp/>for<sp/>other</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>time-based<sp/>operations.<sp/><sp/>Additionally,<sp/>`mode`<sp/>is<sp/>set<sp/>to<sp/>a<sp/>&quot;reasonable</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>default&quot;<sp/>for<sp/>most<sp/>unix<sp/>systems,<sp/>based<sp/>on<sp/>a<sp/>`umask`<sp/>value<sp/>of<sp/>`0o22`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`preservePaths`<sp/>Allow<sp/>absolute<sp/>paths.<sp/><sp/>By<sp/>default,<sp/>`/`<sp/>is<sp/>stripped</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>from<sp/>absolute<sp/>paths.<sp/>[Alias:<sp/>`P`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`maxReadSize`<sp/>The<sp/>maximum<sp/>buffer<sp/>size<sp/>for<sp/>`fs.read()`<sp/>operations.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>16<sp/>MB.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noDirRecurse`<sp/>Do<sp/>not<sp/>recursively<sp/>archive<sp/>the<sp/>contents<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>directories.<sp/>[Alias:<sp/>`n`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`follow`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>pack<sp/>the<sp/>targets<sp/>of<sp/>symbolic<sp/>links.<sp/><sp/>Without</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>this<sp/>option,<sp/>symbolic<sp/>links<sp/>are<sp/>archived<sp/>as<sp/>such.<sp/>[Alias:<sp/>`L`,<sp/>`h`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noPax`<sp/>Suppress<sp/>pax<sp/>extended<sp/>headers.<sp/><sp/>Note<sp/>that<sp/>this<sp/>means<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>long<sp/>paths<sp/>and<sp/>linkpaths<sp/>will<sp/>be<sp/>truncated,<sp/>and<sp/>large<sp/>or<sp/>negative</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>numeric<sp/>values<sp/>may<sp/>be<sp/>interpreted<sp/>incorrectly.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noMtime`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>omit<sp/>writing<sp/>`mtime`<sp/>values<sp/>for<sp/>entries.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Note<sp/>that<sp/>this<sp/>prevents<sp/>using<sp/>other<sp/>mtime-based<sp/>features<sp/>like</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`tar.update`<sp/>or<sp/>the<sp/>`keepNewer`<sp/>option<sp/>with<sp/>the<sp/>resulting<sp/>tar<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[Alias:<sp/>`m`,<sp/>`no-mtime`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`mtime`<sp/>Set<sp/>to<sp/>a<sp/>`Date`<sp/>object<sp/>to<sp/>force<sp/>a<sp/>specific<sp/>`mtime`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>everything<sp/>added<sp/>to<sp/>the<sp/>archive.<sp/><sp/>Overridden<sp/>by<sp/>`noMtime`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>tar.r(options,<sp/>fileList,<sp/>callback)<sp/>[alias:<sp/>tar.replace]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Add<sp/>files<sp/>to<sp/>an<sp/>existing<sp/>archive.<sp/><sp/>Because<sp/>later<sp/>entries<sp/>override</highlight></codeline>
<codeline><highlight class="normal">earlier<sp/>entries,<sp/>this<sp/>effectively<sp/>replaces<sp/>any<sp/>existing<sp/>entries.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>`fileList`<sp/>is<sp/>an<sp/>array<sp/>of<sp/>paths<sp/>to<sp/>add<sp/>to<sp/>the<sp/>tarball.<sp/><sp/>Adding<sp/>a</highlight></codeline>
<codeline><highlight class="normal">directory<sp/>also<sp/>adds<sp/>its<sp/>children<sp/>recursively.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">An<sp/>entry<sp/>in<sp/>`fileList`<sp/>that<sp/>starts<sp/>with<sp/>an<sp/>`@`<sp/>symbol<sp/>is<sp/>a<sp/>tar<sp/>archive</highlight></codeline>
<codeline><highlight class="normal">whose<sp/>entries<sp/>will<sp/>be<sp/>added.<sp/><sp/>To<sp/>add<sp/>a<sp/>file<sp/>that<sp/>starts<sp/>with<sp/>`@`,</highlight></codeline>
<codeline><highlight class="normal">prepend<sp/>it<sp/>with<sp/>`./`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>options<sp/>are<sp/>supported:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`file`<sp/>Required.<sp/>Write<sp/>the<sp/>tarball<sp/>archive<sp/>to<sp/>the<sp/>specified</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>filename.<sp/>[Alias:<sp/>`f`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`sync`<sp/>Act<sp/>synchronously.<sp/><sp/>If<sp/>this<sp/>is<sp/>set,<sp/>then<sp/>any<sp/>provided<sp/>file</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>will<sp/>be<sp/>fully<sp/>written<sp/>after<sp/>the<sp/>call<sp/>to<sp/>`tar.c`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onwarn`<sp/>A<sp/>function<sp/>that<sp/>will<sp/>get<sp/>called<sp/>with<sp/>`(code,<sp/>message,<sp/>data)`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>warnings<sp/>encountered.<sp/><sp/>(See<sp/>&quot;Warnings<sp/>and<sp/>Errors&quot;)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`strict`<sp/>Treat<sp/>warnings<sp/>as<sp/>crash-worthy<sp/>errors.<sp/><sp/>Default<sp/>false.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`cwd`<sp/>The<sp/>current<sp/>working<sp/>directory<sp/>for<sp/>adding<sp/>entries<sp/>to<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>archive.<sp/><sp/>Defaults<sp/>to<sp/>`process.cwd()`.<sp/><sp/>[Alias:<sp/>`C`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`prefix`<sp/>A<sp/>path<sp/>portion<sp/>to<sp/>prefix<sp/>onto<sp/>the<sp/>entries<sp/>in<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`gzip`<sp/>Set<sp/>to<sp/>any<sp/>truthy<sp/>value<sp/>to<sp/>create<sp/>a<sp/>gzipped<sp/>archive,<sp/>or<sp/>an</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>object<sp/>with<sp/>settings<sp/>for<sp/>`zlib.Gzip()`<sp/>[Alias:<sp/>`z`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`filter`<sp/>A<sp/>function<sp/>that<sp/>gets<sp/>called<sp/>with<sp/>`(path,<sp/>stat)`<sp/>for<sp/>each</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>entry<sp/>being<sp/>added.<sp/><sp/>Return<sp/>`true`<sp/>to<sp/>add<sp/>the<sp/>entry<sp/>to<sp/>the<sp/>archive,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>or<sp/>`false`<sp/>to<sp/>omit<sp/>it.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`portable`<sp/>Omit<sp/>metadata<sp/>that<sp/>is<sp/>system-specific:<sp/>`ctime`,<sp/>`atime`,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`uid`,<sp/>`gid`,<sp/>`uname`,<sp/>`gname`,<sp/>`dev`,<sp/>`ino`,<sp/>and<sp/>`nlink`.<sp/><sp/>Note</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>that<sp/>`mtime`<sp/>is<sp/>still<sp/>included,<sp/>because<sp/>this<sp/>is<sp/>necessary<sp/>for<sp/>other</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>time-based<sp/>operations.<sp/><sp/>Additionally,<sp/>`mode`<sp/>is<sp/>set<sp/>to<sp/>a<sp/>&quot;reasonable</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>default&quot;<sp/>for<sp/>most<sp/>unix<sp/>systems,<sp/>based<sp/>on<sp/>a<sp/>`umask`<sp/>value<sp/>of<sp/>`0o22`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`preservePaths`<sp/>Allow<sp/>absolute<sp/>paths.<sp/><sp/>By<sp/>default,<sp/>`/`<sp/>is<sp/>stripped</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>from<sp/>absolute<sp/>paths.<sp/>[Alias:<sp/>`P`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`maxReadSize`<sp/>The<sp/>maximum<sp/>buffer<sp/>size<sp/>for<sp/>`fs.read()`<sp/>operations.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>16<sp/>MB.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noDirRecurse`<sp/>Do<sp/>not<sp/>recursively<sp/>archive<sp/>the<sp/>contents<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>directories.<sp/>[Alias:<sp/>`n`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`follow`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>pack<sp/>the<sp/>targets<sp/>of<sp/>symbolic<sp/>links.<sp/><sp/>Without</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>this<sp/>option,<sp/>symbolic<sp/>links<sp/>are<sp/>archived<sp/>as<sp/>such.<sp/>[Alias:<sp/>`L`,<sp/>`h`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noPax`<sp/>Suppress<sp/>pax<sp/>extended<sp/>headers.<sp/><sp/>Note<sp/>that<sp/>this<sp/>means<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>long<sp/>paths<sp/>and<sp/>linkpaths<sp/>will<sp/>be<sp/>truncated,<sp/>and<sp/>large<sp/>or<sp/>negative</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>numeric<sp/>values<sp/>may<sp/>be<sp/>interpreted<sp/>incorrectly.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noMtime`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>omit<sp/>writing<sp/>`mtime`<sp/>values<sp/>for<sp/>entries.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Note<sp/>that<sp/>this<sp/>prevents<sp/>using<sp/>other<sp/>mtime-based<sp/>features<sp/>like</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`tar.update`<sp/>or<sp/>the<sp/>`keepNewer`<sp/>option<sp/>with<sp/>the<sp/>resulting<sp/>tar<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>[Alias:<sp/>`m`,<sp/>`no-mtime`]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`mtime`<sp/>Set<sp/>to<sp/>a<sp/>`Date`<sp/>object<sp/>to<sp/>force<sp/>a<sp/>specific<sp/>`mtime`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>everything<sp/>added<sp/>to<sp/>the<sp/>archive.<sp/><sp/>Overridden<sp/>by<sp/>`noMtime`.</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Low-Level<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>class<sp/>tar.Pack</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>readable<sp/>tar<sp/>stream.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Has<sp/>all<sp/>the<sp/>standard<sp/>readable<sp/>stream<sp/>interface<sp/>stuff.<sp/><sp/>`&apos;data&apos;`<sp/>and</highlight></codeline>
<codeline><highlight class="normal">`&apos;end&apos;`<sp/>events,<sp/>`read()`<sp/>method,<sp/>`pause()`<sp/>and<sp/>`resume()`,<sp/>etc.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>constructor(options)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>options<sp/>are<sp/>supported:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`onwarn`<sp/>A<sp/>function<sp/>that<sp/>will<sp/>get<sp/>called<sp/>with<sp/>`(code,<sp/>message,<sp/>data)`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>warnings<sp/>encountered.<sp/><sp/>(See<sp/>&quot;Warnings<sp/>and<sp/>Errors&quot;)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`strict`<sp/>Treat<sp/>warnings<sp/>as<sp/>crash-worthy<sp/>errors.<sp/><sp/>Default<sp/>false.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`cwd`<sp/>The<sp/>current<sp/>working<sp/>directory<sp/>for<sp/>creating<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>`process.cwd()`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`prefix`<sp/>A<sp/>path<sp/>portion<sp/>to<sp/>prefix<sp/>onto<sp/>the<sp/>entries<sp/>in<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`gzip`<sp/>Set<sp/>to<sp/>any<sp/>truthy<sp/>value<sp/>to<sp/>create<sp/>a<sp/>gzipped<sp/>archive,<sp/>or<sp/>an</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>object<sp/>with<sp/>settings<sp/>for<sp/>`zlib.Gzip()`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`filter`<sp/>A<sp/>function<sp/>that<sp/>gets<sp/>called<sp/>with<sp/>`(path,<sp/>stat)`<sp/>for<sp/>each</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>entry<sp/>being<sp/>added.<sp/><sp/>Return<sp/>`true`<sp/>to<sp/>add<sp/>the<sp/>entry<sp/>to<sp/>the<sp/>archive,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>or<sp/>`false`<sp/>to<sp/>omit<sp/>it.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`portable`<sp/>Omit<sp/>metadata<sp/>that<sp/>is<sp/>system-specific:<sp/>`ctime`,<sp/>`atime`,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`uid`,<sp/>`gid`,<sp/>`uname`,<sp/>`gname`,<sp/>`dev`,<sp/>`ino`,<sp/>and<sp/>`nlink`.<sp/><sp/>Note</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>that<sp/>`mtime`<sp/>is<sp/>still<sp/>included,<sp/>because<sp/>this<sp/>is<sp/>necessary<sp/>for<sp/>other</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>time-based<sp/>operations.<sp/><sp/>Additionally,<sp/>`mode`<sp/>is<sp/>set<sp/>to<sp/>a<sp/>&quot;reasonable</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>default&quot;<sp/>for<sp/>most<sp/>unix<sp/>systems,<sp/>based<sp/>on<sp/>a<sp/>`umask`<sp/>value<sp/>of<sp/>`0o22`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`preservePaths`<sp/>Allow<sp/>absolute<sp/>paths.<sp/><sp/>By<sp/>default,<sp/>`/`<sp/>is<sp/>stripped</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>from<sp/>absolute<sp/>paths.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`linkCache`<sp/>A<sp/>Map<sp/>object<sp/>containing<sp/>the<sp/>device<sp/>and<sp/>inode<sp/>value<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>file<sp/>whose<sp/>nlink<sp/>is<sp/>&gt;<sp/>1,<sp/>to<sp/>identify<sp/>hard<sp/>links.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`statCache`<sp/>A<sp/>Map<sp/>object<sp/>that<sp/>caches<sp/>calls<sp/>`lstat`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`readdirCache`<sp/>A<sp/>Map<sp/>object<sp/>that<sp/>caches<sp/>calls<sp/>to<sp/>`readdir`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`jobs`<sp/>A<sp/>number<sp/>specifying<sp/>how<sp/>many<sp/>concurrent<sp/>jobs<sp/>to<sp/>run.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>4.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`maxReadSize`<sp/>The<sp/>maximum<sp/>buffer<sp/>size<sp/>for<sp/>`fs.read()`<sp/>operations.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>16<sp/>MB.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noDirRecurse`<sp/>Do<sp/>not<sp/>recursively<sp/>archive<sp/>the<sp/>contents<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>directories.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`follow`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>pack<sp/>the<sp/>targets<sp/>of<sp/>symbolic<sp/>links.<sp/><sp/>Without</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>this<sp/>option,<sp/>symbolic<sp/>links<sp/>are<sp/>archived<sp/>as<sp/>such.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noPax`<sp/>Suppress<sp/>pax<sp/>extended<sp/>headers.<sp/><sp/>Note<sp/>that<sp/>this<sp/>means<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>long<sp/>paths<sp/>and<sp/>linkpaths<sp/>will<sp/>be<sp/>truncated,<sp/>and<sp/>large<sp/>or<sp/>negative</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>numeric<sp/>values<sp/>may<sp/>be<sp/>interpreted<sp/>incorrectly.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noMtime`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>omit<sp/>writing<sp/>`mtime`<sp/>values<sp/>for<sp/>entries.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Note<sp/>that<sp/>this<sp/>prevents<sp/>using<sp/>other<sp/>mtime-based<sp/>features<sp/>like</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`tar.update`<sp/>or<sp/>the<sp/>`keepNewer`<sp/>option<sp/>with<sp/>the<sp/>resulting<sp/>tar<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`mtime`<sp/>Set<sp/>to<sp/>a<sp/>`Date`<sp/>object<sp/>to<sp/>force<sp/>a<sp/>specific<sp/>`mtime`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>everything<sp/>added<sp/>to<sp/>the<sp/>archive.<sp/><sp/>Overridden<sp/>by<sp/>`noMtime`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>add(path)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Adds<sp/>an<sp/>entry<sp/>to<sp/>the<sp/>archive.<sp/><sp/>Returns<sp/>the<sp/>Pack<sp/>stream.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>write(path)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Adds<sp/>an<sp/>entry<sp/>to<sp/>the<sp/>archive.<sp/><sp/>Returns<sp/>true<sp/>if<sp/>flushed.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>end()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Finishes<sp/>the<sp/>archive.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>class<sp/>tar.Pack.Sync</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Synchronous<sp/>version<sp/>of<sp/>`tar.Pack`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>class<sp/>tar.Unpack</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>writable<sp/>stream<sp/>that<sp/>unpacks<sp/>a<sp/>tar<sp/>archive<sp/>onto<sp/>the<sp/>file<sp/>system.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">All<sp/>the<sp/>normal<sp/>writable<sp/>stream<sp/>stuff<sp/>is<sp/>supported.<sp/><sp/>`write()`<sp/>and</highlight></codeline>
<codeline><highlight class="normal">`end()`<sp/>methods,<sp/>`&apos;drain&apos;`<sp/>events,<sp/>etc.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Note<sp/>that<sp/>all<sp/>directories<sp/>that<sp/>are<sp/>created<sp/>will<sp/>be<sp/>forced<sp/>to<sp/>be</highlight></codeline>
<codeline><highlight class="normal">writable,<sp/>readable,<sp/>and<sp/>listable<sp/>by<sp/>their<sp/>owner,<sp/>to<sp/>avoid<sp/>cases<sp/>where</highlight></codeline>
<codeline><highlight class="normal">a<sp/>directory<sp/>prevents<sp/>extraction<sp/>of<sp/>child<sp/>entries<sp/>by<sp/>virtue<sp/>of<sp/>its</highlight></codeline>
<codeline><highlight class="normal">mode.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`&apos;close&apos;`<sp/>is<sp/>emitted<sp/>when<sp/>it&apos;s<sp/>done<sp/>writing<sp/>stuff<sp/>to<sp/>the<sp/>file<sp/>system.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Most<sp/>unpack<sp/>errors<sp/>will<sp/>cause<sp/>a<sp/>`warn`<sp/>event<sp/>to<sp/>be<sp/>emitted.<sp/><sp/>If<sp/>the</highlight></codeline>
<codeline><highlight class="normal">`cwd`<sp/>is<sp/>missing,<sp/>or<sp/>not<sp/>a<sp/>directory,<sp/>then<sp/>an<sp/>error<sp/>will<sp/>be<sp/>emitted.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>constructor(options)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`cwd`<sp/>Extract<sp/>files<sp/>relative<sp/>to<sp/>the<sp/>specified<sp/>directory.<sp/><sp/>Defaults</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>to<sp/>`process.cwd()`.<sp/><sp/>If<sp/>provided,<sp/>this<sp/>must<sp/>exist<sp/>and<sp/>must<sp/>be<sp/>a</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>directory.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`filter`<sp/>A<sp/>function<sp/>that<sp/>gets<sp/>called<sp/>with<sp/>`(path,<sp/>entry)`<sp/>for<sp/>each</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>entry<sp/>being<sp/>unpacked.<sp/><sp/>Return<sp/>`true`<sp/>to<sp/>unpack<sp/>the<sp/>entry<sp/>from<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>archive,<sp/>or<sp/>`false`<sp/>to<sp/>skip<sp/>it.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`newer`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>keep<sp/>the<sp/>existing<sp/>file<sp/>on<sp/>disk<sp/>if<sp/>it&apos;s<sp/>newer</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>than<sp/>the<sp/>file<sp/>in<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`keep`<sp/>Do<sp/>not<sp/>overwrite<sp/>existing<sp/>files.<sp/><sp/>In<sp/>particular,<sp/>if<sp/>a<sp/>file</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>appears<sp/>more<sp/>than<sp/>once<sp/>in<sp/>an<sp/>archive,<sp/>later<sp/>copies<sp/>will<sp/>not</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>overwrite<sp/>earlier<sp/>copies.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`preservePaths`<sp/>Allow<sp/>absolute<sp/>paths,<sp/>paths<sp/>containing<sp/>`..`,<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>extracting<sp/>through<sp/>symbolic<sp/>links.<sp/><sp/>By<sp/>default,<sp/>`/`<sp/>is<sp/>stripped<sp/>from</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>absolute<sp/>paths,<sp/>`..`<sp/>paths<sp/>are<sp/>not<sp/>extracted,<sp/>and<sp/>any<sp/>file<sp/>whose</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>location<sp/>would<sp/>be<sp/>modified<sp/>by<sp/>a<sp/>symbolic<sp/>link<sp/>is<sp/>not<sp/>extracted.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`unlink`<sp/>Unlink<sp/>files<sp/>before<sp/>creating<sp/>them.<sp/><sp/>Without<sp/>this<sp/>option,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>tar<sp/>overwrites<sp/>existing<sp/>files,<sp/>which<sp/>preserves<sp/>existing<sp/>hardlinks.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>With<sp/>this<sp/>option,<sp/>existing<sp/>hardlinks<sp/>will<sp/>be<sp/>broken,<sp/>as<sp/>will<sp/>any</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>symlink<sp/>that<sp/>would<sp/>affect<sp/>the<sp/>location<sp/>of<sp/>an<sp/>extracted<sp/>file.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`strip`<sp/>Remove<sp/>the<sp/>specified<sp/>number<sp/>of<sp/>leading<sp/>path<sp/>elements.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Pathnames<sp/>with<sp/>fewer<sp/>elements<sp/>will<sp/>be<sp/>silently<sp/>skipped.<sp/><sp/>Note<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>the<sp/>pathname<sp/>is<sp/>edited<sp/>after<sp/>applying<sp/>the<sp/>filter,<sp/>but<sp/>before</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>security<sp/>checks.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onwarn`<sp/>A<sp/>function<sp/>that<sp/>will<sp/>get<sp/>called<sp/>with<sp/>`(code,<sp/>message,<sp/>data)`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>warnings<sp/>encountered.<sp/><sp/>(See<sp/>&quot;Warnings<sp/>and<sp/>Errors&quot;)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`umask`<sp/>Filter<sp/>the<sp/>modes<sp/>of<sp/>entries<sp/>like<sp/>`process.umask()`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`dmode`<sp/>Default<sp/>mode<sp/>for<sp/>directories</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`fmode`<sp/>Default<sp/>mode<sp/>for<sp/>files</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`dirCache`<sp/>A<sp/>Map<sp/>object<sp/>of<sp/>which<sp/>directories<sp/>exist.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`maxMetaEntrySize`<sp/>The<sp/>maximum<sp/>size<sp/>of<sp/>meta<sp/>entries<sp/>that<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>supported.<sp/><sp/>Defaults<sp/>to<sp/>1<sp/>MB.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`preserveOwner`<sp/>If<sp/>true,<sp/>tar<sp/>will<sp/>set<sp/>the<sp/>`uid`<sp/>and<sp/>`gid`<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>extracted<sp/>entries<sp/>to<sp/>the<sp/>`uid`<sp/>and<sp/>`gid`<sp/>fields<sp/>in<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>This<sp/>defaults<sp/>to<sp/>true<sp/>when<sp/>run<sp/>as<sp/>root,<sp/>and<sp/>false<sp/>otherwise.<sp/><sp/>If</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>false,<sp/>then<sp/>files<sp/>and<sp/>directories<sp/>will<sp/>be<sp/>set<sp/>with<sp/>the<sp/>owner<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>group<sp/>of<sp/>the<sp/>user<sp/>running<sp/>the<sp/>process.<sp/><sp/>This<sp/>is<sp/>similar<sp/>to<sp/>`-p`<sp/>in</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`tar(1)`,<sp/>but<sp/>ACLs<sp/>and<sp/>other<sp/>system-specific<sp/>data<sp/>is<sp/>never<sp/>unpacked</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>in<sp/>this<sp/>implementation,<sp/>and<sp/>modes<sp/>are<sp/>set<sp/>by<sp/>default<sp/>already.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`win32`<sp/>True<sp/>if<sp/>on<sp/>a<sp/>windows<sp/>platform.<sp/><sp/>Causes<sp/>behavior<sp/>where</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>filenames<sp/>containing<sp/>`&lt;|&gt;?`<sp/>chars<sp/>are<sp/>converted<sp/>to</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>windows-compatible<sp/>values<sp/>while<sp/>being<sp/>unpacked.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`uid`<sp/>Set<sp/>to<sp/>a<sp/>number<sp/>to<sp/>force<sp/>ownership<sp/>of<sp/>all<sp/>extracted<sp/>files<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>folders,<sp/>and<sp/>all<sp/>implicitly<sp/>created<sp/>directories,<sp/>to<sp/>be<sp/>owned<sp/>by<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>specified<sp/>user<sp/>id,<sp/>regardless<sp/>of<sp/>the<sp/>`uid`<sp/>field<sp/>in<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Cannot<sp/>be<sp/>used<sp/>along<sp/>with<sp/>`preserveOwner`.<sp/><sp/>Requires<sp/>also<sp/>setting<sp/>a</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`gid`<sp/>option.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`gid`<sp/>Set<sp/>to<sp/>a<sp/>number<sp/>to<sp/>force<sp/>ownership<sp/>of<sp/>all<sp/>extracted<sp/>files<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>folders,<sp/>and<sp/>all<sp/>implicitly<sp/>created<sp/>directories,<sp/>to<sp/>be<sp/>owned<sp/>by<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>specified<sp/>group<sp/>id,<sp/>regardless<sp/>of<sp/>the<sp/>`gid`<sp/>field<sp/>in<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Cannot<sp/>be<sp/>used<sp/>along<sp/>with<sp/>`preserveOwner`.<sp/><sp/>Requires<sp/>also<sp/>setting<sp/>a</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`uid`<sp/>option.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noMtime`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>omit<sp/>writing<sp/>`mtime`<sp/>value<sp/>for<sp/>extracted</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>entries.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`transform`<sp/>Provide<sp/>a<sp/>function<sp/>that<sp/>takes<sp/>an<sp/>`entry`<sp/>object,<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>returns<sp/>a<sp/>stream,<sp/>or<sp/>any<sp/>falsey<sp/>value.<sp/><sp/>If<sp/>a<sp/>stream<sp/>is<sp/>provided,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>then<sp/>that<sp/>stream&apos;s<sp/>data<sp/>will<sp/>be<sp/>written<sp/>instead<sp/>of<sp/>the<sp/>contents<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>the<sp/>archive<sp/>entry.<sp/><sp/>If<sp/>a<sp/>falsey<sp/>value<sp/>is<sp/>provided,<sp/>then<sp/>the<sp/>entry<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>written<sp/>to<sp/>disk<sp/>as<sp/>normal.<sp/><sp/>(To<sp/>exclude<sp/>items<sp/>from<sp/>extraction,<sp/>use</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>the<sp/>`filter`<sp/>option<sp/>described<sp/>above.)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`strict`<sp/>Treat<sp/>warnings<sp/>as<sp/>crash-worthy<sp/>errors.<sp/><sp/>Default<sp/>false.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onentry`<sp/>A<sp/>function<sp/>that<sp/>gets<sp/>called<sp/>with<sp/>`(entry)`<sp/>for<sp/>each<sp/>entry</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>that<sp/>passes<sp/>the<sp/>filter.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onwarn`<sp/>A<sp/>function<sp/>that<sp/>will<sp/>get<sp/>called<sp/>with<sp/>`(code,<sp/>message,<sp/>data)`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>warnings<sp/>encountered.<sp/><sp/>(See<sp/>&quot;Warnings<sp/>and<sp/>Errors&quot;)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noChmod`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>omit<sp/>calling<sp/>`fs.chmod()`<sp/>to<sp/>ensure<sp/>that<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>extracted<sp/>file<sp/>matches<sp/>the<sp/>entry<sp/>mode.<sp/><sp/>This<sp/>also<sp/>suppresses<sp/>the<sp/>call<sp/>to</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`process.umask()`<sp/>to<sp/>determine<sp/>the<sp/>default<sp/>umask<sp/>value,<sp/>since<sp/>tar<sp/>will</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>extract<sp/>with<sp/>whatever<sp/>mode<sp/>is<sp/>provided,<sp/>and<sp/>let<sp/>the<sp/>process<sp/>`umask`<sp/>apply</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>normally.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`maxDepth`<sp/>The<sp/>maximum<sp/>depth<sp/>of<sp/>subfolders<sp/>to<sp/>extract<sp/>into.<sp/>This</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>defaults<sp/>to<sp/>1024.<sp/>Anything<sp/>deeper<sp/>than<sp/>the<sp/>limit<sp/>will<sp/>raise<sp/>a</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>warning<sp/>and<sp/>skip<sp/>the<sp/>entry.<sp/>Set<sp/>to<sp/>`Infinity`<sp/>to<sp/>remove<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>limitation.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>class<sp/>tar.Unpack.Sync</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Synchronous<sp/>version<sp/>of<sp/>`tar.Unpack`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Note<sp/>that<sp/>using<sp/>an<sp/>asynchronous<sp/>stream<sp/>type<sp/>with<sp/>the<sp/>`transform`</highlight></codeline>
<codeline><highlight class="normal">option<sp/>will<sp/>cause<sp/>undefined<sp/>behavior<sp/>in<sp/>sync<sp/>unpack<sp/>streams.</highlight></codeline>
<codeline><highlight class="normal">[MiniPass](http://npm.im/minipass)-based<sp/>streams<sp/>are<sp/>designed<sp/>for<sp/>this</highlight></codeline>
<codeline><highlight class="normal">use<sp/>case.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>class<sp/>tar.Parse</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>writable<sp/>stream<sp/>that<sp/>parses<sp/>a<sp/>tar<sp/>archive<sp/>stream.<sp/><sp/>All<sp/>the<sp/>standard</highlight></codeline>
<codeline><highlight class="normal">writable<sp/>stream<sp/>stuff<sp/>is<sp/>supported.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>the<sp/>archive<sp/>is<sp/>gzipped,<sp/>then<sp/>tar<sp/>will<sp/>detect<sp/>this<sp/>and<sp/>unzip<sp/>it.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Emits<sp/>`&apos;entry&apos;`<sp/>events<sp/>with<sp/>`tar.ReadEntry`<sp/>objects,<sp/>which<sp/>are</highlight></codeline>
<codeline><highlight class="normal">themselves<sp/>readable<sp/>streams<sp/>that<sp/>you<sp/>can<sp/>pipe<sp/>wherever.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Each<sp/>`entry`<sp/>will<sp/>not<sp/>emit<sp/>until<sp/>the<sp/>one<sp/>before<sp/>it<sp/>is<sp/>flushed<sp/>through,</highlight></codeline>
<codeline><highlight class="normal">so<sp/>make<sp/>sure<sp/>to<sp/>either<sp/>consume<sp/>the<sp/>data<sp/>(with<sp/>`on(&apos;data&apos;,<sp/>...)`<sp/>or</highlight></codeline>
<codeline><highlight class="normal">`.pipe(...)`)<sp/>or<sp/>throw<sp/>it<sp/>away<sp/>with<sp/>`.resume()`<sp/>to<sp/>keep<sp/>the<sp/>stream</highlight></codeline>
<codeline><highlight class="normal">flowing.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>constructor(options)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Returns<sp/>an<sp/>event<sp/>emitter<sp/>that<sp/>emits<sp/>`entry`<sp/>events<sp/>with</highlight></codeline>
<codeline><highlight class="normal">`tar.ReadEntry`<sp/>objects.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>options<sp/>are<sp/>supported:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`strict`<sp/>Treat<sp/>warnings<sp/>as<sp/>crash-worthy<sp/>errors.<sp/><sp/>Default<sp/>false.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`filter`<sp/>A<sp/>function<sp/>that<sp/>gets<sp/>called<sp/>with<sp/>`(path,<sp/>entry)`<sp/>for<sp/>each</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>entry<sp/>being<sp/>listed.<sp/><sp/>Return<sp/>`true`<sp/>to<sp/>emit<sp/>the<sp/>entry<sp/>from<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>archive,<sp/>or<sp/>`false`<sp/>to<sp/>skip<sp/>it.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onentry`<sp/>A<sp/>function<sp/>that<sp/>gets<sp/>called<sp/>with<sp/>`(entry)`<sp/>for<sp/>each<sp/>entry</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>that<sp/>passes<sp/>the<sp/>filter.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onwarn`<sp/>A<sp/>function<sp/>that<sp/>will<sp/>get<sp/>called<sp/>with<sp/>`(code,<sp/>message,<sp/>data)`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>warnings<sp/>encountered.<sp/><sp/>(See<sp/>&quot;Warnings<sp/>and<sp/>Errors&quot;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>abort(error)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Stop<sp/>all<sp/>parsing<sp/>activities.<sp/><sp/>This<sp/>is<sp/>called<sp/>when<sp/>there<sp/>are<sp/>zlib</highlight></codeline>
<codeline><highlight class="normal">errors.<sp/><sp/>It<sp/>also<sp/>emits<sp/>an<sp/>unrecoverable<sp/>warning<sp/>with<sp/>the<sp/>error<sp/>provided.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>class<sp/>tar.ReadEntry<sp/>extends<sp/>[MiniPass](http://npm.im/minipass)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>representation<sp/>of<sp/>an<sp/>entry<sp/>that<sp/>is<sp/>being<sp/>read<sp/>out<sp/>of<sp/>a<sp/>tar<sp/>archive.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">It<sp/>has<sp/>the<sp/>following<sp/>fields:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`extended`<sp/>The<sp/>extended<sp/>metadata<sp/>object<sp/>provided<sp/>to<sp/>the<sp/>constructor.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`globalExtended`<sp/>The<sp/>global<sp/>extended<sp/>metadata<sp/>object<sp/>provided<sp/>to<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>constructor.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`remain`<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>remaining<sp/>to<sp/>be<sp/>written<sp/>into<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>stream.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`blockRemain`<sp/>The<sp/>number<sp/>of<sp/>512-byte<sp/>blocks<sp/>remaining<sp/>to<sp/>be<sp/>written</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>into<sp/>the<sp/>stream.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`ignore`<sp/>Whether<sp/>this<sp/>entry<sp/>should<sp/>be<sp/>ignored.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`meta`<sp/>True<sp/>if<sp/>this<sp/>represents<sp/>metadata<sp/>about<sp/>the<sp/>next<sp/>entry,<sp/>false</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>it<sp/>represents<sp/>a<sp/>filesystem<sp/>object.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>All<sp/>the<sp/>fields<sp/>from<sp/>the<sp/>header,<sp/>extended<sp/>header,<sp/>and<sp/>global<sp/>extended</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>header<sp/>are<sp/>added<sp/>to<sp/>the<sp/>ReadEntry<sp/>object.<sp/><sp/>So<sp/>it<sp/>has<sp/>`path`,<sp/>`type`,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`size`,<sp/>`mode`,<sp/>and<sp/>so<sp/>on.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>constructor(header,<sp/>extended,<sp/>globalExtended)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>a<sp/>new<sp/>ReadEntry<sp/>object<sp/>with<sp/>the<sp/>specified<sp/>header,<sp/>extended</highlight></codeline>
<codeline><highlight class="normal">header,<sp/>and<sp/>global<sp/>extended<sp/>header<sp/>values.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>class<sp/>tar.WriteEntry<sp/>extends<sp/>[MiniPass](http://npm.im/minipass)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>representation<sp/>of<sp/>an<sp/>entry<sp/>that<sp/>is<sp/>being<sp/>written<sp/>from<sp/>the<sp/>file</highlight></codeline>
<codeline><highlight class="normal">system<sp/>into<sp/>a<sp/>tar<sp/>archive.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Emits<sp/>data<sp/>for<sp/>the<sp/>Header,<sp/>and<sp/>for<sp/>the<sp/>Pax<sp/>Extended<sp/>Header<sp/>if<sp/>one<sp/>is</highlight></codeline>
<codeline><highlight class="normal">required,<sp/>as<sp/>well<sp/>as<sp/>any<sp/>body<sp/>data.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Creating<sp/>a<sp/>WriteEntry<sp/>for<sp/>a<sp/>directory<sp/>does<sp/>not<sp/>also<sp/>create</highlight></codeline>
<codeline><highlight class="normal">WriteEntry<sp/>objects<sp/>for<sp/>all<sp/>of<sp/>the<sp/>directory<sp/>contents.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">It<sp/>has<sp/>the<sp/>following<sp/>fields:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`path`<sp/>The<sp/>path<sp/>field<sp/>that<sp/>will<sp/>be<sp/>written<sp/>to<sp/>the<sp/>archive.<sp/><sp/>By</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>default,<sp/>this<sp/>is<sp/>also<sp/>the<sp/>path<sp/>from<sp/>the<sp/>cwd<sp/>to<sp/>the<sp/>file<sp/>system</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>object.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`portable`<sp/>Omit<sp/>metadata<sp/>that<sp/>is<sp/>system-specific:<sp/>`ctime`,<sp/>`atime`,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`uid`,<sp/>`gid`,<sp/>`uname`,<sp/>`gname`,<sp/>`dev`,<sp/>`ino`,<sp/>and<sp/>`nlink`.<sp/><sp/>Note</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>that<sp/>`mtime`<sp/>is<sp/>still<sp/>included,<sp/>because<sp/>this<sp/>is<sp/>necessary<sp/>for<sp/>other</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>time-based<sp/>operations.<sp/><sp/>Additionally,<sp/>`mode`<sp/>is<sp/>set<sp/>to<sp/>a<sp/>&quot;reasonable</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>default&quot;<sp/>for<sp/>most<sp/>unix<sp/>systems,<sp/>based<sp/>on<sp/>a<sp/>`umask`<sp/>value<sp/>of<sp/>`0o22`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`myuid`<sp/>If<sp/>supported,<sp/>the<sp/>uid<sp/>of<sp/>the<sp/>user<sp/>running<sp/>the<sp/>current</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>process.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`myuser`<sp/>The<sp/>`env.USER`<sp/>string<sp/>if<sp/>set,<sp/>or<sp/>`&apos;&apos;`.<sp/><sp/>Set<sp/>as<sp/>the<sp/>entry</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`uname`<sp/>field<sp/>if<sp/>the<sp/>file&apos;s<sp/>`uid`<sp/>matches<sp/>`this.myuid`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`maxReadSize`<sp/>The<sp/>maximum<sp/>buffer<sp/>size<sp/>for<sp/>`fs.read()`<sp/>operations.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>1<sp/>MB.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`linkCache`<sp/>A<sp/>Map<sp/>object<sp/>containing<sp/>the<sp/>device<sp/>and<sp/>inode<sp/>value<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>file<sp/>whose<sp/>nlink<sp/>is<sp/>&gt;<sp/>1,<sp/>to<sp/>identify<sp/>hard<sp/>links.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`statCache`<sp/>A<sp/>Map<sp/>object<sp/>that<sp/>caches<sp/>calls<sp/>`lstat`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`preservePaths`<sp/>Allow<sp/>absolute<sp/>paths.<sp/><sp/>By<sp/>default,<sp/>`/`<sp/>is<sp/>stripped</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>from<sp/>absolute<sp/>paths.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`cwd`<sp/>The<sp/>current<sp/>working<sp/>directory<sp/>for<sp/>creating<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>`process.cwd()`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`absolute`<sp/>The<sp/>absolute<sp/>path<sp/>to<sp/>the<sp/>entry<sp/>on<sp/>the<sp/>filesystem.<sp/><sp/>By</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>default,<sp/>this<sp/>is<sp/>`path.resolve(this.cwd,<sp/>this.path)`,<sp/>but<sp/>it<sp/>can<sp/>be</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>overridden<sp/>explicitly.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`strict`<sp/>Treat<sp/>warnings<sp/>as<sp/>crash-worthy<sp/>errors.<sp/><sp/>Default<sp/>false.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`win32`<sp/>True<sp/>if<sp/>on<sp/>a<sp/>windows<sp/>platform.<sp/><sp/>Causes<sp/>behavior<sp/>where<sp/>paths</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>replace<sp/>`\`<sp/>with<sp/>`/`<sp/>and<sp/>filenames<sp/>containing<sp/>the<sp/>windows-compatible</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>forms<sp/>of<sp/>`&lt;|&gt;?:`<sp/>characters<sp/>are<sp/>converted<sp/>to<sp/>actual<sp/>`&lt;|&gt;?:`<sp/>characters</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>in<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noPax`<sp/>Suppress<sp/>pax<sp/>extended<sp/>headers.<sp/><sp/>Note<sp/>that<sp/>this<sp/>means<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>long<sp/>paths<sp/>and<sp/>linkpaths<sp/>will<sp/>be<sp/>truncated,<sp/>and<sp/>large<sp/>or<sp/>negative</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>numeric<sp/>values<sp/>may<sp/>be<sp/>interpreted<sp/>incorrectly.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noMtime`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>omit<sp/>writing<sp/>`mtime`<sp/>values<sp/>for<sp/>entries.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Note<sp/>that<sp/>this<sp/>prevents<sp/>using<sp/>other<sp/>mtime-based<sp/>features<sp/>like</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`tar.update`<sp/>or<sp/>the<sp/>`keepNewer`<sp/>option<sp/>with<sp/>the<sp/>resulting<sp/>tar<sp/>archive.</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>constructor(path,<sp/>options)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`path`<sp/>is<sp/>the<sp/>path<sp/>of<sp/>the<sp/>entry<sp/>as<sp/>it<sp/>is<sp/>written<sp/>in<sp/>the<sp/>archive.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>options<sp/>are<sp/>supported:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`portable`<sp/>Omit<sp/>metadata<sp/>that<sp/>is<sp/>system-specific:<sp/>`ctime`,<sp/>`atime`,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`uid`,<sp/>`gid`,<sp/>`uname`,<sp/>`gname`,<sp/>`dev`,<sp/>`ino`,<sp/>and<sp/>`nlink`.<sp/><sp/>Note</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>that<sp/>`mtime`<sp/>is<sp/>still<sp/>included,<sp/>because<sp/>this<sp/>is<sp/>necessary<sp/>for<sp/>other</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>time-based<sp/>operations.<sp/><sp/>Additionally,<sp/>`mode`<sp/>is<sp/>set<sp/>to<sp/>a<sp/>&quot;reasonable</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>default&quot;<sp/>for<sp/>most<sp/>unix<sp/>systems,<sp/>based<sp/>on<sp/>a<sp/>`umask`<sp/>value<sp/>of<sp/>`0o22`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`maxReadSize`<sp/>The<sp/>maximum<sp/>buffer<sp/>size<sp/>for<sp/>`fs.read()`<sp/>operations.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>1<sp/>MB.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`linkCache`<sp/>A<sp/>Map<sp/>object<sp/>containing<sp/>the<sp/>device<sp/>and<sp/>inode<sp/>value<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>file<sp/>whose<sp/>nlink<sp/>is<sp/>&gt;<sp/>1,<sp/>to<sp/>identify<sp/>hard<sp/>links.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`statCache`<sp/>A<sp/>Map<sp/>object<sp/>that<sp/>caches<sp/>calls<sp/>`lstat`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`preservePaths`<sp/>Allow<sp/>absolute<sp/>paths.<sp/><sp/>By<sp/>default,<sp/>`/`<sp/>is<sp/>stripped</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>from<sp/>absolute<sp/>paths.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`cwd`<sp/>The<sp/>current<sp/>working<sp/>directory<sp/>for<sp/>creating<sp/>the<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Defaults<sp/>to<sp/>`process.cwd()`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`absolute`<sp/>The<sp/>absolute<sp/>path<sp/>to<sp/>the<sp/>entry<sp/>on<sp/>the<sp/>filesystem.<sp/><sp/>By</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>default,<sp/>this<sp/>is<sp/>`path.resolve(this.cwd,<sp/>this.path)`,<sp/>but<sp/>it<sp/>can<sp/>be</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>overridden<sp/>explicitly.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`strict`<sp/>Treat<sp/>warnings<sp/>as<sp/>crash-worthy<sp/>errors.<sp/><sp/>Default<sp/>false.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`win32`<sp/>True<sp/>if<sp/>on<sp/>a<sp/>windows<sp/>platform.<sp/><sp/>Causes<sp/>behavior<sp/>where<sp/>paths</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>replace<sp/>`\`<sp/>with<sp/>`/`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onwarn`<sp/>A<sp/>function<sp/>that<sp/>will<sp/>get<sp/>called<sp/>with<sp/>`(code,<sp/>message,<sp/>data)`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>warnings<sp/>encountered.<sp/><sp/>(See<sp/>&quot;Warnings<sp/>and<sp/>Errors&quot;)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noMtime`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>omit<sp/>writing<sp/>`mtime`<sp/>values<sp/>for<sp/>entries.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Note<sp/>that<sp/>this<sp/>prevents<sp/>using<sp/>other<sp/>mtime-based<sp/>features<sp/>like</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`tar.update`<sp/>or<sp/>the<sp/>`keepNewer`<sp/>option<sp/>with<sp/>the<sp/>resulting<sp/>tar<sp/>archive.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`umask`<sp/>Set<sp/>to<sp/>restrict<sp/>the<sp/>modes<sp/>on<sp/>the<sp/>entries<sp/>in<sp/>the<sp/>archive,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>somewhat<sp/>like<sp/>how<sp/>umask<sp/>works<sp/>on<sp/>file<sp/>creation.<sp/><sp/>Defaults<sp/>to</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`process.umask()`<sp/>on<sp/>unix<sp/>systems,<sp/>or<sp/>`0o22`<sp/>on<sp/>Windows.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>warn(message,<sp/>data)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>strict,<sp/>emit<sp/>an<sp/>error<sp/>with<sp/>the<sp/>provided<sp/>message.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Othewise,<sp/>emit<sp/>a<sp/>`&apos;warn&apos;`<sp/>event<sp/>with<sp/>the<sp/>provided<sp/>message<sp/>and<sp/>data.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>class<sp/>tar.WriteEntry.Sync</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Synchronous<sp/>version<sp/>of<sp/>tar.WriteEntry</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>class<sp/>tar.WriteEntry.Tar</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>version<sp/>of<sp/>tar.WriteEntry<sp/>that<sp/>gets<sp/>its<sp/>data<sp/>from<sp/>a<sp/>tar.ReadEntry</highlight></codeline>
<codeline><highlight class="normal">instead<sp/>of<sp/>from<sp/>the<sp/>filesystem.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>constructor(readEntry,<sp/>options)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`readEntry`<sp/>is<sp/>the<sp/>entry<sp/>being<sp/>read<sp/>out<sp/>of<sp/>another<sp/>archive.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>options<sp/>are<sp/>supported:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`portable`<sp/>Omit<sp/>metadata<sp/>that<sp/>is<sp/>system-specific:<sp/>`ctime`,<sp/>`atime`,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`uid`,<sp/>`gid`,<sp/>`uname`,<sp/>`gname`,<sp/>`dev`,<sp/>`ino`,<sp/>and<sp/>`nlink`.<sp/><sp/>Note</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>that<sp/>`mtime`<sp/>is<sp/>still<sp/>included,<sp/>because<sp/>this<sp/>is<sp/>necessary<sp/>for<sp/>other</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>time-based<sp/>operations.<sp/><sp/>Additionally,<sp/>`mode`<sp/>is<sp/>set<sp/>to<sp/>a<sp/>&quot;reasonable</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>default&quot;<sp/>for<sp/>most<sp/>unix<sp/>systems,<sp/>based<sp/>on<sp/>a<sp/>`umask`<sp/>value<sp/>of<sp/>`0o22`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`preservePaths`<sp/>Allow<sp/>absolute<sp/>paths.<sp/><sp/>By<sp/>default,<sp/>`/`<sp/>is<sp/>stripped</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>from<sp/>absolute<sp/>paths.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`strict`<sp/>Treat<sp/>warnings<sp/>as<sp/>crash-worthy<sp/>errors.<sp/><sp/>Default<sp/>false.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`onwarn`<sp/>A<sp/>function<sp/>that<sp/>will<sp/>get<sp/>called<sp/>with<sp/>`(code,<sp/>message,<sp/>data)`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>any<sp/>warnings<sp/>encountered.<sp/><sp/>(See<sp/>&quot;Warnings<sp/>and<sp/>Errors&quot;)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`noMtime`<sp/>Set<sp/>to<sp/>true<sp/>to<sp/>omit<sp/>writing<sp/>`mtime`<sp/>values<sp/>for<sp/>entries.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Note<sp/>that<sp/>this<sp/>prevents<sp/>using<sp/>other<sp/>mtime-based<sp/>features<sp/>like</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`tar.update`<sp/>or<sp/>the<sp/>`keepNewer`<sp/>option<sp/>with<sp/>the<sp/>resulting<sp/>tar<sp/>archive.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>class<sp/>tar.Header</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>class<sp/>for<sp/>reading<sp/>and<sp/>writing<sp/>header<sp/>blocks.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">It<sp/>has<sp/>the<sp/>following<sp/>fields:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`nullBlock`<sp/>True<sp/>if<sp/>decoding<sp/>a<sp/>block<sp/>which<sp/>is<sp/>entirely<sp/>composed<sp/>of</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`0x00`<sp/>null<sp/>bytes.<sp/><sp/>(Useful<sp/>because<sp/>tar<sp/>files<sp/>are<sp/>terminated<sp/>by</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>at<sp/>least<sp/>2<sp/>null<sp/>blocks.)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`cksumValid`<sp/>True<sp/>if<sp/>the<sp/>checksum<sp/>in<sp/>the<sp/>header<sp/>is<sp/>valid,<sp/>false</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>otherwise.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`needPax`<sp/>True<sp/>if<sp/>the<sp/>values,<sp/>as<sp/>encoded,<sp/>will<sp/>require<sp/>a<sp/>Pax</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>extended<sp/>header.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`path`<sp/>The<sp/>path<sp/>of<sp/>the<sp/>entry.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`mode`<sp/>The<sp/>4<sp/>lowest-order<sp/>octal<sp/>digits<sp/>of<sp/>the<sp/>file<sp/>mode.<sp/><sp/>That<sp/>is,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>read/write/execute<sp/>permissions<sp/>for<sp/>world,<sp/>group,<sp/>and<sp/>owner,<sp/>and<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>setuid,<sp/>setgid,<sp/>and<sp/>sticky<sp/>bits.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`uid`<sp/>Numeric<sp/>user<sp/>id<sp/>of<sp/>the<sp/>file<sp/>owner</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`gid`<sp/>Numeric<sp/>group<sp/>id<sp/>of<sp/>the<sp/>file<sp/>owner</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`size`<sp/>Size<sp/>of<sp/>the<sp/>file<sp/>in<sp/>bytes</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`mtime`<sp/>Modified<sp/>time<sp/>of<sp/>the<sp/>file</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`cksum`<sp/>The<sp/>checksum<sp/>of<sp/>the<sp/>header.<sp/><sp/>This<sp/>is<sp/>generated<sp/>by<sp/>adding<sp/>all</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>the<sp/>bytes<sp/>of<sp/>the<sp/>header<sp/>block,<sp/>treating<sp/>the<sp/>checksum<sp/>field<sp/>itself<sp/>as</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>all<sp/>ascii<sp/>space<sp/>characters<sp/>(that<sp/>is,<sp/>`0x20`).</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`type`<sp/>The<sp/>human-readable<sp/>name<sp/>of<sp/>the<sp/>type<sp/>of<sp/>entry<sp/>this<sp/>represents,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>or<sp/>the<sp/>alphanumeric<sp/>key<sp/>if<sp/>unknown.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`typeKey`<sp/>The<sp/>alphanumeric<sp/>key<sp/>for<sp/>the<sp/>type<sp/>of<sp/>entry<sp/>this<sp/>header</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>represents.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`linkpath`<sp/>The<sp/>target<sp/>of<sp/>Link<sp/>and<sp/>SymbolicLink<sp/>entries.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`uname`<sp/>Human-readable<sp/>user<sp/>name<sp/>of<sp/>the<sp/>file<sp/>owner</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`gname`<sp/>Human-readable<sp/>group<sp/>name<sp/>of<sp/>the<sp/>file<sp/>owner</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`devmaj`<sp/>The<sp/>major<sp/>portion<sp/>of<sp/>the<sp/>device<sp/>number.<sp/><sp/>Always<sp/>`0`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>files,<sp/>directories,<sp/>and<sp/>links.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`devmin`<sp/>The<sp/>minor<sp/>portion<sp/>of<sp/>the<sp/>device<sp/>number.<sp/><sp/>Always<sp/>`0`<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>files,<sp/>directories,<sp/>and<sp/>links.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`atime`<sp/>File<sp/>access<sp/>time.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`ctime`<sp/>File<sp/>change<sp/>time.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>constructor(data,<sp/>[offset=0])</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`data`<sp/>is<sp/>optional.<sp/><sp/>It<sp/>is<sp/>either<sp/>a<sp/>Buffer<sp/>that<sp/>should<sp/>be<sp/>interpreted</highlight></codeline>
<codeline><highlight class="normal">as<sp/>a<sp/>tar<sp/>Header<sp/>starting<sp/>at<sp/>the<sp/>specified<sp/>offset<sp/>and<sp/>continuing<sp/>for</highlight></codeline>
<codeline><highlight class="normal">512<sp/>bytes,<sp/>or<sp/>a<sp/>data<sp/>object<sp/>of<sp/>keys<sp/>and<sp/>values<sp/>to<sp/>set<sp/>on<sp/>the<sp/>header</highlight></codeline>
<codeline><highlight class="normal">object,<sp/>and<sp/>eventually<sp/>encode<sp/>as<sp/>a<sp/>tar<sp/>Header.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>decode(block,<sp/>offset)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Decode<sp/>the<sp/>provided<sp/>buffer<sp/>starting<sp/>at<sp/>the<sp/>specified<sp/>offset.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Buffer<sp/>length<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>512<sp/>bytes.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>set(data)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Set<sp/>the<sp/>fields<sp/>in<sp/>the<sp/>data<sp/>object.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>encode(buffer,<sp/>offset)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Encode<sp/>the<sp/>header<sp/>fields<sp/>into<sp/>the<sp/>buffer<sp/>at<sp/>the<sp/>specified<sp/>offset.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Returns<sp/>`this.needPax`<sp/>to<sp/>indicate<sp/>whether<sp/>a<sp/>Pax<sp/>Extended<sp/>Header<sp/>is</highlight></codeline>
<codeline><highlight class="normal">required<sp/>to<sp/>properly<sp/>encode<sp/>the<sp/>specified<sp/>data.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>class<sp/>tar.Pax</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">An<sp/>object<sp/>representing<sp/>a<sp/>set<sp/>of<sp/>key-value<sp/>pairs<sp/>in<sp/>an<sp/>Pax<sp/>extended</highlight></codeline>
<codeline><highlight class="normal">header<sp/>entry.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">It<sp/>has<sp/>the<sp/>following<sp/>fields.<sp/><sp/>Where<sp/>the<sp/>same<sp/>name<sp/>is<sp/>used,<sp/>they<sp/>have</highlight></codeline>
<codeline><highlight class="normal">the<sp/>same<sp/>semantics<sp/>as<sp/>the<sp/>tar.Header<sp/>field<sp/>of<sp/>the<sp/>same<sp/>name.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`global`<sp/>True<sp/>if<sp/>this<sp/>represents<sp/>a<sp/>global<sp/>extended<sp/>header,<sp/>or<sp/>false</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>it<sp/>is<sp/>for<sp/>a<sp/>single<sp/>entry.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`atime`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`charset`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`comment`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`ctime`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`gid`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`gname`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`linkpath`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`mtime`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`path`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`size`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`uid`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`uname`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`dev`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`ino`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`nlink`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>constructor(object,<sp/>global)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Set<sp/>the<sp/>fields<sp/>set<sp/>in<sp/>the<sp/>object.<sp/><sp/>`global`<sp/>is<sp/>a<sp/>boolean<sp/>that<sp/>defaults</highlight></codeline>
<codeline><highlight class="normal">to<sp/>false.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>encode()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Return<sp/>a<sp/>Buffer<sp/>containing<sp/>the<sp/>header<sp/>and<sp/>body<sp/>for<sp/>the<sp/>Pax<sp/>extended</highlight></codeline>
<codeline><highlight class="normal">header<sp/>entry,<sp/>or<sp/>`null`<sp/>if<sp/>there<sp/>is<sp/>nothing<sp/>to<sp/>encode.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>encodeBody()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Return<sp/>a<sp/>string<sp/>representing<sp/>the<sp/>body<sp/>of<sp/>the<sp/>pax<sp/>extended<sp/>header</highlight></codeline>
<codeline><highlight class="normal">entry.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>encodeField(fieldName)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Return<sp/>a<sp/>string<sp/>representing<sp/>the<sp/>key/value<sp/>encoding<sp/>for<sp/>the<sp/>specified</highlight></codeline>
<codeline><highlight class="normal">fieldName,<sp/>or<sp/>`&apos;&apos;`<sp/>if<sp/>the<sp/>field<sp/>is<sp/>unset.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>tar.Pax.parse(string,<sp/>extended,<sp/>global)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Return<sp/>a<sp/>new<sp/>Pax<sp/>object<sp/>created<sp/>by<sp/>parsing<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>string</highlight></codeline>
<codeline><highlight class="normal">provided.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>the<sp/>`extended`<sp/>object<sp/>is<sp/>set,<sp/>then<sp/>also<sp/>add<sp/>the<sp/>fields<sp/>from<sp/>that</highlight></codeline>
<codeline><highlight class="normal">object.<sp/><sp/>(This<sp/>is<sp/>necessary<sp/>because<sp/>multiple<sp/>metadata<sp/>entries<sp/>can</highlight></codeline>
<codeline><highlight class="normal">occur<sp/>in<sp/>sequence.)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>tar.types</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>translation<sp/>table<sp/>for<sp/>the<sp/>`type`<sp/>field<sp/>in<sp/>tar<sp/>headers.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>tar.types.name.get(code)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Get<sp/>the<sp/>human-readable<sp/>name<sp/>for<sp/>a<sp/>given<sp/>alphanumeric<sp/>code.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>tar.types.code.get(name)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Get<sp/>the<sp/>alphanumeric<sp/>code<sp/>for<sp/>a<sp/>given<sp/>human-readable<sp/>name.</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/tar/README.md"/>
  </compounddef>
</doxygen>
