<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2path-to-regexp_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>Readme.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Path-to-RegExp</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Turn<sp/>an<sp/>Express-style<sp/>path<sp/>string<sp/>such<sp/>as<sp/>`/user/:name`<sp/>into<sp/>a<sp/>regular<sp/>expression.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**Note:**<sp/>This<sp/>is<sp/>a<sp/>legacy<sp/>branch.<sp/>You<sp/>should<sp/>upgrade<sp/>to<sp/>`1.x`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Usage</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```javascript</highlight></codeline>
<codeline><highlight class="normal">var<sp/>pathToRegexp<sp/>=<sp/>require(&apos;path-to-regexp&apos;);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>pathToRegexp(path,<sp/>keys,<sp/>options)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>**path**<sp/>A<sp/>string<sp/>in<sp/>the<sp/>express<sp/>format,<sp/>an<sp/>array<sp/>of<sp/>such<sp/>strings,<sp/>or<sp/>a<sp/>regular<sp/>expression</highlight></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>**keys**<sp/>An<sp/>array<sp/>to<sp/>be<sp/>populated<sp/>with<sp/>the<sp/>keys<sp/>present<sp/>in<sp/>the<sp/>url.<sp/><sp/>Once<sp/>the<sp/>function<sp/>completes,<sp/>this<sp/>will<sp/>be<sp/>an<sp/>array<sp/>of<sp/>strings.</highlight></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>**options**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>**options.sensitive**<sp/>Defaults<sp/>to<sp/>false,<sp/>set<sp/>this<sp/>to<sp/>true<sp/>to<sp/>make<sp/>routes<sp/>case<sp/>sensitive</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>**options.strict**<sp/>Defaults<sp/>to<sp/>false,<sp/>set<sp/>this<sp/>to<sp/>true<sp/>to<sp/>make<sp/>the<sp/>trailing<sp/>slash<sp/>matter.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>-<sp/>**options.end**<sp/>Defaults<sp/>to<sp/>true,<sp/>set<sp/>this<sp/>to<sp/>false<sp/>to<sp/>only<sp/>match<sp/>the<sp/>prefix<sp/>of<sp/>the<sp/>URL.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```javascript</highlight></codeline>
<codeline><highlight class="normal">var<sp/>keys<sp/>=<sp/>[];</highlight></codeline>
<codeline><highlight class="normal">var<sp/>exp<sp/>=<sp/>pathToRegexp(&apos;/foo/:bar&apos;,<sp/>keys);</highlight></codeline>
<codeline><highlight class="normal">//keys<sp/>=<sp/>[&apos;bar&apos;]</highlight></codeline>
<codeline><highlight class="normal">//exp<sp/>=<sp/>/^\/foo\/(?:([^\/]+?))\/?$/i</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Live<sp/>Demo</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>see<sp/>a<sp/>live<sp/>demo<sp/>of<sp/>this<sp/>library<sp/>in<sp/>use<sp/>at<sp/>[express-route-tester](http://forbeslindesay.github.com/express-route-tester/).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>MIT</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/path-to-regexp/Readme.md"/>
  </compounddef>
</doxygen>
