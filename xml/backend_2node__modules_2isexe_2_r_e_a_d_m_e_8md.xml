<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2isexe_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>isexe</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Minimal<sp/>module<sp/>to<sp/>check<sp/>if<sp/>a<sp/>file<sp/>is<sp/>executable,<sp/>and<sp/>a<sp/>normal<sp/>file.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Uses<sp/>`fs.stat`<sp/>and<sp/>tests<sp/>against<sp/>the<sp/>`PATHEXT`<sp/>environment<sp/>variable<sp/>on</highlight></codeline>
<codeline><highlight class="normal">Windows.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>USAGE</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```javascript</highlight></codeline>
<codeline><highlight class="normal">var<sp/>isexe<sp/>=<sp/>require(&apos;isexe&apos;)</highlight></codeline>
<codeline><highlight class="normal">isexe(&apos;some-file-name&apos;,<sp/>function<sp/>(err,<sp/>isExe)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(err)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>console.error(&apos;probably<sp/>file<sp/>does<sp/>not<sp/>exist<sp/>or<sp/>something&apos;,<sp/>err)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(isExe)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>console.error(&apos;this<sp/>thing<sp/>can<sp/>be<sp/>run&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>console.error(&apos;cannot<sp/>be<sp/>run&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">})</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>same<sp/>thing<sp/>but<sp/>synchronous,<sp/>throws<sp/>errors</highlight></codeline>
<codeline><highlight class="normal">var<sp/>isExe<sp/>=<sp/>isexe.sync(&apos;some-file-name&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>treat<sp/>errors<sp/>as<sp/>just<sp/>&quot;not<sp/>executable&quot;</highlight></codeline>
<codeline><highlight class="normal">isexe(&apos;maybe-missing-file&apos;,<sp/>{<sp/>ignoreErrors:<sp/>true<sp/>},<sp/>callback)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>isExe<sp/>=<sp/>isexe.sync(&apos;maybe-missing-file&apos;,<sp/>{<sp/>ignoreErrors:<sp/>true<sp/>})</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>`isexe(path,<sp/>[options],<sp/>[callback])`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Check<sp/>if<sp/>the<sp/>path<sp/>is<sp/>executable.<sp/><sp/>If<sp/>no<sp/>callback<sp/>provided,<sp/>and<sp/>a</highlight></codeline>
<codeline><highlight class="normal">global<sp/>`Promise`<sp/>object<sp/>is<sp/>available,<sp/>then<sp/>a<sp/>Promise<sp/>will<sp/>be<sp/>returned.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Will<sp/>raise<sp/>whatever<sp/>errors<sp/>may<sp/>be<sp/>raised<sp/>by<sp/>`fs.stat`,<sp/>unless</highlight></codeline>
<codeline><highlight class="normal">`options.ignoreErrors`<sp/>is<sp/>set<sp/>to<sp/>true.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>`isexe.sync(path,<sp/>[options])`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Same<sp/>as<sp/>`isexe`<sp/>but<sp/>returns<sp/>the<sp/>value<sp/>and<sp/>throws<sp/>any<sp/>errors<sp/>raised.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Options</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>`ignoreErrors`<sp/>Treat<sp/>all<sp/>errors<sp/>as<sp/>&quot;no,<sp/>this<sp/>is<sp/>not<sp/>executable&quot;,<sp/>but</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>don&apos;t<sp/>raise<sp/>them.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`uid`<sp/>Number<sp/>to<sp/>use<sp/>as<sp/>the<sp/>user<sp/>id</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`gid`<sp/>Number<sp/>to<sp/>use<sp/>as<sp/>the<sp/>group<sp/>id</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`pathExt`<sp/>List<sp/>of<sp/>path<sp/>extensions<sp/>to<sp/>use<sp/>instead<sp/>of<sp/>`PATHEXT`</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>environment<sp/>variable<sp/>on<sp/>Windows.</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/isexe/README.md"/>
  </compounddef>
</doxygen>
