<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="database_8cpp" kind="file" language="C++">
    <compoundname>database.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="1">
        <label>database/database.cpp</label>
        <link refid="database_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>fstream</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_user" prot="public">User</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="database_8cpp_1a18474605462f2bb0d36435ffef606f4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_user" kindref="compound">User</ref> &gt;</type>
        <definition>std::vector&lt; User &gt; fetchUsers</definition>
        <argsstring>()</argsstring>
        <name>fetchUsers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="database/database.cpp" line="11" column="15" bodyfile="database/database.cpp" bodystart="11" bodyend="16"/>
        <referencedby refid="database_8cpp_1ad04c7969a5fd15a4482f2ade1209d6a0" compoundref="database_8cpp" startline="33" endline="35">fetch_users</referencedby>
      </memberdef>
      <memberdef kind="function" id="database_8cpp_1ad7c7ae6507ff7533b5ca319bc631d0a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void createUser</definition>
        <argsstring>(const User &amp;user)</argsstring>
        <name>createUser</name>
        <param>
          <type>const <ref refid="struct_user" kindref="compound">User</ref> &amp;</type>
          <declname>user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="database/database.cpp" line="18" column="6" bodyfile="database/database.cpp" bodystart="18" bodyend="21"/>
        <referencedby refid="database_8cpp_1a8f716b34a465bd6c60fae3d2b87ab12f" compoundref="database_8cpp" startline="37" endline="39">create_user</referencedby>
      </memberdef>
      <memberdef kind="function" id="database_8cpp_1a1ef5c94cdbded3cc9132de2f27a67037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void createDatabase</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>createDatabase</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="database/database.cpp" line="23" column="6" bodyfile="database/database.cpp" bodystart="23" bodyend="30"/>
        <referencedby refid="database_8cpp_1a9bf95c95221a6b2b886578620abefe60" compoundref="database_8cpp" startline="41" endline="43">create_database</referencedby>
      </memberdef>
      <memberdef kind="function" id="database_8cpp_1ad04c7969a5fd15a4482f2ade1209d6a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_user" kindref="compound">User</ref> &gt;</type>
        <definition>std::vector&lt; User &gt; fetch_users</definition>
        <argsstring>()</argsstring>
        <name>fetch_users</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="database/database.cpp" line="33" column="19" bodyfile="database/database.cpp" bodystart="33" bodyend="35"/>
        <references refid="database_8cpp_1a18474605462f2bb0d36435ffef606f4b" compoundref="database_8cpp" startline="11" endline="16">fetchUsers</references>
      </memberdef>
      <memberdef kind="function" id="database_8cpp_1a8f716b34a465bd6c60fae3d2b87ab12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_user</definition>
        <argsstring>(const User &amp;user)</argsstring>
        <name>create_user</name>
        <param>
          <type>const <ref refid="struct_user" kindref="compound">User</ref> &amp;</type>
          <declname>user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="database/database.cpp" line="37" column="10" bodyfile="database/database.cpp" bodystart="37" bodyend="39"/>
        <references refid="database_8cpp_1ad7c7ae6507ff7533b5ca319bc631d0a4" compoundref="database_8cpp" startline="18" endline="21">createUser</references>
      </memberdef>
      <memberdef kind="function" id="database_8cpp_1a9bf95c95221a6b2b886578620abefe60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_database</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>create_database</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="database/database.cpp" line="41" column="10" bodyfile="database/database.cpp" bodystart="41" bodyend="43"/>
        <references refid="database_8cpp_1a1ef5c94cdbded3cc9132de2f27a67037" compoundref="database_8cpp" startline="23" endline="30">createDatabase</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="struct_user" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_user" kindref="compound">User</ref><sp/>{</highlight></codeline>
<codeline lineno="7" refid="struct_user_1a085d8d69282b6298964eab8351584536" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct_user_1a085d8d69282b6298964eab8351584536" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="8" refid="struct_user_1aa5829689588d1f982e1a69b73bd68655" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_user_1aa5829689588d1f982e1a69b73bd68655" kindref="member">age</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal">};</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="database_8cpp_1a18474605462f2bb0d36435ffef606f4b" refkind="member"><highlight class="normal">std::<sp/>vector<sp/>&lt;<sp/>User<sp/>&gt;<sp/><ref refid="database_8cpp_1a18474605462f2bb0d36435ffef606f4b" kindref="member">fetchUsers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>users<sp/>from<sp/>database</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>std::<sp/>vector<sp/>&lt;<sp/>User<sp/>&gt;<sp/>users;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>users.push_back({<sp/></highlight><highlight class="stringliteral">&quot;John&quot;</highlight><highlight class="normal">,<sp/>30<sp/>});</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>users;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="database_8cpp_1ad7c7ae6507ff7533b5ca319bc631d0a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="database_8cpp_1ad7c7ae6507ff7533b5ca319bc631d0a4" kindref="member">createUser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_user" kindref="compound">User</ref>&amp;<sp/>user)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>user<sp/>in<sp/>database</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>std::<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>created<sp/>successfully&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::<sp/>endl;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="database_8cpp_1a1ef5c94cdbded3cc9132de2f27a67037" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="database_8cpp_1a1ef5c94cdbded3cc9132de2f27a67037" kindref="member">createDatabase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::<sp/>string&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>new<sp/>database<sp/>file<sp/>with<sp/>the<sp/>given<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>file(name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.db&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::<sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>database<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33" refid="database_8cpp_1ad04c7969a5fd15a4482f2ade1209d6a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::<sp/>vector<sp/>&lt;<sp/>User<sp/>&gt;<sp/><ref refid="database_8cpp_1ad04c7969a5fd15a4482f2ade1209d6a0" kindref="member">fetch_users</ref>()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="database_8cpp_1a18474605462f2bb0d36435ffef606f4b" kindref="member">fetchUsers</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="database_8cpp_1a8f716b34a465bd6c60fae3d2b87ab12f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="database_8cpp_1a8f716b34a465bd6c60fae3d2b87ab12f" kindref="member">create_user</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_user" kindref="compound">User</ref>&amp;<sp/>user)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8cpp_1ad7c7ae6507ff7533b5ca319bc631d0a4" kindref="member">createUser</ref>(user);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="database_8cpp_1a9bf95c95221a6b2b886578620abefe60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="database_8cpp_1a9bf95c95221a6b2b886578620abefe60" kindref="member">create_database</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::<sp/>string&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="database_8cpp_1a1ef5c94cdbded3cc9132de2f27a67037" kindref="member">createDatabase</ref>(name);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="database/database.cpp"/>
  </compounddef>
</doxygen>
