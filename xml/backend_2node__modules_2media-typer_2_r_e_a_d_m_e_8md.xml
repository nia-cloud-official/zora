<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2media-typer_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>media-typer</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Version][npm-image]][npm-url]</highlight></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Downloads][downloads-image]][downloads-url]</highlight></codeline>
<codeline><highlight class="normal">[![Node.js<sp/>Version][node-version-image]][node-version-url]</highlight></codeline>
<codeline><highlight class="normal">[![Build<sp/>Status][travis-image]][travis-url]</highlight></codeline>
<codeline><highlight class="normal">[![Test<sp/>Coverage][coveralls-image]][coveralls-url]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Simple<sp/>RFC<sp/>6838<sp/>media<sp/>type<sp/>parser</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Installation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">$<sp/>npm<sp/>install<sp/>media-typer</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>typer<sp/>=<sp/>require(&apos;media-typer&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>typer.parse(string)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>obj<sp/>=<sp/>typer.parse(&apos;image/svg+xml;<sp/>charset=utf-8&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Parse<sp/>a<sp/>media<sp/>type<sp/>string.<sp/>This<sp/>will<sp/>return<sp/>an<sp/>object<sp/>with<sp/>the<sp/>following</highlight></codeline>
<codeline><highlight class="normal">properties<sp/>(examples<sp/>are<sp/>shown<sp/>for<sp/>the<sp/>string<sp/>`&apos;image/svg+xml;<sp/>charset=utf-8&apos;`):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>`type`:<sp/>The<sp/>type<sp/>of<sp/>the<sp/>media<sp/>type<sp/>(always<sp/>lower<sp/>case).<sp/>Example:<sp/>`&apos;image&apos;`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>`subtype`:<sp/>The<sp/>subtype<sp/>of<sp/>the<sp/>media<sp/>type<sp/>(always<sp/>lower<sp/>case).<sp/>Example:<sp/>`&apos;svg&apos;`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>`suffix`:<sp/>The<sp/>suffix<sp/>of<sp/>the<sp/>media<sp/>type<sp/>(always<sp/>lower<sp/>case).<sp/>Example:<sp/>`&apos;xml&apos;`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>`parameters`:<sp/>An<sp/>object<sp/>of<sp/>the<sp/>parameters<sp/>in<sp/>the<sp/>media<sp/>type<sp/>(name<sp/>of<sp/>parameter<sp/>always<sp/>lower<sp/>case).<sp/>Example:<sp/>`{charset:<sp/>&apos;utf-8&apos;}`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>typer.parse(req)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>obj<sp/>=<sp/>typer.parse(req)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Parse<sp/>the<sp/>`content-type`<sp/>header<sp/>from<sp/>the<sp/>given<sp/>`req`.<sp/>Short-cut<sp/>for</highlight></codeline>
<codeline><highlight class="normal">`typer.parse(req.headers[&apos;content-type&apos;])`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>typer.parse(res)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>obj<sp/>=<sp/>typer.parse(res)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Parse<sp/>the<sp/>`content-type`<sp/>header<sp/>set<sp/>on<sp/>the<sp/>given<sp/>`res`.<sp/>Short-cut<sp/>for</highlight></codeline>
<codeline><highlight class="normal">`typer.parse(res.getHeader(&apos;content-type&apos;))`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>typer.format(obj)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>obj<sp/>=<sp/>typer.format({type:<sp/>&apos;image&apos;,<sp/>subtype:<sp/>&apos;svg&apos;,<sp/>suffix:<sp/>&apos;xml&apos;})</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Format<sp/>an<sp/>object<sp/>into<sp/>a<sp/>media<sp/>type<sp/>string.<sp/>This<sp/>will<sp/>return<sp/>a<sp/>string<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal">mime<sp/>type<sp/>for<sp/>the<sp/>given<sp/>object.<sp/>For<sp/>the<sp/>properties<sp/>of<sp/>the<sp/>object,<sp/>see<sp/>the</highlight></codeline>
<codeline><highlight class="normal">documentation<sp/>for<sp/>`typer.parse(string)`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[MIT](LICENSE)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[npm-image]:<sp/>https://img.shields.io/npm/v/media-typer.svg?style=flat</highlight></codeline>
<codeline><highlight class="normal">[npm-url]:<sp/>https://npmjs.org/package/media-typer</highlight></codeline>
<codeline><highlight class="normal">[node-version-image]:<sp/>https://img.shields.io/badge/node.js-%3E%3D_0.6-brightgreen.svg?style=flat</highlight></codeline>
<codeline><highlight class="normal">[node-version-url]:<sp/>http://nodejs.org/download/</highlight></codeline>
<codeline><highlight class="normal">[travis-image]:<sp/>https://img.shields.io/travis/jshttp/media-typer.svg?style=flat</highlight></codeline>
<codeline><highlight class="normal">[travis-url]:<sp/>https://travis-ci.org/jshttp/media-typer</highlight></codeline>
<codeline><highlight class="normal">[coveralls-image]:<sp/>https://img.shields.io/coveralls/jshttp/media-typer.svg?style=flat</highlight></codeline>
<codeline><highlight class="normal">[coveralls-url]:<sp/>https://coveralls.io/r/jshttp/media-typer</highlight></codeline>
<codeline><highlight class="normal">[downloads-image]:<sp/>https://img.shields.io/npm/dm/media-typer.svg?style=flat</highlight></codeline>
<codeline><highlight class="normal">[downloads-url]:<sp/>https://npmjs.org/package/media-typer</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/media-typer/README.md"/>
  </compounddef>
</doxygen>
