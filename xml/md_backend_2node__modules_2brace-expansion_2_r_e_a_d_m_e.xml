<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="md_backend_2node__modules_2brace-expansion_2_r_e_a_d_m_e" kind="page">
    <compoundname>md_backend_2node__modules_2brace-expansion_2_r_e_a_d_m_e</compoundname>
    <title>brace-expansion</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="md_backend_2node__modules_2brace-expansion_2_r_e_a_d_m_e_1autotoc_md361"/> <ulink url="https://www.gnu.org/software/bash/manual/html_node/Brace-Expansion.html">Brace expansion</ulink>, as known from sh/bash, in JavaScript.</para>
<para><ulink url="http://travis-ci.org/juliangruber/brace-expansion"><image type="html" name="https://secure.travis-ci.org/juliangruber/brace-expansion.svg" alt="build status" inline="yes"></image>
</ulink> <ulink url="https://www.npmjs.org/package/brace-expansion"><image type="html" name="https://img.shields.io/npm/dm/brace-expansion.svg" alt="downloads" inline="yes"></image>
</ulink> <ulink url="https://greenkeeper.io/"><image type="html" name="https://badges.greenkeeper.io/juliangruber/brace-expansion.svg" alt="Greenkeeper badge" inline="yes"></image>
</ulink></para>
<para><ulink url="https://ci.testling.com/juliangruber/brace-expansion"><image type="html" name="https://ci.testling.com/juliangruber/brace-expansion.png" alt="testling badge" inline="yes"></image>
</ulink></para>
<sect1 id="md_backend_2node__modules_2brace-expansion_2_r_e_a_d_m_e_1autotoc_md362">
<title>Example</title><para><programlisting filename=".js"><codeline><highlight class="normal">var<sp/>expand<sp/>=<sp/>require(&apos;brace-expansion&apos;);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">expand(&apos;file-{a,b,c}.jpg&apos;)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>=&gt;<sp/>[&apos;file-a.jpg&apos;,<sp/>&apos;file-b.jpg&apos;,<sp/>&apos;file-c.jpg&apos;]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">expand(&apos;-v{,,}&apos;)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>=&gt;<sp/>[&apos;-v&apos;,<sp/>&apos;-v&apos;,<sp/>&apos;-v&apos;]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">expand(&apos;file{0..2}.jpg&apos;)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>=&gt;<sp/>[&apos;file0.jpg&apos;,<sp/>&apos;file1.jpg&apos;,<sp/>&apos;file2.jpg&apos;]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">expand(&apos;file-{a..c}.jpg&apos;)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>=&gt;<sp/>[&apos;file-a.jpg&apos;,<sp/>&apos;file-b.jpg&apos;,<sp/>&apos;file-c.jpg&apos;]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">expand(&apos;file{2..0}.jpg&apos;)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>=&gt;<sp/>[&apos;file2.jpg&apos;,<sp/>&apos;file1.jpg&apos;,<sp/>&apos;file0.jpg&apos;]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">expand(&apos;file{0..4..2}.jpg&apos;)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>=&gt;<sp/>[&apos;file0.jpg&apos;,<sp/>&apos;file2.jpg&apos;,<sp/>&apos;file4.jpg&apos;]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">expand(&apos;file-{a..e..2}.jpg&apos;)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>=&gt;<sp/>[&apos;file-a.jpg&apos;,<sp/>&apos;file-c.jpg&apos;,<sp/>&apos;file-e.jpg&apos;]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">expand(&apos;file{00..10..5}.jpg&apos;)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>=&gt;<sp/>[&apos;file00.jpg&apos;,<sp/>&apos;file05.jpg&apos;,<sp/>&apos;file10.jpg&apos;]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">expand(&apos;{{A..C},{a..c}}&apos;)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>=&gt;<sp/>[&apos;A&apos;,<sp/>&apos;B&apos;,<sp/>&apos;C&apos;,<sp/>&apos;a&apos;,<sp/>&apos;b&apos;,<sp/>&apos;c&apos;]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">expand(&apos;ppp{,config,oe{,conf}}&apos;)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>=&gt;<sp/>[&apos;ppp&apos;,<sp/>&apos;pppconfig&apos;,<sp/>&apos;pppoe&apos;,<sp/>&apos;pppoeconf&apos;]</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_backend_2node__modules_2brace-expansion_2_r_e_a_d_m_e_1autotoc_md363">
<title>API</title><para><programlisting filename=".js"><codeline><highlight class="normal">var<sp/>expand<sp/>=<sp/>require(&apos;brace-expansion&apos;);</highlight></codeline>
</programlisting></para>
<sect2 id="md_backend_2node__modules_2brace-expansion_2_r_e_a_d_m_e_1autotoc_md364">
<title>var expanded = expand(str)</title><para>Return an array of all possible and valid expansions of <computeroutput>str</computeroutput>. If none are found, <computeroutput>[str]</computeroutput> is returned.</para>
<para>Valid expansions are:</para>
<para><programlisting filename=".js"><codeline><highlight class="normal">/^(.*,)+(.+)?$/</highlight></codeline>
<codeline><highlight class="normal">//<sp/>{a,b,...}</highlight></codeline>
</programlisting></para>
<para>A comma separated list of options, like <computeroutput>{a,b}</computeroutput> or <computeroutput>{a,{b,c}}</computeroutput> or <computeroutput>{,a,}</computeroutput>.</para>
<para><programlisting filename=".js"><codeline><highlight class="normal">/^-?\d+\.\.-?\d+(\.\.-?\d+)?$/</highlight></codeline>
<codeline><highlight class="normal">//<sp/>{x..y[..incr]}</highlight></codeline>
</programlisting></para>
<para>A numeric sequence from <computeroutput>x</computeroutput> to <computeroutput>y</computeroutput> inclusive, with optional increment. If <computeroutput>x</computeroutput> or <computeroutput>y</computeroutput> start with a leading <computeroutput>0</computeroutput>, all the numbers will be padded to have equal length. Negative numbers and backwards iteration work too.</para>
<para><programlisting filename=".js"><codeline><highlight class="normal">/^-?\d+\.\.-?\d+(\.\.-?\d+)?$/</highlight></codeline>
<codeline><highlight class="normal">//<sp/>{x..y[..incr]}</highlight></codeline>
</programlisting></para>
<para>An alphabetic sequence from <computeroutput>x</computeroutput> to <computeroutput>y</computeroutput> inclusive, with optional increment. <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> must be exactly one character, and if given, <computeroutput>incr</computeroutput> must be a number.</para>
<para>For compatibility reasons, the string <computeroutput>${</computeroutput> is not eligible for brace expansion.</para>
</sect2>
</sect1>
<sect1 id="md_backend_2node__modules_2brace-expansion_2_r_e_a_d_m_e_1autotoc_md365">
<title>Installation</title><para>With <ulink url="https://npmjs.org">npm</ulink> do:</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">npm<sp/>install<sp/>brace-expansion</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_backend_2node__modules_2brace-expansion_2_r_e_a_d_m_e_1autotoc_md366">
<title>Contributors</title><para><itemizedlist>
<listitem><para><ulink url="https://github.com/juliangruber">Julian Gruber</ulink></para>
</listitem><listitem><para><ulink url="https://github.com/isaacs">Isaac Z. Schlueter</ulink></para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="md_backend_2node__modules_2brace-expansion_2_r_e_a_d_m_e_1autotoc_md367">
<title>Sponsors</title><para>This module is proudly supported by my <ulink url="https://github.com/juliangruber/sponsors">Sponsors</ulink>!</para>
<para>Do you want to support modules like this to improve their quality, stability and weigh in on new features? Then please consider donating to my <ulink url="https://www.patreon.com/juliangruber">Patreon</ulink>. Not sure how much of my modules you&apos;re using? Try <ulink url="https://github.com/feross/thanks">feross/thanks</ulink>!</para>
</sect1>
<sect1 id="md_backend_2node__modules_2brace-expansion_2_r_e_a_d_m_e_1autotoc_md368">
<title>License</title><para>(MIT)</para>
<para>Copyright (c) 2013 Julian Gruber &lt;<ulink url="mailto:julian@juliangruber.com">julian@juliangruber.com</ulink>&gt;</para>
<para>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</para>
<para>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</para>
<para>THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. </para>
</sect1>
    </detaileddescription>
    <location file="backend/node_modules/brace-expansion/README.md"/>
  </compounddef>
</doxygen>
