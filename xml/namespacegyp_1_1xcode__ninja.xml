<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="namespacegyp_1_1xcode__ninja" kind="namespace" language="Python">
    <compoundname>gyp::xcode_ninja</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacegyp_1_1xcode__ninja_1a50d26b6057f1df48e64b9884213d61c2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.xcode_ninja._WriteWorkspace</definition>
        <argsstring>(main_gyp, sources_gyp, params)</argsstring>
        <name>_WriteWorkspace</name>
        <qualifiedname>gyp.xcode_ninja._WriteWorkspace</qualifiedname>
        <param>
          <type>main_gyp</type>
          <defname>main_gyp</defname>
        </param>
        <param>
          <type>sources_gyp</type>
          <defname>sources_gyp</defname>
        </param>
        <param>
          <type>params</type>
          <defname>params</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> Create a workspace to wrap main and sources gyp paths. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/xcode_ninja.py" line="22" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/xcode_ninja.py" bodystart="22" bodyend="57"/>
        <referencedby refid="namespacegyp_1_1xcode__ninja_1ab6307d8e6c19f93e77b08334eb41ca41" compoundref="xcode__ninja_8py" startline="166" endline="303">gyp.xcode_ninja.CreateWrapper</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacegyp_1_1xcode__ninja_1ab1430fbd4d4ee7b4f1216f82bdb1b8ea" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.xcode_ninja._TargetFromSpec</definition>
        <argsstring>(old_spec, params)</argsstring>
        <name>_TargetFromSpec</name>
        <qualifiedname>gyp.xcode_ninja._TargetFromSpec</qualifiedname>
        <param>
          <type>old_spec</type>
          <defname>old_spec</defname>
        </param>
        <param>
          <type>params</type>
          <defname>params</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim> Create fake target for xcode-ninja wrapper. </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/xcode_ninja.py" line="58" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/xcode_ninja.py" bodystart="58" bodyend="136"/>
        <references refid="namespacegyp_1_1generator_1_1ninja_1a7c1f50d1b8493a9c6b2f7ce07ef4bb2b" compoundref="ninja_8py" startline="2047" endline="2059">gyp.generator.ninja.ComputeOutputDir</references>
        <referencedby refid="namespacegyp_1_1xcode__ninja_1ab6307d8e6c19f93e77b08334eb41ca41" compoundref="xcode__ninja_8py" startline="166" endline="303">gyp.xcode_ninja.CreateWrapper</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacegyp_1_1xcode__ninja_1a68b5ab659fcb19a3231cf41e7bd02cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.xcode_ninja.IsValidTargetForWrapper</definition>
        <argsstring>(target_extras, executable_target_pattern, spec)</argsstring>
        <name>IsValidTargetForWrapper</name>
        <qualifiedname>gyp.xcode_ninja.IsValidTargetForWrapper</qualifiedname>
        <param>
          <type>target_extras</type>
          <defname>target_extras</defname>
        </param>
        <param>
          <type>executable_target_pattern</type>
          <defname>executable_target_pattern</defname>
        </param>
        <param>
          <type>spec</type>
          <defname>spec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Limit targets for Xcode wrapper.

Xcode sometimes performs poorly with too many targets, so only include
proper executable targets, with filters to customize.
Arguments:
target_extras: Regular expression to always add, matching any target.
executable_target_pattern: Regular expression limiting executable targets.
spec: Specifications for target.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/xcode_ninja.py" line="137" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/xcode_ninja.py" bodystart="137" bodyend="165"/>
        <referencedby refid="namespacegyp_1_1xcode__ninja_1ab6307d8e6c19f93e77b08334eb41ca41" compoundref="xcode__ninja_8py" startline="166" endline="303">gyp.xcode_ninja.CreateWrapper</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacegyp_1_1xcode__ninja_1ab6307d8e6c19f93e77b08334eb41ca41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.xcode_ninja.CreateWrapper</definition>
        <argsstring>(target_list, target_dicts, data, params)</argsstring>
        <name>CreateWrapper</name>
        <qualifiedname>gyp.xcode_ninja.CreateWrapper</qualifiedname>
        <param>
          <type>target_list</type>
          <defname>target_list</defname>
        </param>
        <param>
          <type>target_dicts</type>
          <defname>target_dicts</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <param>
          <type>params</type>
          <defname>params</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Initialize targets for the ninja wrapper.

This sets up the necessary variables in the targets to generate Xcode projects
that use ninja as an external builder.
Arguments:
target_list: List of target pairs: &apos;base/base.gyp:base&apos;.
target_dicts: Dict of target properties keyed on target pair.
data: Dict of flattened build files keyed on gyp path.
params: Dict of global options for gyp.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/xcode_ninja.py" line="166" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/xcode_ninja.py" bodystart="166" bodyend="303"/>
        <references refid="namespacegyp_1_1xcode__ninja_1ab1430fbd4d4ee7b4f1216f82bdb1b8ea" compoundref="xcode__ninja_8py" startline="58" endline="136">gyp.xcode_ninja._TargetFromSpec</references>
        <references refid="namespacegyp_1_1xcode__ninja_1a50d26b6057f1df48e64b9884213d61c2" compoundref="xcode__ninja_8py" startline="22" endline="57">gyp.xcode_ninja._WriteWorkspace</references>
        <references refid="namespacegyp_1_1xcode__ninja_1a68b5ab659fcb19a3231cf41e7bd02cb2" compoundref="xcode__ninja_8py" startline="137" endline="165">gyp.xcode_ninja.IsValidTargetForWrapper</references>
        <referencedby refid="namespacegyp_1_1generator_1_1xcode_1aa29f4c36f8b25d5af931e3bd81b1c3ff" compoundref="xcode_8py" startline="641" endline="1395">gyp.generator.xcode.GenerateOutput</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Xcode-ninja wrapper project file generator.

This updates the data structures passed to the Xcode gyp generator to build
with ninja instead. The Xcode project itself is transformed into a list of
executable targets, each with a build step to build with ninja, and a target
with every source and resource file.  This appears to sidestep some of the
major performance headaches experienced using complex projects and large number
of targets within Xcode.
</verbatim> </para>
    </detaileddescription>
    <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/xcode_ninja.py" line="1" column="1"/>
  </compounddef>
</doxygen>
