<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2encodeurl_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>encodeurl</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Version][npm-image]][npm-url]</highlight></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Downloads][downloads-image]][downloads-url]</highlight></codeline>
<codeline><highlight class="normal">[![Node.js<sp/>Version][node-version-image]][node-version-url]</highlight></codeline>
<codeline><highlight class="normal">[![Build<sp/>Status][travis-image]][travis-url]</highlight></codeline>
<codeline><highlight class="normal">[![Test<sp/>Coverage][coveralls-image]][coveralls-url]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Encode<sp/>a<sp/>URL<sp/>to<sp/>a<sp/>percent-encoded<sp/>form,<sp/>excluding<sp/>already-encoded<sp/>sequences</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Installation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>is<sp/>a<sp/>[Node.js](https://nodejs.org/en/)<sp/>module<sp/>available<sp/>through<sp/>the</highlight></codeline>
<codeline><highlight class="normal">[npm<sp/>registry](https://www.npmjs.com/).<sp/>Installation<sp/>is<sp/>done<sp/>using<sp/>the</highlight></codeline>
<codeline><highlight class="normal">[`npm<sp/>install`<sp/>command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">$<sp/>npm<sp/>install<sp/>encodeurl</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>encodeUrl<sp/>=<sp/>require(&apos;encodeurl&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>encodeUrl(url)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Encode<sp/>a<sp/>URL<sp/>to<sp/>a<sp/>percent-encoded<sp/>form,<sp/>excluding<sp/>already-encoded<sp/>sequences.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>function<sp/>will<sp/>take<sp/>an<sp/>already-encoded<sp/>URL<sp/>and<sp/>encode<sp/>all<sp/>the<sp/>non-URL</highlight></codeline>
<codeline><highlight class="normal">code<sp/>points<sp/>(as<sp/>UTF-8<sp/>byte<sp/>sequences).<sp/>This<sp/>function<sp/>will<sp/>not<sp/>encode<sp/>the</highlight></codeline>
<codeline><highlight class="normal">&quot;%&quot;<sp/>character<sp/>unless<sp/>it<sp/>is<sp/>not<sp/>part<sp/>of<sp/>a<sp/>valid<sp/>sequence<sp/>(`%20`<sp/>will<sp/>be</highlight></codeline>
<codeline><highlight class="normal">left<sp/>as-is,<sp/>but<sp/>`%foo`<sp/>will<sp/>be<sp/>encoded<sp/>as<sp/>`%25foo`).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>encode<sp/>is<sp/>meant<sp/>to<sp/>be<sp/>&quot;safe&quot;<sp/>and<sp/>does<sp/>not<sp/>throw<sp/>errors.<sp/>It<sp/>will<sp/>try<sp/>as</highlight></codeline>
<codeline><highlight class="normal">hard<sp/>as<sp/>it<sp/>can<sp/>to<sp/>properly<sp/>encode<sp/>the<sp/>given<sp/>URL,<sp/>including<sp/>replacing<sp/>any<sp/>raw,</highlight></codeline>
<codeline><highlight class="normal">unpaired<sp/>surrogate<sp/>pairs<sp/>with<sp/>the<sp/>Unicode<sp/>replacement<sp/>character<sp/>prior<sp/>to</highlight></codeline>
<codeline><highlight class="normal">encoding.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>function<sp/>is<sp/>_similar_<sp/>to<sp/>the<sp/>intrinsic<sp/>function<sp/>`encodeURI`,<sp/>except<sp/>it</highlight></codeline>
<codeline><highlight class="normal">will<sp/>not<sp/>encode<sp/>the<sp/>`%`<sp/>character<sp/>if<sp/>that<sp/>is<sp/>part<sp/>of<sp/>a<sp/>valid<sp/>sequence,<sp/>will</highlight></codeline>
<codeline><highlight class="normal">not<sp/>encode<sp/>`[`<sp/>and<sp/>`]`<sp/>(for<sp/>IPv6<sp/>hostnames)<sp/>and<sp/>will<sp/>replace<sp/>raw,<sp/>unpaired</highlight></codeline>
<codeline><highlight class="normal">surrogate<sp/>pairs<sp/>with<sp/>the<sp/>Unicode<sp/>replacement<sp/>character<sp/>(instead<sp/>of<sp/>throwing).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Examples</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Encode<sp/>a<sp/>URL<sp/>containing<sp/>user-controled<sp/>data</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>encodeUrl<sp/>=<sp/>require(&apos;encodeurl&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>escapeHtml<sp/>=<sp/>require(&apos;escape-html&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">http.createServer(function<sp/>onRequest<sp/>(req,<sp/>res)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>get<sp/>encoded<sp/>form<sp/>of<sp/>inbound<sp/>url</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>url<sp/>=<sp/>encodeUrl(req.url)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>create<sp/>html<sp/>message</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>body<sp/>=<sp/>&apos;&lt;p&gt;Location<sp/>&apos;<sp/>+<sp/>escapeHtml(url)<sp/>+<sp/>&apos;<sp/>not<sp/>found&lt;/p&gt;&apos;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>send<sp/>a<sp/>404</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.statusCode<sp/>=<sp/>404</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.setHeader(&apos;Content-Type&apos;,<sp/>&apos;text/html;<sp/>charset=UTF-8&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.setHeader(&apos;Content-Length&apos;,<sp/>String(Buffer.byteLength(body,<sp/>&apos;utf-8&apos;)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.end(body,<sp/>&apos;utf-8&apos;)</highlight></codeline>
<codeline><highlight class="normal">})</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Encode<sp/>a<sp/>URL<sp/>for<sp/>use<sp/>in<sp/>a<sp/>header<sp/>field</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>encodeUrl<sp/>=<sp/>require(&apos;encodeurl&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>escapeHtml<sp/>=<sp/>require(&apos;escape-html&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>url<sp/>=<sp/>require(&apos;url&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">http.createServer(function<sp/>onRequest<sp/>(req,<sp/>res)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>parse<sp/>inbound<sp/>url</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>href<sp/>=<sp/>url.parse(req)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>set<sp/>new<sp/>host<sp/>for<sp/>redirect</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>href.host<sp/>=<sp/>&apos;localhost&apos;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>href.protocol<sp/>=<sp/>&apos;https:&apos;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>href.slashes<sp/>=<sp/>true</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>create<sp/>location<sp/>header</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>location<sp/>=<sp/>encodeUrl(url.format(href))</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>create<sp/>html<sp/>message</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>body<sp/>=<sp/>&apos;&lt;p&gt;Redirecting<sp/>to<sp/>new<sp/>site:<sp/>&apos;<sp/>+<sp/>escapeHtml(location)<sp/>+<sp/>&apos;&lt;/p&gt;&apos;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>send<sp/>a<sp/>301</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.statusCode<sp/>=<sp/>301</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.setHeader(&apos;Content-Type&apos;,<sp/>&apos;text/html;<sp/>charset=UTF-8&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.setHeader(&apos;Content-Length&apos;,<sp/>String(Buffer.byteLength(body,<sp/>&apos;utf-8&apos;)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.setHeader(&apos;Location&apos;,<sp/>location)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.end(body,<sp/>&apos;utf-8&apos;)</highlight></codeline>
<codeline><highlight class="normal">})</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Testing</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">$<sp/>npm<sp/>test</highlight></codeline>
<codeline><highlight class="normal">$<sp/>npm<sp/>run<sp/>lint</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>References</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>[RFC<sp/>3986:<sp/>Uniform<sp/>Resource<sp/>Identifier<sp/>(URI):<sp/>Generic<sp/>Syntax][rfc-3986]</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[WHATWG<sp/>URL<sp/>Living<sp/>Standard][whatwg-url]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[rfc-3986]:<sp/>https://tools.ietf.org/html/rfc3986</highlight></codeline>
<codeline><highlight class="normal">[whatwg-url]:<sp/>https://url.spec.whatwg.org/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[MIT](LICENSE)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[npm-image]:<sp/>https://img.shields.io/npm/v/encodeurl.svg</highlight></codeline>
<codeline><highlight class="normal">[npm-url]:<sp/>https://npmjs.org/package/encodeurl</highlight></codeline>
<codeline><highlight class="normal">[node-version-image]:<sp/>https://img.shields.io/node/v/encodeurl.svg</highlight></codeline>
<codeline><highlight class="normal">[node-version-url]:<sp/>https://nodejs.org/en/download</highlight></codeline>
<codeline><highlight class="normal">[travis-image]:<sp/>https://img.shields.io/travis/pillarjs/encodeurl.svg</highlight></codeline>
<codeline><highlight class="normal">[travis-url]:<sp/>https://travis-ci.org/pillarjs/encodeurl</highlight></codeline>
<codeline><highlight class="normal">[coveralls-image]:<sp/>https://img.shields.io/coveralls/pillarjs/encodeurl.svg</highlight></codeline>
<codeline><highlight class="normal">[coveralls-url]:<sp/>https://coveralls.io/r/pillarjs/encodeurl?branch=master</highlight></codeline>
<codeline><highlight class="normal">[downloads-image]:<sp/>https://img.shields.io/npm/dm/encodeurl.svg</highlight></codeline>
<codeline><highlight class="normal">[downloads-url]:<sp/>https://npmjs.org/package/encodeurl</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/encodeurl/README.md"/>
  </compounddef>
</doxygen>
