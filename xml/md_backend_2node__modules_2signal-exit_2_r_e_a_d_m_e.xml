<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="md_backend_2node__modules_2signal-exit_2_r_e_a_d_m_e" kind="page">
    <compoundname>md_backend_2node__modules_2signal-exit_2_r_e_a_d_m_e</compoundname>
    <title>signal-exit</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="md_backend_2node__modules_2signal-exit_2_r_e_a_d_m_e_1autotoc_md3296"/> <ulink url="https://travis-ci.org/tapjs/signal-exit"><image type="html" name="https://travis-ci.org/tapjs/signal-exit.png" alt="Build Status" inline="yes"></image>
</ulink> <ulink url="https://coveralls.io/r/tapjs/signal-exit?branch=master"><image type="html" name="https://coveralls.io/repos/tapjs/signal-exit/badge.svg?branch=master" alt="Coverage" inline="yes"></image>
</ulink> <ulink url="https://www.npmjs.com/package/signal-exit"><image type="html" name="https://img.shields.io/npm/v/signal-exit.svg" alt="NPM version" inline="yes"></image>
</ulink> <ulink url="https://github.com/conventional-changelog/standard-version"><image type="html" name="https://img.shields.io/badge/release-standard%20version-brightgreen.svg" alt="Standard Version" inline="yes"></image>
</ulink></para>
<para>When you want to fire an event no matter how a process exits:</para>
<para><itemizedlist>
<listitem><para>reaching the end of execution.</para>
</listitem><listitem><para>explicitly having <computeroutput>process.exit(code)</computeroutput> called.</para>
</listitem><listitem><para>having <computeroutput>process.kill(pid, sig)</computeroutput> called.</para>
</listitem><listitem><para>receiving a fatal signal from outside the process</para>
</listitem></itemizedlist>
</para>
<para>Use <computeroutput>signal-exit</computeroutput>.</para>
<para><programlisting filename=".js"><codeline><highlight class="normal">var<sp/>onExit<sp/>=<sp/>require(&apos;signal-exit&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">onExit(function<sp/>(code,<sp/>signal)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>console.log(&apos;process<sp/>exited!&apos;)</highlight></codeline>
<codeline><highlight class="normal">})</highlight></codeline>
</programlisting></para>
<sect1 id="md_backend_2node__modules_2signal-exit_2_r_e_a_d_m_e_1autotoc_md3297">
<title>API</title><para><computeroutput>var remove = onExit(function (code, signal) {}, options)</computeroutput></para>
<para>The return value of the function is a function that will remove the handler.</para>
<para>Note that the function <emphasis>only</emphasis> fires for signals if the signal would cause the process to exit. That is, there are no other listeners, and it is a fatal signal.</para>
</sect1>
<sect1 id="md_backend_2node__modules_2signal-exit_2_r_e_a_d_m_e_1autotoc_md3298">
<title>Options</title><para><itemizedlist>
<listitem><para><computeroutput>alwaysLast</computeroutput>: Run this handler after any other signal or exit handlers. This causes <computeroutput>process.emit</computeroutput> to be monkeypatched. </para>
</listitem></itemizedlist>
</para>
</sect1>
    </detaileddescription>
    <location file="backend/node_modules/signal-exit/README.md"/>
  </compounddef>
</doxygen>
