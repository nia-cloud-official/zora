<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="mkdirp_2_r_e_a_d_m_e_8markdown" kind="file" language="Markdown">
    <compoundname>readme.markdown</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>mkdirp</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Like<sp/>`mkdir<sp/>-p`,<sp/>but<sp/>in<sp/>Node.js!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Now<sp/>with<sp/>a<sp/>modern<sp/>API<sp/>and<sp/>no\*<sp/>bugs!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&lt;small&gt;\*<sp/>may<sp/>contain<sp/>some<sp/>bugs&lt;/small&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>example</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>pow.js</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">const<sp/>mkdirp<sp/>=<sp/>require(&apos;mkdirp&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>return<sp/>value<sp/>is<sp/>a<sp/>Promise<sp/>resolving<sp/>to<sp/>the<sp/>first<sp/>directory<sp/>created</highlight></codeline>
<codeline><highlight class="normal">mkdirp(&apos;/tmp/foo/bar/baz&apos;).then(made<sp/>=&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>console.log(`made<sp/>directories,<sp/>starting<sp/>with<sp/>${made}`))</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Output<sp/>(where<sp/>`/tmp/foo`<sp/>already<sp/>exists)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">made<sp/>directories,<sp/>starting<sp/>with<sp/>/tmp/foo/bar</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Or,<sp/>if<sp/>you<sp/>don&apos;t<sp/>have<sp/>time<sp/>to<sp/>wait<sp/>around<sp/>for<sp/>promises:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">const<sp/>mkdirp<sp/>=<sp/>require(&apos;mkdirp&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>return<sp/>value<sp/>is<sp/>the<sp/>first<sp/>directory<sp/>created</highlight></codeline>
<codeline><highlight class="normal">const<sp/>made<sp/>=<sp/>mkdirp.sync(&apos;/tmp/foo/bar/baz&apos;)</highlight></codeline>
<codeline><highlight class="normal">console.log(`made<sp/>directories,<sp/>starting<sp/>with<sp/>${made}`)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">And<sp/>now<sp/>/tmp/foo/bar/baz<sp/>exists,<sp/>huzzah!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>methods</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">const<sp/>mkdirp<sp/>=<sp/>require(&apos;mkdirp&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>mkdirp(dir,<sp/>[opts])<sp/>-&gt;<sp/>Promise&lt;String<sp/>|<sp/>undefined&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>a<sp/>new<sp/>directory<sp/>and<sp/>any<sp/>necessary<sp/>subdirectories<sp/>at<sp/>`dir`<sp/>with<sp/>octal</highlight></codeline>
<codeline><highlight class="normal">permission<sp/>string<sp/>`opts.mode`.<sp/>If<sp/>`opts`<sp/>is<sp/>a<sp/>string<sp/>or<sp/>number,<sp/>it<sp/>will<sp/>be</highlight></codeline>
<codeline><highlight class="normal">treated<sp/>as<sp/>the<sp/>`opts.mode`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>`opts.mode`<sp/>isn&apos;t<sp/>specified,<sp/>it<sp/>defaults<sp/>to<sp/>`0o777<sp/>&amp;</highlight></codeline>
<codeline><highlight class="normal">(~process.umask())`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Promise<sp/>resolves<sp/>to<sp/>first<sp/>directory<sp/>`made`<sp/>that<sp/>had<sp/>to<sp/>be<sp/>created,<sp/>or</highlight></codeline>
<codeline><highlight class="normal">`undefined`<sp/>if<sp/>everything<sp/>already<sp/>exists.<sp/><sp/>Promise<sp/>rejects<sp/>if<sp/>any<sp/>errors</highlight></codeline>
<codeline><highlight class="normal">are<sp/>encountered.<sp/><sp/>Note<sp/>that,<sp/>in<sp/>the<sp/>case<sp/>of<sp/>promise<sp/>rejection,<sp/>some</highlight></codeline>
<codeline><highlight class="normal">directories<sp/>_may_<sp/>have<sp/>been<sp/>created,<sp/>as<sp/>recursive<sp/>directory<sp/>creation<sp/>is<sp/>not</highlight></codeline>
<codeline><highlight class="normal">an<sp/>atomic<sp/>operation.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>optionally<sp/>pass<sp/>in<sp/>an<sp/>alternate<sp/>`fs`<sp/>implementation<sp/>by<sp/>passing<sp/>in</highlight></codeline>
<codeline><highlight class="normal">`opts.fs`.<sp/>Your<sp/>implementation<sp/>should<sp/>have<sp/>`opts.fs.mkdir(path,<sp/>opts,<sp/>cb)`</highlight></codeline>
<codeline><highlight class="normal">and<sp/>`opts.fs.stat(path,<sp/>cb)`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>also<sp/>override<sp/>just<sp/>one<sp/>or<sp/>the<sp/>other<sp/>of<sp/>`mkdir`<sp/>and<sp/>`stat`<sp/>by</highlight></codeline>
<codeline><highlight class="normal">passing<sp/>in<sp/>`opts.stat`<sp/>or<sp/>`opts.mkdir`,<sp/>or<sp/>providing<sp/>an<sp/>`fs`<sp/>option<sp/>that</highlight></codeline>
<codeline><highlight class="normal">only<sp/>overrides<sp/>one<sp/>of<sp/>these.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>mkdirp.sync(dir,<sp/>opts)<sp/>-&gt;<sp/>String|null</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Synchronously<sp/>create<sp/>a<sp/>new<sp/>directory<sp/>and<sp/>any<sp/>necessary<sp/>subdirectories<sp/>at</highlight></codeline>
<codeline><highlight class="normal">`dir`<sp/>with<sp/>octal<sp/>permission<sp/>string<sp/>`opts.mode`.<sp/>If<sp/>`opts`<sp/>is<sp/>a<sp/>string<sp/>or</highlight></codeline>
<codeline><highlight class="normal">number,<sp/>it<sp/>will<sp/>be<sp/>treated<sp/>as<sp/>the<sp/>`opts.mode`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>`opts.mode`<sp/>isn&apos;t<sp/>specified,<sp/>it<sp/>defaults<sp/>to<sp/>`0o777<sp/>&amp;</highlight></codeline>
<codeline><highlight class="normal">(~process.umask())`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Returns<sp/>the<sp/>first<sp/>directory<sp/>that<sp/>had<sp/>to<sp/>be<sp/>created,<sp/>or<sp/>undefined<sp/>if</highlight></codeline>
<codeline><highlight class="normal">everything<sp/>already<sp/>exists.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>optionally<sp/>pass<sp/>in<sp/>an<sp/>alternate<sp/>`fs`<sp/>implementation<sp/>by<sp/>passing<sp/>in</highlight></codeline>
<codeline><highlight class="normal">`opts.fs`.<sp/>Your<sp/>implementation<sp/>should<sp/>have<sp/>`opts.fs.mkdirSync(path,<sp/>mode)`</highlight></codeline>
<codeline><highlight class="normal">and<sp/>`opts.fs.statSync(path)`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>also<sp/>override<sp/>just<sp/>one<sp/>or<sp/>the<sp/>other<sp/>of<sp/>`mkdirSync`<sp/>and<sp/>`statSync`</highlight></codeline>
<codeline><highlight class="normal">by<sp/>passing<sp/>in<sp/>`opts.statSync`<sp/>or<sp/>`opts.mkdirSync`,<sp/>or<sp/>providing<sp/>an<sp/>`fs`</highlight></codeline>
<codeline><highlight class="normal">option<sp/>that<sp/>only<sp/>overrides<sp/>one<sp/>of<sp/>these.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>mkdirp.manual,<sp/>mkdirp.manualSync</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Use<sp/>the<sp/>manual<sp/>implementation<sp/>(not<sp/>the<sp/>native<sp/>one).<sp/><sp/>This<sp/>is<sp/>the<sp/>default</highlight></codeline>
<codeline><highlight class="normal">when<sp/>the<sp/>native<sp/>implementation<sp/>is<sp/>not<sp/>available<sp/>or<sp/>the<sp/>stat/mkdir</highlight></codeline>
<codeline><highlight class="normal">implementation<sp/>is<sp/>overridden.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>mkdirp.native,<sp/>mkdirp.nativeSync</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Use<sp/>the<sp/>native<sp/>implementation<sp/>(not<sp/>the<sp/>manual<sp/>one).<sp/><sp/>This<sp/>is<sp/>the<sp/>default</highlight></codeline>
<codeline><highlight class="normal">when<sp/>the<sp/>native<sp/>implementation<sp/>is<sp/>available<sp/>and<sp/>stat/mkdir<sp/>are<sp/>not</highlight></codeline>
<codeline><highlight class="normal">overridden.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>implementation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">On<sp/>Node.js<sp/>v10.12.0<sp/>and<sp/>above,<sp/>use<sp/>the<sp/>native<sp/>`fs.mkdir(p,</highlight></codeline>
<codeline><highlight class="normal">{recursive:true})`<sp/>option,<sp/>unless<sp/>`fs.mkdir`/`fs.mkdirSync`<sp/>has<sp/>been</highlight></codeline>
<codeline><highlight class="normal">overridden<sp/>by<sp/>an<sp/>option.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>native<sp/>implementation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>If<sp/>the<sp/>path<sp/>is<sp/>a<sp/>root<sp/>directory,<sp/>then<sp/>pass<sp/>it<sp/>to<sp/>the<sp/>underlying</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>implementation<sp/>and<sp/>return<sp/>the<sp/>result/error.<sp/><sp/>(In<sp/>this<sp/>case,<sp/>it&apos;ll<sp/>either</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>succeed<sp/>or<sp/>fail,<sp/>but<sp/>we<sp/>aren&apos;t<sp/>actually<sp/>creating<sp/>any<sp/>dirs.)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Walk<sp/>up<sp/>the<sp/>path<sp/>statting<sp/>each<sp/>directory,<sp/>to<sp/>find<sp/>the<sp/>first<sp/>path<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>will<sp/>be<sp/>created,<sp/>`made`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Call<sp/>`fs.mkdir(path,<sp/>{<sp/>recursive:<sp/>true<sp/>})`<sp/>(or<sp/>`fs.mkdirSync`)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>If<sp/>error,<sp/>raise<sp/>it<sp/>to<sp/>the<sp/>caller.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Return<sp/>`made`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>manual<sp/>implementation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>Call<sp/>underlying<sp/>`fs.mkdir`<sp/>implementation,<sp/>with<sp/>`recursive:<sp/>false`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>If<sp/>error:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>If<sp/>path<sp/>is<sp/>a<sp/>root<sp/>directory,<sp/>raise<sp/>to<sp/>the<sp/>caller<sp/>and<sp/>do<sp/>not<sp/>handle<sp/>it</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>If<sp/>ENOENT,<sp/>mkdirp<sp/>parent<sp/>dir,<sp/>store<sp/>result<sp/>as<sp/>`made`</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>stat(path)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>If<sp/>error,<sp/>raise<sp/>original<sp/>`mkdir`<sp/>error</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>If<sp/>directory,<sp/>return<sp/>`made`</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>Else,<sp/>raise<sp/>original<sp/>`mkdir`<sp/>error</highlight></codeline>
<codeline><highlight class="normal">-<sp/>else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>return<sp/>`undefined`<sp/>if<sp/>a<sp/>root<sp/>dir,<sp/>or<sp/>`made`<sp/>if<sp/>set,<sp/>or<sp/>`path`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>windows<sp/>vs<sp/>unix<sp/>caveat</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">On<sp/>Windows<sp/>file<sp/>systems,<sp/>attempts<sp/>to<sp/>create<sp/>a<sp/>root<sp/>directory<sp/>(ie,<sp/>a<sp/>drive</highlight></codeline>
<codeline><highlight class="normal">letter<sp/>or<sp/>root<sp/>UNC<sp/>path)<sp/>will<sp/>fail.<sp/><sp/>If<sp/>the<sp/>root<sp/>directory<sp/>exists,<sp/>then<sp/>it</highlight></codeline>
<codeline><highlight class="normal">will<sp/>fail<sp/>with<sp/>`EPERM`.<sp/><sp/>If<sp/>the<sp/>root<sp/>directory<sp/>does<sp/>not<sp/>exist,<sp/>then<sp/>it<sp/>will</highlight></codeline>
<codeline><highlight class="normal">fail<sp/>with<sp/>`ENOENT`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">On<sp/>posix<sp/>file<sp/>systems,<sp/>attempts<sp/>to<sp/>create<sp/>a<sp/>root<sp/>directory<sp/>(in<sp/>recursive</highlight></codeline>
<codeline><highlight class="normal">mode)<sp/>will<sp/>succeed<sp/>silently,<sp/>as<sp/>it<sp/>is<sp/>treated<sp/>like<sp/>just<sp/>another<sp/>directory</highlight></codeline>
<codeline><highlight class="normal">that<sp/>already<sp/>exists.<sp/><sp/>(In<sp/>non-recursive<sp/>mode,<sp/>of<sp/>course,<sp/>it<sp/>fails<sp/>with</highlight></codeline>
<codeline><highlight class="normal">`EEXIST`.)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>order<sp/>to<sp/>preserve<sp/>this<sp/>system-specific<sp/>behavior<sp/>(and<sp/>because<sp/>it&apos;s<sp/>not<sp/>as</highlight></codeline>
<codeline><highlight class="normal">if<sp/>we<sp/>can<sp/>create<sp/>the<sp/>parent<sp/>of<sp/>a<sp/>root<sp/>directory<sp/>anyway),<sp/>attempts<sp/>to<sp/>create</highlight></codeline>
<codeline><highlight class="normal">a<sp/>root<sp/>directory<sp/>are<sp/>passed<sp/>directly<sp/>to<sp/>the<sp/>`fs`<sp/>implementation,<sp/>and<sp/>any</highlight></codeline>
<codeline><highlight class="normal">errors<sp/>encountered<sp/>are<sp/>not<sp/>handled.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>native<sp/>error<sp/>caveat</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>native<sp/>implementation<sp/>(as<sp/>of<sp/>at<sp/>least<sp/>Node.js<sp/>v13.4.0)<sp/>does<sp/>not<sp/>provide</highlight></codeline>
<codeline><highlight class="normal">appropriate<sp/>errors<sp/>in<sp/>some<sp/>cases<sp/>(see</highlight></codeline>
<codeline><highlight class="normal">[nodejs/node#31481](https://github.com/nodejs/node/issues/31481)<sp/>and</highlight></codeline>
<codeline><highlight class="normal">[nodejs/node#28015](https://github.com/nodejs/node/issues/28015)).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>order<sp/>to<sp/>work<sp/>around<sp/>this<sp/>issue,<sp/>the<sp/>native<sp/>implementation<sp/>will<sp/>fall</highlight></codeline>
<codeline><highlight class="normal">back<sp/>to<sp/>the<sp/>manual<sp/>implementation<sp/>if<sp/>an<sp/>`ENOENT`<sp/>error<sp/>is<sp/>encountered.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>choosing<sp/>a<sp/>recursive<sp/>mkdir<sp/>implementation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">There<sp/>are<sp/>a<sp/>few<sp/>to<sp/>choose<sp/>from!<sp/><sp/>Use<sp/>the<sp/>one<sp/>that<sp/>suits<sp/>your<sp/>needs<sp/>best<sp/>:D</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>use<sp/>`fs.mkdir(path,<sp/>{recursive:<sp/>true},<sp/>cb)`<sp/>if:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>wish<sp/>to<sp/>optimize<sp/>performance<sp/>even<sp/>at<sp/>the<sp/>expense<sp/>of<sp/>other<sp/>factors.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>don&apos;t<sp/>need<sp/>to<sp/>know<sp/>the<sp/>first<sp/>dir<sp/>created.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>are<sp/>ok<sp/>with<sp/>getting<sp/>`ENOENT`<sp/>as<sp/>the<sp/>error<sp/>when<sp/>some<sp/>other<sp/>problem<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>the<sp/>actual<sp/>cause.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>can<sp/>limit<sp/>your<sp/>platforms<sp/>to<sp/>Node.js<sp/>v10.12<sp/>and<sp/>above.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You&apos;re<sp/>ok<sp/>with<sp/>using<sp/>callbacks<sp/>instead<sp/>of<sp/>promises.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>don&apos;t<sp/>need/want<sp/>a<sp/>CLI.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>don&apos;t<sp/>need<sp/>to<sp/>override<sp/>the<sp/>`fs`<sp/>methods<sp/>in<sp/>use.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>use<sp/>this<sp/>module<sp/>(mkdirp<sp/>1.x)<sp/>if:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>need<sp/>to<sp/>know<sp/>the<sp/>first<sp/>directory<sp/>that<sp/>was<sp/>created.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>wish<sp/>to<sp/>use<sp/>the<sp/>native<sp/>implementation<sp/>if<sp/>available,<sp/>but<sp/>fall<sp/>back</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>when<sp/>it&apos;s<sp/>not.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>prefer<sp/>promise-returning<sp/>APIs<sp/>to<sp/>callback-taking<sp/>APIs.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>want<sp/>more<sp/>useful<sp/>error<sp/>messages<sp/>than<sp/>the<sp/>native<sp/>recursive<sp/>mkdir</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>provides<sp/>(at<sp/>least<sp/>as<sp/>of<sp/>Node.js<sp/>v13.4),<sp/>and<sp/>are<sp/>ok<sp/>with<sp/>re-trying<sp/>on</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`ENOENT`<sp/>to<sp/>achieve<sp/>this.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>need<sp/>(or<sp/>at<sp/>least,<sp/>are<sp/>ok<sp/>with)<sp/>a<sp/>CLI.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>need<sp/>to<sp/>override<sp/>the<sp/>`fs`<sp/>methods<sp/>in<sp/>use.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>use<sp/>[`make-dir`](http://npm.im/make-dir)<sp/>if:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>do<sp/>not<sp/>need<sp/>to<sp/>know<sp/>the<sp/>first<sp/>dir<sp/>created<sp/>(and<sp/>wish<sp/>to<sp/>save<sp/>a<sp/>few</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`stat`<sp/>calls<sp/>when<sp/>using<sp/>the<sp/>native<sp/>implementation<sp/>for<sp/>this<sp/>reason).</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>wish<sp/>to<sp/>use<sp/>the<sp/>native<sp/>implementation<sp/>if<sp/>available,<sp/>but<sp/>fall<sp/>back</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>when<sp/>it&apos;s<sp/>not.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>prefer<sp/>promise-returning<sp/>APIs<sp/>to<sp/>callback-taking<sp/>APIs.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>are<sp/>ok<sp/>with<sp/>occasionally<sp/>getting<sp/>`ENOENT`<sp/>errors<sp/>for<sp/>failures<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>are<sp/>actually<sp/>related<sp/>to<sp/>something<sp/>other<sp/>than<sp/>a<sp/>missing<sp/>file<sp/>system<sp/>entry.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>don&apos;t<sp/>need/want<sp/>a<sp/>CLI.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>need<sp/>to<sp/>override<sp/>the<sp/>`fs`<sp/>methods<sp/>in<sp/>use.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>use<sp/>mkdirp<sp/>0.x<sp/>if:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>need<sp/>to<sp/>know<sp/>the<sp/>first<sp/>directory<sp/>that<sp/>was<sp/>created.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>need<sp/>(or<sp/>at<sp/>least,<sp/>are<sp/>ok<sp/>with)<sp/>a<sp/>CLI.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>need<sp/>to<sp/>override<sp/>the<sp/>`fs`<sp/>methods<sp/>in<sp/>use.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You&apos;re<sp/>ok<sp/>with<sp/>using<sp/>callbacks<sp/>instead<sp/>of<sp/>promises.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>are<sp/>not<sp/>running<sp/>on<sp/>Windows,<sp/>where<sp/>the<sp/>root-level<sp/>ENOENT<sp/>errors<sp/>can</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>lead<sp/>to<sp/>infinite<sp/>regress.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>think<sp/>vinyl<sp/>just<sp/>sounds<sp/>warmer<sp/>and<sp/>richer<sp/>for<sp/>some<sp/>weird<sp/>reason.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>You<sp/>are<sp/>supporting<sp/>truly<sp/>ancient<sp/>Node.js<sp/>versions,<sp/>before<sp/>even<sp/>the<sp/>advent</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>of<sp/>a<sp/>`Promise`<sp/>language<sp/>primitive.<sp/><sp/>(Please<sp/>don&apos;t.<sp/><sp/>You<sp/>deserve<sp/>better.)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>cli</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>package<sp/>also<sp/>ships<sp/>with<sp/>a<sp/>`mkdirp`<sp/>command.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">$<sp/>mkdirp<sp/>-h</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">usage:<sp/>mkdirp<sp/>[DIR1,DIR2..]<sp/>{OPTIONS}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>Create<sp/>each<sp/>supplied<sp/>directory<sp/>including<sp/>any<sp/>necessary<sp/>parent<sp/>directories</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>that<sp/>don&apos;t<sp/>yet<sp/>exist.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>If<sp/>the<sp/>directory<sp/>already<sp/>exists,<sp/>do<sp/>nothing.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">OPTIONS<sp/>are:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>-m&lt;mode&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>a<sp/>directory<sp/>needs<sp/>to<sp/>be<sp/>created,<sp/>set<sp/>the<sp/>mode<sp/>as<sp/>an<sp/>octal</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>--mode=&lt;mode&gt;<sp/><sp/>permission<sp/>string.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>-v<sp/>--version<sp/><sp/><sp/>Print<sp/>the<sp/>mkdirp<sp/>version<sp/>number</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>-h<sp/>--help<sp/><sp/><sp/><sp/><sp/><sp/>Print<sp/>this<sp/>helpful<sp/>banner</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>-p<sp/>--print<sp/><sp/><sp/><sp/><sp/>Print<sp/>the<sp/>first<sp/>directories<sp/>created<sp/>for<sp/>each<sp/>path<sp/>provided</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>--manual<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>manual<sp/>implementation,<sp/>even<sp/>if<sp/>native<sp/>is<sp/>available</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>install</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">With<sp/>[npm](http://npmjs.org)<sp/>do:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">npm<sp/>install<sp/>mkdirp</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">to<sp/>get<sp/>the<sp/>library<sp/>locally,<sp/>or</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">npm<sp/>install<sp/>-g<sp/>mkdirp</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">to<sp/>get<sp/>the<sp/>command<sp/>everywhere,<sp/>or</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">npx<sp/>mkdirp<sp/>...</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">to<sp/>run<sp/>the<sp/>command<sp/>without<sp/>installing<sp/>it<sp/>globally.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>platform<sp/>support</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>module<sp/>works<sp/>on<sp/>node<sp/>v8,<sp/>but<sp/>only<sp/>v10<sp/>and<sp/>above<sp/>are<sp/>officially</highlight></codeline>
<codeline><highlight class="normal">supported,<sp/>as<sp/>Node<sp/>v8<sp/>reached<sp/>its<sp/>LTS<sp/>end<sp/>of<sp/>life<sp/>2020-01-01,<sp/>which<sp/>is<sp/>in</highlight></codeline>
<codeline><highlight class="normal">the<sp/>past,<sp/>as<sp/>of<sp/>this<sp/>writing.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>license</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">MIT</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/mkdirp/readme.markdown"/>
  </compounddef>
</doxygen>
