<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2serve-static_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>serve-static</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Version][npm-version-image]][npm-url]</highlight></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Downloads][npm-downloads-image]][npm-url]</highlight></codeline>
<codeline><highlight class="normal">[![Linux<sp/>Build][github-actions-ci-image]][github-actions-ci-url]</highlight></codeline>
<codeline><highlight class="normal">[![Windows<sp/>Build][appveyor-image]][appveyor-url]</highlight></codeline>
<codeline><highlight class="normal">[![Test<sp/>Coverage][coveralls-image]][coveralls-url]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Install</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>is<sp/>a<sp/>[Node.js](https://nodejs.org/en/)<sp/>module<sp/>available<sp/>through<sp/>the</highlight></codeline>
<codeline><highlight class="normal">[npm<sp/>registry](https://www.npmjs.com/).<sp/>Installation<sp/>is<sp/>done<sp/>using<sp/>the</highlight></codeline>
<codeline><highlight class="normal">[`npm<sp/>install`<sp/>command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">$<sp/>npm<sp/>install<sp/>serve-static</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>serveStatic<sp/>=<sp/>require(&apos;serve-static&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>serveStatic(root,<sp/>options)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>a<sp/>new<sp/>middleware<sp/>function<sp/>to<sp/>serve<sp/>files<sp/>from<sp/>within<sp/>a<sp/>given<sp/>root</highlight></codeline>
<codeline><highlight class="normal">directory.<sp/>The<sp/>file<sp/>to<sp/>serve<sp/>will<sp/>be<sp/>determined<sp/>by<sp/>combining<sp/>`req.url`</highlight></codeline>
<codeline><highlight class="normal">with<sp/>the<sp/>provided<sp/>root<sp/>directory.<sp/>When<sp/>a<sp/>file<sp/>is<sp/>not<sp/>found,<sp/>instead<sp/>of</highlight></codeline>
<codeline><highlight class="normal">sending<sp/>a<sp/>404<sp/>response,<sp/>this<sp/>module<sp/>will<sp/>instead<sp/>call<sp/>`next()`<sp/>to<sp/>move<sp/>on</highlight></codeline>
<codeline><highlight class="normal">to<sp/>the<sp/>next<sp/>middleware,<sp/>allowing<sp/>for<sp/>stacking<sp/>and<sp/>fall-backs.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Options</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>acceptRanges</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enable<sp/>or<sp/>disable<sp/>accepting<sp/>ranged<sp/>requests,<sp/>defaults<sp/>to<sp/>true.</highlight></codeline>
<codeline><highlight class="normal">Disabling<sp/>this<sp/>will<sp/>not<sp/>send<sp/>`Accept-Ranges`<sp/>and<sp/>ignore<sp/>the<sp/>contents</highlight></codeline>
<codeline><highlight class="normal">of<sp/>the<sp/>`Range`<sp/>request<sp/>header.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>cacheControl</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enable<sp/>or<sp/>disable<sp/>setting<sp/>`Cache-Control`<sp/>response<sp/>header,<sp/>defaults<sp/>to</highlight></codeline>
<codeline><highlight class="normal">true.<sp/>Disabling<sp/>this<sp/>will<sp/>ignore<sp/>the<sp/>`immutable`<sp/>and<sp/>`maxAge`<sp/>options.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>dotfiles</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>Set<sp/>how<sp/>&quot;dotfiles&quot;<sp/>are<sp/>treated<sp/>when<sp/>encountered.<sp/>A<sp/>dotfile<sp/>is<sp/>a<sp/>file</highlight></codeline>
<codeline><highlight class="normal">or<sp/>directory<sp/>that<sp/>begins<sp/>with<sp/>a<sp/>dot<sp/>(&quot;.&quot;).<sp/>Note<sp/>this<sp/>check<sp/>is<sp/>done<sp/>on</highlight></codeline>
<codeline><highlight class="normal">the<sp/>path<sp/>itself<sp/>without<sp/>checking<sp/>if<sp/>the<sp/>path<sp/>actually<sp/>exists<sp/>on<sp/>the</highlight></codeline>
<codeline><highlight class="normal">disk.<sp/>If<sp/>`root`<sp/>is<sp/>specified,<sp/>only<sp/>the<sp/>dotfiles<sp/>above<sp/>the<sp/>root<sp/>are</highlight></codeline>
<codeline><highlight class="normal">checked<sp/>(i.e.<sp/>the<sp/>root<sp/>itself<sp/>can<sp/>be<sp/>within<sp/>a<sp/>dotfile<sp/>when<sp/>set</highlight></codeline>
<codeline><highlight class="normal">to<sp/>&quot;deny&quot;).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`&apos;allow&apos;`<sp/>No<sp/>special<sp/>treatment<sp/>for<sp/>dotfiles.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`&apos;deny&apos;`<sp/>Deny<sp/>a<sp/>request<sp/>for<sp/>a<sp/>dotfile<sp/>and<sp/>403/`next()`.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`&apos;ignore&apos;`<sp/>Pretend<sp/>like<sp/>the<sp/>dotfile<sp/>does<sp/>not<sp/>exist<sp/>and<sp/>404/`next()`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>default<sp/>value<sp/>is<sp/>similar<sp/>to<sp/>`&apos;ignore&apos;`,<sp/>with<sp/>the<sp/>exception<sp/>that<sp/>this</highlight></codeline>
<codeline><highlight class="normal">default<sp/>will<sp/>not<sp/>ignore<sp/>the<sp/>files<sp/>within<sp/>a<sp/>directory<sp/>that<sp/>begins<sp/>with<sp/>a<sp/>dot.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>etag</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enable<sp/>or<sp/>disable<sp/>etag<sp/>generation,<sp/>defaults<sp/>to<sp/>true.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>extensions</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Set<sp/>file<sp/>extension<sp/>fallbacks.<sp/>When<sp/>set,<sp/>if<sp/>a<sp/>file<sp/>is<sp/>not<sp/>found,<sp/>the<sp/>given</highlight></codeline>
<codeline><highlight class="normal">extensions<sp/>will<sp/>be<sp/>added<sp/>to<sp/>the<sp/>file<sp/>name<sp/>and<sp/>search<sp/>for.<sp/>The<sp/>first<sp/>that</highlight></codeline>
<codeline><highlight class="normal">exists<sp/>will<sp/>be<sp/>served.<sp/>Example:<sp/>`[&apos;html&apos;,<sp/>&apos;htm&apos;]`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>default<sp/>value<sp/>is<sp/>`false`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>fallthrough</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Set<sp/>the<sp/>middleware<sp/>to<sp/>have<sp/>client<sp/>errors<sp/>fall-through<sp/>as<sp/>just<sp/>unhandled</highlight></codeline>
<codeline><highlight class="normal">requests,<sp/>otherwise<sp/>forward<sp/>a<sp/>client<sp/>error.<sp/>The<sp/>difference<sp/>is<sp/>that<sp/>client</highlight></codeline>
<codeline><highlight class="normal">errors<sp/>like<sp/>a<sp/>bad<sp/>request<sp/>or<sp/>a<sp/>request<sp/>to<sp/>a<sp/>non-existent<sp/>file<sp/>will<sp/>cause</highlight></codeline>
<codeline><highlight class="normal">this<sp/>middleware<sp/>to<sp/>simply<sp/>`next()`<sp/>to<sp/>your<sp/>next<sp/>middleware<sp/>when<sp/>this<sp/>value</highlight></codeline>
<codeline><highlight class="normal">is<sp/>`true`.<sp/>When<sp/>this<sp/>value<sp/>is<sp/>`false`,<sp/>these<sp/>errors<sp/>(even<sp/>404s),<sp/>will<sp/>invoke</highlight></codeline>
<codeline><highlight class="normal">`next(err)`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Typically<sp/>`true`<sp/>is<sp/>desired<sp/>such<sp/>that<sp/>multiple<sp/>physical<sp/>directories<sp/>can<sp/>be</highlight></codeline>
<codeline><highlight class="normal">mapped<sp/>to<sp/>the<sp/>same<sp/>web<sp/>address<sp/>or<sp/>for<sp/>routes<sp/>to<sp/>fill<sp/>in<sp/>non-existent<sp/>files.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>value<sp/>`false`<sp/>can<sp/>be<sp/>used<sp/>if<sp/>this<sp/>middleware<sp/>is<sp/>mounted<sp/>at<sp/>a<sp/>path<sp/>that</highlight></codeline>
<codeline><highlight class="normal">is<sp/>designed<sp/>to<sp/>be<sp/>strictly<sp/>a<sp/>single<sp/>file<sp/>system<sp/>directory,<sp/>which<sp/>allows<sp/>for</highlight></codeline>
<codeline><highlight class="normal">short-circuiting<sp/>404s<sp/>for<sp/>less<sp/>overhead.<sp/>This<sp/>middleware<sp/>will<sp/>also<sp/>reply<sp/>to</highlight></codeline>
<codeline><highlight class="normal">all<sp/>methods.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>default<sp/>value<sp/>is<sp/>`true`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>immutable</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enable<sp/>or<sp/>disable<sp/>the<sp/>`immutable`<sp/>directive<sp/>in<sp/>the<sp/>`Cache-Control`<sp/>response</highlight></codeline>
<codeline><highlight class="normal">header,<sp/>defaults<sp/>to<sp/>`false`.<sp/>If<sp/>set<sp/>to<sp/>`true`,<sp/>the<sp/>`maxAge`<sp/>option<sp/>should</highlight></codeline>
<codeline><highlight class="normal">also<sp/>be<sp/>specified<sp/>to<sp/>enable<sp/>caching.<sp/>The<sp/>`immutable`<sp/>directive<sp/>will<sp/>prevent</highlight></codeline>
<codeline><highlight class="normal">supported<sp/>clients<sp/>from<sp/>making<sp/>conditional<sp/>requests<sp/>during<sp/>the<sp/>life<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal">`maxAge`<sp/>option<sp/>to<sp/>check<sp/>if<sp/>the<sp/>file<sp/>has<sp/>changed.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>index</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">By<sp/>default<sp/>this<sp/>module<sp/>will<sp/>send<sp/>&quot;index.html&quot;<sp/>files<sp/>in<sp/>response<sp/>to<sp/>a<sp/>request</highlight></codeline>
<codeline><highlight class="normal">on<sp/>a<sp/>directory.<sp/>To<sp/>disable<sp/>this<sp/>set<sp/>`false`<sp/>or<sp/>to<sp/>supply<sp/>a<sp/>new<sp/>index<sp/>pass<sp/>a</highlight></codeline>
<codeline><highlight class="normal">string<sp/>or<sp/>an<sp/>array<sp/>in<sp/>preferred<sp/>order.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>lastModified</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enable<sp/>or<sp/>disable<sp/>`Last-Modified`<sp/>header,<sp/>defaults<sp/>to<sp/>true.<sp/>Uses<sp/>the<sp/>file</highlight></codeline>
<codeline><highlight class="normal">system&apos;s<sp/>last<sp/>modified<sp/>value.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>maxAge</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Provide<sp/>a<sp/>max-age<sp/>in<sp/>milliseconds<sp/>for<sp/>http<sp/>caching,<sp/>defaults<sp/>to<sp/>0.<sp/>This</highlight></codeline>
<codeline><highlight class="normal">can<sp/>also<sp/>be<sp/>a<sp/>string<sp/>accepted<sp/>by<sp/>the<sp/>[ms](https://www.npmjs.org/package/ms#readme)</highlight></codeline>
<codeline><highlight class="normal">module.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>redirect</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Redirect<sp/>to<sp/>trailing<sp/>&quot;/&quot;<sp/>when<sp/>the<sp/>pathname<sp/>is<sp/>a<sp/>dir.<sp/>Defaults<sp/>to<sp/>`true`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>setHeaders</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Function<sp/>to<sp/>set<sp/>custom<sp/>headers<sp/>on<sp/>response.<sp/>Alterations<sp/>to<sp/>the<sp/>headers<sp/>need<sp/>to</highlight></codeline>
<codeline><highlight class="normal">occur<sp/>synchronously.<sp/>The<sp/>function<sp/>is<sp/>called<sp/>as<sp/>`fn(res,<sp/>path,<sp/>stat)`,<sp/>where</highlight></codeline>
<codeline><highlight class="normal">the<sp/>arguments<sp/>are:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`res`<sp/>the<sp/>response<sp/>object</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`path`<sp/>the<sp/>file<sp/>path<sp/>that<sp/>is<sp/>being<sp/>sent</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`stat`<sp/>the<sp/>stat<sp/>object<sp/>of<sp/>the<sp/>file<sp/>that<sp/>is<sp/>being<sp/>sent</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Examples</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Serve<sp/>files<sp/>with<sp/>vanilla<sp/>node.js<sp/>http<sp/>server</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>finalhandler<sp/>=<sp/>require(&apos;finalhandler&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>http<sp/>=<sp/>require(&apos;http&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>serveStatic<sp/>=<sp/>require(&apos;serve-static&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Serve<sp/>up<sp/>public/ftp<sp/>folder</highlight></codeline>
<codeline><highlight class="normal">var<sp/>serve<sp/>=<sp/>serveStatic(&apos;public/ftp&apos;,<sp/>{<sp/>index:<sp/>[&apos;index.html&apos;,<sp/>&apos;index.htm&apos;]<sp/>})</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Create<sp/>server</highlight></codeline>
<codeline><highlight class="normal">var<sp/>server<sp/>=<sp/>http.createServer(function<sp/>onRequest<sp/>(req,<sp/>res)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>serve(req,<sp/>res,<sp/>finalhandler(req,<sp/>res))</highlight></codeline>
<codeline><highlight class="normal">})</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Listen</highlight></codeline>
<codeline><highlight class="normal">server.listen(3000)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Serve<sp/>all<sp/>files<sp/>as<sp/>downloads</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>contentDisposition<sp/>=<sp/>require(&apos;content-disposition&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>finalhandler<sp/>=<sp/>require(&apos;finalhandler&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>http<sp/>=<sp/>require(&apos;http&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>serveStatic<sp/>=<sp/>require(&apos;serve-static&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Serve<sp/>up<sp/>public/ftp<sp/>folder</highlight></codeline>
<codeline><highlight class="normal">var<sp/>serve<sp/>=<sp/>serveStatic(&apos;public/ftp&apos;,<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>index:<sp/>false,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>setHeaders:<sp/>setHeaders</highlight></codeline>
<codeline><highlight class="normal">})</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Set<sp/>header<sp/>to<sp/>force<sp/>download</highlight></codeline>
<codeline><highlight class="normal">function<sp/>setHeaders<sp/>(res,<sp/>path)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.setHeader(&apos;Content-Disposition&apos;,<sp/>contentDisposition(path))</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Create<sp/>server</highlight></codeline>
<codeline><highlight class="normal">var<sp/>server<sp/>=<sp/>http.createServer(function<sp/>onRequest<sp/>(req,<sp/>res)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>serve(req,<sp/>res,<sp/>finalhandler(req,<sp/>res))</highlight></codeline>
<codeline><highlight class="normal">})</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Listen</highlight></codeline>
<codeline><highlight class="normal">server.listen(3000)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Serving<sp/>using<sp/>express</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Simple</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>is<sp/>a<sp/>simple<sp/>example<sp/>of<sp/>using<sp/>Express.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>express<sp/>=<sp/>require(&apos;express&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>serveStatic<sp/>=<sp/>require(&apos;serve-static&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">var<sp/>app<sp/>=<sp/>express()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">app.use(serveStatic(&apos;public/ftp&apos;,<sp/>{<sp/>index:<sp/>[&apos;default.html&apos;,<sp/>&apos;default.htm&apos;]<sp/>}))</highlight></codeline>
<codeline><highlight class="normal">app.listen(3000)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Multiple<sp/>roots</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>example<sp/>shows<sp/>a<sp/>simple<sp/>way<sp/>to<sp/>search<sp/>through<sp/>multiple<sp/>directories.</highlight></codeline>
<codeline><highlight class="normal">Files<sp/>are<sp/>searched<sp/>for<sp/>in<sp/>`public-optimized/`<sp/>first,<sp/>then<sp/>`public/`<sp/>second</highlight></codeline>
<codeline><highlight class="normal">as<sp/>a<sp/>fallback.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>express<sp/>=<sp/>require(&apos;express&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>path<sp/>=<sp/>require(&apos;path&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>serveStatic<sp/>=<sp/>require(&apos;serve-static&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">var<sp/>app<sp/>=<sp/>express()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">app.use(serveStatic(path.join(__dirname,<sp/>&apos;public-optimized&apos;)))</highlight></codeline>
<codeline><highlight class="normal">app.use(serveStatic(path.join(__dirname,<sp/>&apos;public&apos;)))</highlight></codeline>
<codeline><highlight class="normal">app.listen(3000)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Different<sp/>settings<sp/>for<sp/>paths</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>example<sp/>shows<sp/>how<sp/>to<sp/>set<sp/>a<sp/>different<sp/>max<sp/>age<sp/>depending<sp/>on<sp/>the<sp/>served</highlight></codeline>
<codeline><highlight class="normal">file<sp/>type.<sp/>In<sp/>this<sp/>example,<sp/>HTML<sp/>files<sp/>are<sp/>not<sp/>cached,<sp/>while<sp/>everything<sp/>else</highlight></codeline>
<codeline><highlight class="normal">is<sp/>for<sp/>1<sp/>day.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>express<sp/>=<sp/>require(&apos;express&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>path<sp/>=<sp/>require(&apos;path&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>serveStatic<sp/>=<sp/>require(&apos;serve-static&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">var<sp/>app<sp/>=<sp/>express()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">app.use(serveStatic(path.join(__dirname,<sp/>&apos;public&apos;),<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>maxAge:<sp/>&apos;1d&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>setHeaders:<sp/>setCustomCacheControl</highlight></codeline>
<codeline><highlight class="normal">}))</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">app.listen(3000)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>setCustomCacheControl<sp/>(res,<sp/>path)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(serveStatic.mime.lookup(path)<sp/>===<sp/>&apos;text/html&apos;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Custom<sp/>Cache-Control<sp/>for<sp/>HTML<sp/>files</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>res.setHeader(&apos;Cache-Control&apos;,<sp/>&apos;public,<sp/>max-age=0&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[MIT](LICENSE)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[appveyor-image]:<sp/>https://badgen.net/appveyor/ci/dougwilson/serve-static/master?label=windows</highlight></codeline>
<codeline><highlight class="normal">[appveyor-url]:<sp/>https://ci.appveyor.com/project/dougwilson/serve-static</highlight></codeline>
<codeline><highlight class="normal">[coveralls-image]:<sp/>https://badgen.net/coveralls/c/github/expressjs/serve-static/master</highlight></codeline>
<codeline><highlight class="normal">[coveralls-url]:<sp/>https://coveralls.io/r/expressjs/serve-static?branch=master</highlight></codeline>
<codeline><highlight class="normal">[github-actions-ci-image]:<sp/>https://badgen.net/github/checks/expressjs/serve-static/master?label=linux</highlight></codeline>
<codeline><highlight class="normal">[github-actions-ci-url]:<sp/>https://github.com/expressjs/serve-static/actions/workflows/ci.yml</highlight></codeline>
<codeline><highlight class="normal">[node-image]:<sp/>https://badgen.net/npm/node/serve-static</highlight></codeline>
<codeline><highlight class="normal">[node-url]:<sp/>https://nodejs.org/en/download/</highlight></codeline>
<codeline><highlight class="normal">[npm-downloads-image]:<sp/>https://badgen.net/npm/dm/serve-static</highlight></codeline>
<codeline><highlight class="normal">[npm-url]:<sp/>https://npmjs.org/package/serve-static</highlight></codeline>
<codeline><highlight class="normal">[npm-version-image]:<sp/>https://badgen.net/npm/v/serve-static</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/serve-static/README.md"/>
  </compounddef>
</doxygen>
