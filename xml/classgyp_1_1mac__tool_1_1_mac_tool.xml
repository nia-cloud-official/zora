<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="classgyp_1_1mac__tool_1_1_mac_tool" kind="class" language="Python" prot="public">
    <compoundname>gyp::mac_tool::MacTool</compoundname>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a87198792cc6cd25280d4ce6647f9c453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool.Dispatch</definition>
        <argsstring>(self, args)</argsstring>
        <name>Dispatch</name>
        <qualifiedname>gyp.mac_tool.MacTool.Dispatch</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>args</type>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Dispatches a string command to a method.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="37" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="37" bodyend="44"/>
        <references refid="classgyp_1_1flock__tool_1_1_flock_tool_1ab3145340e2c63233dbac98493c1f37ce" compoundref="flock__tool_8py" startline="32" endline="35">gyp.flock_tool.FlockTool._CommandifyName</references>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1ac640e5d7212d98f3f0615e0104051dde" compoundref="mac__tool_8py" startline="45" endline="48">gyp.mac_tool.MacTool._CommandifyName</references>
        <references refid="classgyp_1_1win__tool_1_1_win_tool_1ab684d472416bae5b6a3fecfd6d7b79f9" compoundref="win__tool_8py" startline="75" endline="78">gyp.win_tool.WinTool._CommandifyName</references>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1af008b6300076c34a7845ddffcaac5ca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool.ExecCopyBundleResource</definition>
        <argsstring>(self, source, dest, convert_to_binary)</argsstring>
        <name>ExecCopyBundleResource</name>
        <qualifiedname>gyp.mac_tool.MacTool.ExecCopyBundleResource</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>source</type>
          <defname>source</defname>
        </param>
        <param>
          <type>dest</type>
          <defname>dest</defname>
        </param>
        <param>
          <type>convert_to_binary</type>
          <defname>convert_to_binary</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Copies a resource file to the bundle/Resources directory, performing any
necessary compilation on each resource.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="49" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="49" bodyend="75"/>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1a14184460337ad438b37d9fbaea063c77" compoundref="mac__tool_8py" startline="133" endline="137">gyp.mac_tool.MacTool._ConvertToBinary</references>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1aefa0d781311a4755b1284eeb7a2496aa" compoundref="mac__tool_8py" startline="138" endline="158">gyp.mac_tool.MacTool._CopyStringsFile</references>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1a9202b8888c451b9be78257196064d6d3" compoundref="mac__tool_8py" startline="76" endline="132">gyp.mac_tool.MacTool._CopyXIBFile</references>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1abd43aa948045946647165227f36d36a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool.ExecCopyInfoPlist</definition>
        <argsstring>(self, source, dest, convert_to_binary, *keys)</argsstring>
        <name>ExecCopyInfoPlist</name>
        <qualifiedname>gyp.mac_tool.MacTool.ExecCopyInfoPlist</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>source</type>
          <defname>source</defname>
        </param>
        <param>
          <type>dest</type>
          <defname>dest</defname>
        </param>
        <param>
          <type>convert_to_binary</type>
          <defname>convert_to_binary</defname>
        </param>
        <param>
          <type>*</type>
          <declname>keys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Copies the |source| Info.plist to the destination directory |dest|.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="176" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="176" bodyend="230"/>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1a14184460337ad438b37d9fbaea063c77" compoundref="mac__tool_8py" startline="133" endline="137">gyp.mac_tool.MacTool._ConvertToBinary</references>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1ab7c04f83f7b94958379d3fb995688bda" compoundref="mac__tool_8py" startline="231" endline="252">gyp.mac_tool.MacTool._WritePkgInfo</references>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a8e1e5bf8d9b31302d8922194516ea77b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool.ExecFlock</definition>
        <argsstring>(self, lockfile, *cmd_list)</argsstring>
        <name>ExecFlock</name>
        <qualifiedname>gyp.mac_tool.MacTool.ExecFlock</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>lockfile</type>
          <defname>lockfile</defname>
        </param>
        <param>
          <type>*</type>
          <declname>cmd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Emulates the most basic behavior of Linux&apos;s flock(1).</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="253" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="253" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a873954c9f9c44e675ac61c2dfeedda40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool.ExecFilterLibtool</definition>
        <argsstring>(self, *cmd_list)</argsstring>
        <name>ExecFilterLibtool</name>
        <qualifiedname>gyp.mac_tool.MacTool.ExecFilterLibtool</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>*</type>
          <declname>cmd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Calls libtool and filters out &apos;/path/to/libtool: file: foo.o has no
symbols&apos;.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="260" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="260" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a9226e8afa26a2aea6cf114ddefb0a704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool.ExecPackageIosFramework</definition>
        <argsstring>(self, framework)</argsstring>
        <name>ExecPackageIosFramework</name>
        <qualifiedname>gyp.mac_tool.MacTool.ExecPackageIosFramework</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>framework</type>
          <defname>framework</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="291" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="291" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a584e52ed62eeb88166f08e474df42f91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool.ExecPackageFramework</definition>
        <argsstring>(self, framework, version)</argsstring>
        <name>ExecPackageFramework</name>
        <qualifiedname>gyp.mac_tool.MacTool.ExecPackageFramework</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>framework</type>
          <defname>framework</defname>
        </param>
        <param>
          <type>version</type>
          <defname>version</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Takes a path to Something.framework and the Current version of that and
sets up all the symlinks.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="309" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="309" bodyend="337"/>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1aecacb9f21ae9b95fb8917afb53401f48" compoundref="mac__tool_8py" startline="338" endline="344">gyp.mac_tool.MacTool._Relink</references>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1ab5d617c29a0a9d0580a2f7254f745914" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool.ExecCompileIosFrameworkHeaderMap</definition>
        <argsstring>(self, out, framework, *all_headers)</argsstring>
        <name>ExecCompileIosFrameworkHeaderMap</name>
        <qualifiedname>gyp.mac_tool.MacTool.ExecCompileIosFrameworkHeaderMap</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>out</type>
          <defname>out</defname>
        </param>
        <param>
          <type>framework</type>
          <defname>framework</defname>
        </param>
        <param>
          <type>*</type>
          <declname>all_headers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="345" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="345" bodyend="354"/>
        <references refid="namespacegyp_1_1mac__tool_1ae25efe39661e0ad66572ae357f749803" compoundref="mac__tool_8py" startline="696" endline="769">gyp.mac_tool.WriteHmap</references>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a3f4d2228bc5a4cbc9dcada651144ef02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool.ExecCopyIosFrameworkHeaders</definition>
        <argsstring>(self, framework, *copy_headers)</argsstring>
        <name>ExecCopyIosFrameworkHeaders</name>
        <qualifiedname>gyp.mac_tool.MacTool.ExecCopyIosFrameworkHeaders</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>framework</type>
          <defname>framework</defname>
        </param>
        <param>
          <type>*</type>
          <declname>copy_headers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="355" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="355" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1abe89598ba4c8e07c41a6517473e7c458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool.ExecCompileXcassets</definition>
        <argsstring>(self, keys, *inputs)</argsstring>
        <name>ExecCompileXcassets</name>
        <qualifiedname>gyp.mac_tool.MacTool.ExecCompileXcassets</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>keys</type>
          <defname>keys</defname>
        </param>
        <param>
          <type>*</type>
          <declname>inputs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Compiles multiple .xcassets files into a single .car file.

This invokes &apos;actool&apos; to compile all the inputs .xcassets files. The
|keys| arguments is a json-encoded dictionary of extra arguments to
pass to &apos;actool&apos; when the asset catalogs contains an application icon
or a launch image.

Note that &apos;actool&apos; does not create the Assets.car file if the asset
catalogs does not contains imageset.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="362" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="362" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a6e4b54b060fea3658c3cdcdf7c375642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool.ExecMergeInfoPlist</definition>
        <argsstring>(self, output, *inputs)</argsstring>
        <name>ExecMergeInfoPlist</name>
        <qualifiedname>gyp.mac_tool.MacTool.ExecMergeInfoPlist</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>output</type>
          <defname>output</defname>
        </param>
        <param>
          <type>*</type>
          <declname>inputs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Merge multiple .plist files into a single .plist file.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="434" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="434" bodyend="441"/>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1a8ae942f9c1da31e60062b9a493488911" compoundref="mac__tool_8py" startline="585" endline="609">gyp.mac_tool.MacTool._LoadPlistMaybeBinary</references>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1a7f01996b06e696c9b2130d0cf05b28ee" compoundref="mac__tool_8py" startline="572" endline="584">gyp.mac_tool.MacTool._MergePlist</references>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1ab8fc367aefe4db0238476657f19ddde9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool.ExecCodeSignBundle</definition>
        <argsstring>(self, key, entitlements, provisioning, path, preserve)</argsstring>
        <name>ExecCodeSignBundle</name>
        <qualifiedname>gyp.mac_tool.MacTool.ExecCodeSignBundle</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>key</type>
          <defname>key</defname>
        </param>
        <param>
          <type>entitlements</type>
          <defname>entitlements</defname>
        </param>
        <param>
          <type>provisioning</type>
          <defname>provisioning</defname>
        </param>
        <param>
          <type>path</type>
          <defname>path</defname>
        </param>
        <param>
          <type>preserve</type>
          <defname>preserve</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Code sign a bundle.

This function tries to code sign an iOS bundle, following the same
algorithm as Xcode:
1. pick the provisioning profile that best match the bundle identifier,
 and copy it into the bundle as embedded.mobileprovision,
2. copy Entitlements.plist from user or SDK next to the bundle,
3. code sign the bundle.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="442" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="442" bodyend="466"/>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1a4b128ce88d5139f005facddd930a0b99" compoundref="mac__tool_8py" startline="625" endline="636">gyp.mac_tool.MacTool._GetCFBundleIdentifier</references>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1a6c6c6fa538b91cc8d5394fb9c6065fe6" compoundref="mac__tool_8py" startline="637" endline="668">gyp.mac_tool.MacTool._InstallEntitlements</references>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1aad6acee1bfff985f3f7de4852043c99a" compoundref="mac__tool_8py" startline="467" endline="491">gyp.mac_tool.MacTool._InstallProvisioningProfile</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1ac640e5d7212d98f3f0615e0104051dde" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._CommandifyName</definition>
        <argsstring>(self, name_string)</argsstring>
        <name>_CommandifyName</name>
        <qualifiedname>gyp.mac_tool.MacTool._CommandifyName</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>name_string</type>
          <defname>name_string</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Transforms a tool name like copy-info-plist to CopyInfoPlist</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="45" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="45" bodyend="48"/>
        <referencedby refid="classgyp_1_1flock__tool_1_1_flock_tool_1a1dbd5e7c90f3172d42e20d29fd92420e" compoundref="flock__tool_8py" startline="24" endline="31">gyp.flock_tool.FlockTool.Dispatch</referencedby>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1a87198792cc6cd25280d4ce6647f9c453" compoundref="mac__tool_8py" startline="37" endline="44">gyp.mac_tool.MacTool.Dispatch</referencedby>
        <referencedby refid="classgyp_1_1win__tool_1_1_win_tool_1aaf716ef95a71ebfb7eb9274702d2c3b8" compoundref="win__tool_8py" startline="67" endline="74">gyp.win_tool.WinTool.Dispatch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a9202b8888c451b9be78257196064d6d3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._CopyXIBFile</definition>
        <argsstring>(self, source, dest)</argsstring>
        <name>_CopyXIBFile</name>
        <qualifiedname>gyp.mac_tool.MacTool._CopyXIBFile</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>source</type>
          <defname>source</defname>
        </param>
        <param>
          <type>dest</type>
          <defname>dest</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Compiles a XIB file with ibtool into a binary plist in the bundle.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="76" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="76" bodyend="132"/>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1af008b6300076c34a7845ddffcaac5ca1" compoundref="mac__tool_8py" startline="49" endline="75">gyp.mac_tool.MacTool.ExecCopyBundleResource</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a14184460337ad438b37d9fbaea063c77" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._ConvertToBinary</definition>
        <argsstring>(self, dest)</argsstring>
        <name>_ConvertToBinary</name>
        <qualifiedname>gyp.mac_tool.MacTool._ConvertToBinary</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>dest</type>
          <defname>dest</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="133" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="133" bodyend="137"/>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1af008b6300076c34a7845ddffcaac5ca1" compoundref="mac__tool_8py" startline="49" endline="75">gyp.mac_tool.MacTool.ExecCopyBundleResource</referencedby>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1abd43aa948045946647165227f36d36a0" compoundref="mac__tool_8py" startline="176" endline="230">gyp.mac_tool.MacTool.ExecCopyInfoPlist</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1aefa0d781311a4755b1284eeb7a2496aa" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._CopyStringsFile</definition>
        <argsstring>(self, source, dest)</argsstring>
        <name>_CopyStringsFile</name>
        <qualifiedname>gyp.mac_tool.MacTool._CopyStringsFile</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>source</type>
          <defname>source</defname>
        </param>
        <param>
          <type>dest</type>
          <defname>dest</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Copies a .strings file using iconv to reconvert the input into UTF-16.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="138" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="138" bodyend="158"/>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1afcf3616ee4595d44a36bc09c670c4779" compoundref="mac__tool_8py" startline="159" endline="175">gyp.mac_tool.MacTool._DetectInputEncoding</references>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1af008b6300076c34a7845ddffcaac5ca1" compoundref="mac__tool_8py" startline="49" endline="75">gyp.mac_tool.MacTool.ExecCopyBundleResource</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1afcf3616ee4595d44a36bc09c670c4779" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._DetectInputEncoding</definition>
        <argsstring>(self, file_name)</argsstring>
        <name>_DetectInputEncoding</name>
        <qualifiedname>gyp.mac_tool.MacTool._DetectInputEncoding</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>file_name</type>
          <defname>file_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Reads the first few bytes from file_name and tries to guess the text
encoding. Returns None as a guess if it can&apos;t detect it.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="159" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="159" bodyend="175"/>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1aefa0d781311a4755b1284eeb7a2496aa" compoundref="mac__tool_8py" startline="138" endline="158">gyp.mac_tool.MacTool._CopyStringsFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1ab7c04f83f7b94958379d3fb995688bda" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._WritePkgInfo</definition>
        <argsstring>(self, info_plist)</argsstring>
        <name>_WritePkgInfo</name>
        <qualifiedname>gyp.mac_tool.MacTool._WritePkgInfo</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>info_plist</type>
          <defname>info_plist</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>This writes the PkgInfo file from the data stored in Info.plist.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="231" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="231" bodyend="252"/>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1abd43aa948045946647165227f36d36a0" compoundref="mac__tool_8py" startline="176" endline="230">gyp.mac_tool.MacTool.ExecCopyInfoPlist</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1aecacb9f21ae9b95fb8917afb53401f48" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._Relink</definition>
        <argsstring>(self, dest, link)</argsstring>
        <name>_Relink</name>
        <qualifiedname>gyp.mac_tool.MacTool._Relink</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>dest</type>
          <defname>dest</defname>
        </param>
        <param>
          <type>link</type>
          <defname>link</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Creates a symlink to |dest| named |link|. If |link| already exists,
it is overwritten.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="338" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="338" bodyend="344"/>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1a584e52ed62eeb88166f08e474df42f91" compoundref="mac__tool_8py" startline="309" endline="337">gyp.mac_tool.MacTool.ExecPackageFramework</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1aad6acee1bfff985f3f7de4852043c99a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._InstallProvisioningProfile</definition>
        <argsstring>(self, profile, bundle_identifier)</argsstring>
        <name>_InstallProvisioningProfile</name>
        <qualifiedname>gyp.mac_tool.MacTool._InstallProvisioningProfile</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>profile</type>
          <defname>profile</defname>
        </param>
        <param>
          <type>bundle_identifier</type>
          <defname>bundle_identifier</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Installs embedded.mobileprovision into the bundle.

Args:
profile: string, optional, short name of the .mobileprovision file
to use, if empty or the file is missing, the best file installed
will be used
bundle_identifier: string, value of CFBundleIdentifier from Info.plist

Returns:
A tuple containing two dictionary: variables substitutions and values
to overrides when generating the entitlements file.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="467" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="467" bodyend="491"/>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1a4416642c33c10d360c1e6dfef9e9927f" compoundref="mac__tool_8py" startline="492" endline="556">gyp.mac_tool.MacTool._FindProvisioningProfile</references>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1ab1ad71c28b6d780baccee565605d66a8" compoundref="mac__tool_8py" startline="610" endline="624">gyp.mac_tool.MacTool._GetSubstitutions</references>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1ab8fc367aefe4db0238476657f19ddde9" compoundref="mac__tool_8py" startline="442" endline="466">gyp.mac_tool.MacTool.ExecCodeSignBundle</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a4416642c33c10d360c1e6dfef9e9927f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._FindProvisioningProfile</definition>
        <argsstring>(self, profile, bundle_identifier)</argsstring>
        <name>_FindProvisioningProfile</name>
        <qualifiedname>gyp.mac_tool.MacTool._FindProvisioningProfile</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>profile</type>
          <defname>profile</defname>
        </param>
        <param>
          <type>bundle_identifier</type>
          <defname>bundle_identifier</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Finds the .mobileprovision file to use for signing the bundle.

Checks all the installed provisioning profiles (or if the user specified
the PROVISIONING_PROFILE variable, only consult it) and select the most
specific that correspond to the bundle identifier.

Args:
profile: string, optional, short name of the .mobileprovision file
to use, if empty or the file is missing, the best file installed
will be used
bundle_identifier: string, value of CFBundleIdentifier from Info.plist

Returns:
A tuple of the path to the selected provisioning profile, the data of
the embedded plist in the provisioning profile and the team identifier
to use for code signing.

Raises:
SystemExit: if no .mobileprovision can be used to sign the bundle.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="492" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="492" bodyend="556"/>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1af530a914120c6ccfc1a08a117ac35f8a" compoundref="mac__tool_8py" startline="557" endline="571">gyp.mac_tool.MacTool._LoadProvisioningProfile</references>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1aad6acee1bfff985f3f7de4852043c99a" compoundref="mac__tool_8py" startline="467" endline="491">gyp.mac_tool.MacTool._InstallProvisioningProfile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1af530a914120c6ccfc1a08a117ac35f8a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._LoadProvisioningProfile</definition>
        <argsstring>(self, profile_path)</argsstring>
        <name>_LoadProvisioningProfile</name>
        <qualifiedname>gyp.mac_tool.MacTool._LoadProvisioningProfile</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>profile_path</type>
          <defname>profile_path</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Extracts the plist embedded in a provisioning profile.

Args:
profile_path: string, path to the .mobileprovision file

Returns:
Content of the plist embedded in the provisioning profile as a dictionary.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="557" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="557" bodyend="571"/>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1a8ae942f9c1da31e60062b9a493488911" compoundref="mac__tool_8py" startline="585" endline="609">gyp.mac_tool.MacTool._LoadPlistMaybeBinary</references>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1a4416642c33c10d360c1e6dfef9e9927f" compoundref="mac__tool_8py" startline="492" endline="556">gyp.mac_tool.MacTool._FindProvisioningProfile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a7f01996b06e696c9b2130d0cf05b28ee" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._MergePlist</definition>
        <argsstring>(self, merged_plist, plist)</argsstring>
        <name>_MergePlist</name>
        <qualifiedname>gyp.mac_tool.MacTool._MergePlist</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>merged_plist</type>
          <defname>merged_plist</defname>
        </param>
        <param>
          <type>plist</type>
          <defname>plist</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Merge |plist| into |merged_plist|.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="572" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="572" bodyend="584"/>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1a7f01996b06e696c9b2130d0cf05b28ee" compoundref="mac__tool_8py" startline="572" endline="584">gyp.mac_tool.MacTool._MergePlist</references>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1a7f01996b06e696c9b2130d0cf05b28ee" compoundref="mac__tool_8py" startline="572" endline="584">gyp.mac_tool.MacTool._MergePlist</referencedby>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1a6e4b54b060fea3658c3cdcdf7c375642" compoundref="mac__tool_8py" startline="434" endline="441">gyp.mac_tool.MacTool.ExecMergeInfoPlist</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a8ae942f9c1da31e60062b9a493488911" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._LoadPlistMaybeBinary</definition>
        <argsstring>(self, plist_path)</argsstring>
        <name>_LoadPlistMaybeBinary</name>
        <qualifiedname>gyp.mac_tool.MacTool._LoadPlistMaybeBinary</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>plist_path</type>
          <defname>plist_path</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Loads into a memory a plist possibly encoded in binary format.

This is a wrapper around plistlib.readPlist that tries to convert the
plist to the XML format if it can&apos;t be parsed (assuming that it is in
the binary format).

Args:
plist_path: string, path to a plist file, in XML or binary format

Returns:
Content of the plist as a dictionary.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="585" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="585" bodyend="609"/>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1a4b128ce88d5139f005facddd930a0b99" compoundref="mac__tool_8py" startline="625" endline="636">gyp.mac_tool.MacTool._GetCFBundleIdentifier</referencedby>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1a6c6c6fa538b91cc8d5394fb9c6065fe6" compoundref="mac__tool_8py" startline="637" endline="668">gyp.mac_tool.MacTool._InstallEntitlements</referencedby>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1af530a914120c6ccfc1a08a117ac35f8a" compoundref="mac__tool_8py" startline="557" endline="571">gyp.mac_tool.MacTool._LoadProvisioningProfile</referencedby>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1a6e4b54b060fea3658c3cdcdf7c375642" compoundref="mac__tool_8py" startline="434" endline="441">gyp.mac_tool.MacTool.ExecMergeInfoPlist</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1ab1ad71c28b6d780baccee565605d66a8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._GetSubstitutions</definition>
        <argsstring>(self, bundle_identifier, app_identifier_prefix)</argsstring>
        <name>_GetSubstitutions</name>
        <qualifiedname>gyp.mac_tool.MacTool._GetSubstitutions</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>bundle_identifier</type>
          <defname>bundle_identifier</defname>
        </param>
        <param>
          <type>app_identifier_prefix</type>
          <defname>app_identifier_prefix</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Constructs a dictionary of variable substitutions for Entitlements.plist.

Args:
bundle_identifier: string, value of CFBundleIdentifier from Info.plist
app_identifier_prefix: string, value for AppIdentifierPrefix

Returns:
Dictionary of substitutions to apply when generating Entitlements.plist.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="610" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="610" bodyend="624"/>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1aad6acee1bfff985f3f7de4852043c99a" compoundref="mac__tool_8py" startline="467" endline="491">gyp.mac_tool.MacTool._InstallProvisioningProfile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a4b128ce88d5139f005facddd930a0b99" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._GetCFBundleIdentifier</definition>
        <argsstring>(self)</argsstring>
        <name>_GetCFBundleIdentifier</name>
        <qualifiedname>gyp.mac_tool.MacTool._GetCFBundleIdentifier</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Extracts CFBundleIdentifier value from Info.plist in the bundle.

Returns:
Value of CFBundleIdentifier in the Info.plist located in the bundle.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="625" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="625" bodyend="636"/>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1a8ae942f9c1da31e60062b9a493488911" compoundref="mac__tool_8py" startline="585" endline="609">gyp.mac_tool.MacTool._LoadPlistMaybeBinary</references>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1ab8fc367aefe4db0238476657f19ddde9" compoundref="mac__tool_8py" startline="442" endline="466">gyp.mac_tool.MacTool.ExecCodeSignBundle</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1a6c6c6fa538b91cc8d5394fb9c6065fe6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._InstallEntitlements</definition>
        <argsstring>(self, entitlements, substitutions, overrides)</argsstring>
        <name>_InstallEntitlements</name>
        <qualifiedname>gyp.mac_tool.MacTool._InstallEntitlements</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>entitlements</type>
          <defname>entitlements</defname>
        </param>
        <param>
          <type>substitutions</type>
          <defname>substitutions</defname>
        </param>
        <param>
          <type>overrides</type>
          <defname>overrides</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Generates and install the ${BundleName}.xcent entitlements file.

Expands variables &quot;$(variable)&quot; pattern in the source entitlements file,
add extra entitlements defined in the .mobileprovision file and the copy
the generated plist to &quot;${BundlePath}.xcent&quot;.

Args:
entitlements: string, optional, path to the Entitlements.plist template
to use, defaults to &quot;${SDKROOT}/Entitlements.plist&quot;
substitutions: dictionary, variable substitutions
overrides: dictionary, values to add to the entitlements

Returns:
Path to the generated entitlements file.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="637" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="637" bodyend="668"/>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1afc6be9e724137bcb52916b3cb0879116" compoundref="mac__tool_8py" startline="669" endline="691">gyp.mac_tool.MacTool._ExpandVariables</references>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1a8ae942f9c1da31e60062b9a493488911" compoundref="mac__tool_8py" startline="585" endline="609">gyp.mac_tool.MacTool._LoadPlistMaybeBinary</references>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1ab8fc367aefe4db0238476657f19ddde9" compoundref="mac__tool_8py" startline="442" endline="466">gyp.mac_tool.MacTool.ExecCodeSignBundle</referencedby>
      </memberdef>
      <memberdef kind="function" id="classgyp_1_1mac__tool_1_1_mac_tool_1afc6be9e724137bcb52916b3cb0879116" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gyp.mac_tool.MacTool._ExpandVariables</definition>
        <argsstring>(self, data, substitutions)</argsstring>
        <name>_ExpandVariables</name>
        <qualifiedname>gyp.mac_tool.MacTool._ExpandVariables</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <param>
          <type>substitutions</type>
          <defname>substitutions</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Expands variables &quot;$(variable)&quot; in data.

Args:
data: object, can be either string, list or dictionary
substitutions: dictionary, variable substitutions to perform

Returns:
Copy of data where each references to &quot;$(variable)&quot; has been replaced
by the corresponding value found in substitutions, or left intact if
the key was not found.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="669" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="669" bodyend="691"/>
        <references refid="classgyp_1_1mac__tool_1_1_mac_tool_1afc6be9e724137bcb52916b3cb0879116" compoundref="mac__tool_8py" startline="669" endline="691">gyp.mac_tool.MacTool._ExpandVariables</references>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1afc6be9e724137bcb52916b3cb0879116" compoundref="mac__tool_8py" startline="669" endline="691">gyp.mac_tool.MacTool._ExpandVariables</referencedby>
        <referencedby refid="classgyp_1_1mac__tool_1_1_mac_tool_1a6c6c6fa538b91cc8d5394fb9c6065fe6" compoundref="mac__tool_8py" startline="637" endline="668">gyp.mac_tool.MacTool._InstallEntitlements</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>This class performs all the Mac tooling steps. The methods can either be
executed directly, or dispatched from an argument list.</verbatim> </para>
    </detaileddescription>
    <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" line="33" column="1" bodyfile="backend/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py" bodystart="33" bodyend="691"/>
    <listofallmembers>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1ac640e5d7212d98f3f0615e0104051dde" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_CommandifyName</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a14184460337ad438b37d9fbaea063c77" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_ConvertToBinary</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1aefa0d781311a4755b1284eeb7a2496aa" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_CopyStringsFile</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a9202b8888c451b9be78257196064d6d3" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_CopyXIBFile</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1afcf3616ee4595d44a36bc09c670c4779" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_DetectInputEncoding</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1afc6be9e724137bcb52916b3cb0879116" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_ExpandVariables</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a4416642c33c10d360c1e6dfef9e9927f" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_FindProvisioningProfile</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a4b128ce88d5139f005facddd930a0b99" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_GetCFBundleIdentifier</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1ab1ad71c28b6d780baccee565605d66a8" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_GetSubstitutions</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a6c6c6fa538b91cc8d5394fb9c6065fe6" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_InstallEntitlements</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1aad6acee1bfff985f3f7de4852043c99a" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_InstallProvisioningProfile</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a8ae942f9c1da31e60062b9a493488911" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_LoadPlistMaybeBinary</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1af530a914120c6ccfc1a08a117ac35f8a" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_LoadProvisioningProfile</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a7f01996b06e696c9b2130d0cf05b28ee" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_MergePlist</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1aecacb9f21ae9b95fb8917afb53401f48" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_Relink</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1ab7c04f83f7b94958379d3fb995688bda" prot="protected" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>_WritePkgInfo</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a87198792cc6cd25280d4ce6647f9c453" prot="public" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>Dispatch</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1ab8fc367aefe4db0238476657f19ddde9" prot="public" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>ExecCodeSignBundle</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1ab5d617c29a0a9d0580a2f7254f745914" prot="public" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>ExecCompileIosFrameworkHeaderMap</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1abe89598ba4c8e07c41a6517473e7c458" prot="public" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>ExecCompileXcassets</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1af008b6300076c34a7845ddffcaac5ca1" prot="public" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>ExecCopyBundleResource</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1abd43aa948045946647165227f36d36a0" prot="public" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>ExecCopyInfoPlist</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a3f4d2228bc5a4cbc9dcada651144ef02" prot="public" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>ExecCopyIosFrameworkHeaders</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a873954c9f9c44e675ac61c2dfeedda40" prot="public" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>ExecFilterLibtool</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a8e1e5bf8d9b31302d8922194516ea77b" prot="public" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>ExecFlock</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a6e4b54b060fea3658c3cdcdf7c375642" prot="public" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>ExecMergeInfoPlist</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a584e52ed62eeb88166f08e474df42f91" prot="public" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>ExecPackageFramework</name></member>
      <member refid="classgyp_1_1mac__tool_1_1_mac_tool_1a9226e8afa26a2aea6cf114ddefb0a704" prot="public" virt="non-virtual"><scope>gyp::mac_tool::MacTool</scope><name>ExecPackageIosFramework</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
