<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2set-blocking_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>set-blocking</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[![Build<sp/>Status](https://travis-ci.org/yargs/set-blocking.svg)](https://travis-ci.org/yargs/set-blocking)</highlight></codeline>
<codeline><highlight class="normal">[![NPM<sp/>version](https://img.shields.io/npm/v/set-blocking.svg)](https://www.npmjs.com/package/set-blocking)</highlight></codeline>
<codeline><highlight class="normal">[![Coverage<sp/>Status](https://coveralls.io/repos/yargs/set-blocking/badge.svg?branch=)](https://coveralls.io/r/yargs/set-blocking?branch=master)</highlight></codeline>
<codeline><highlight class="normal">[![Standard<sp/>Version](https://img.shields.io/badge/release-standard%20version-brightgreen.svg)](https://github.com/conventional-changelog/standard-version)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">set<sp/>blocking<sp/>`stdio`<sp/>and<sp/>`stderr`<sp/>ensuring<sp/>that<sp/>terminal<sp/>output<sp/>does<sp/>not<sp/>truncate.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">const<sp/>setBlocking<sp/>=<sp/>require(&apos;set-blocking&apos;)</highlight></codeline>
<codeline><highlight class="normal">setBlocking(true)</highlight></codeline>
<codeline><highlight class="normal">console.log(someLargeStringToOutput)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Historical<sp/>Context/Word<sp/>of<sp/>Warning</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>was<sp/>created<sp/>as<sp/>a<sp/>shim<sp/>to<sp/>address<sp/>the<sp/>bug<sp/>discussed<sp/>in<sp/>[node<sp/>#6456](https://github.com/nodejs/node/issues/6456).<sp/>This<sp/>bug<sp/>crops<sp/>up<sp/>on</highlight></codeline>
<codeline><highlight class="normal">newer<sp/>versions<sp/>of<sp/>Node.js<sp/>(`0.12+`),<sp/>truncating<sp/>terminal<sp/>output.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>should<sp/>be<sp/>mindful<sp/>of<sp/>the<sp/>side-effects<sp/>caused<sp/>by<sp/>using<sp/>`set-blocking`:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>if<sp/>your<sp/>module<sp/>sets<sp/>blocking<sp/>to<sp/>`true`,<sp/>it<sp/>will<sp/>effect<sp/>other<sp/>modules</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>consuming<sp/>your<sp/>library.<sp/>In<sp/>[yargs](https://github.com/yargs/yargs/blob/master/yargs.js#L653)<sp/>we<sp/>only<sp/>call</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`setBlocking(true)`<sp/>once<sp/>we<sp/>already<sp/>know<sp/>we<sp/>are<sp/>about<sp/>to<sp/>call<sp/>`process.exit(code)`.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>this<sp/>patch<sp/>will<sp/>not<sp/>apply<sp/>to<sp/>subprocesses<sp/>spawned<sp/>with<sp/>`isTTY<sp/>=<sp/>true`,<sp/>this<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>the<sp/>[default<sp/>`spawn()`<sp/>behavior](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">ISC</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/set-blocking/README.md"/>
  </compounddef>
</doxygen>
