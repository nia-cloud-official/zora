<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="class_napi_1_1_maybe" kind="class" language="C++" prot="public">
    <compoundname>Napi::Maybe</compoundname>
    <includes refid="napi_8h" local="no">napi.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_napi_1_1_maybe_1a3a135657fc3dd14968892b0a3ab1c2bf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Napi::Maybe&lt; T &gt;::_has_value</definition>
        <argsstring></argsstring>
        <name>_has_value</name>
        <qualifiedname>Napi::Maybe::_has_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="259" column="8" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_napi_1_1_maybe_1a53ee63f4f7dcf1d370d2f481cf132c87" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T Napi::Maybe&lt; T &gt;::_value</definition>
        <argsstring></argsstring>
        <name>_value</name>
        <qualifiedname>Napi::Maybe::_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="260" column="5" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="260" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_napi_1_1_maybe_1ae8c28c3a3485493382c37ddd77be3ae9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Napi::Maybe&lt; T &gt;::IsNothing</definition>
        <argsstring>() const</argsstring>
        <name>IsNothing</name>
        <qualifiedname>Napi::Maybe::IsNothing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="231" column="8" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="387" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_maybe_1afad0aceef6dbf831e1a32cd8f58ff72b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Napi::Maybe&lt; T &gt;::IsJust</definition>
        <argsstring>() const</argsstring>
        <name>IsJust</name>
        <qualifiedname>Napi::Maybe::IsJust</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="232" column="8" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="392" bodyend="394"/>
        <referencedby refid="class_napi_1_1_maybe_1a566b4782c63d33f31f6fab5eb71841f7" compoundref="napi-inl_8h" startline="422" endline="425">Napi::Maybe&lt; T &gt;::operator==</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_maybe_1ab599fe87d543ba7f512b7361f5f1b27b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Napi::Maybe&lt; T &gt;::Check</definition>
        <argsstring>() const</argsstring>
        <name>Check</name>
        <qualifiedname>Napi::Maybe::Check</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Short-hand for <ref refid="class_napi_1_1_maybe_1aa5bac165b94e9d8eff5ddfd37e844858" kindref="member">Unwrap()</ref>, which doesn&apos;t return a value. Could be used where the actual value of the <ref refid="class_napi_1_1_maybe" kindref="compound">Maybe</ref> is not needed like <ref refid="class_napi_1_1_object_1ab58533f930d4f81b41cc5ef6e96ce589" kindref="member">Object::Set</ref>. If this <ref refid="class_napi_1_1_maybe" kindref="compound">Maybe</ref> is nothing (empty), node-addon-api will crash the process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="238" column="8" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="397" bodyend="399"/>
        <references refid="napi_8h_1aaea8a598a09ab908a305b8db312ba3c7" compoundref="napi_8h" startline="138" endline="143">NAPI_CHECK</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_maybe_1aa5bac165b94e9d8eff5ddfd37e844858" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T Napi::Maybe&lt; T &gt;::Unwrap</definition>
        <argsstring>() const</argsstring>
        <name>Unwrap</name>
        <qualifiedname>Napi::Maybe::Unwrap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the value of type T contained in the <ref refid="class_napi_1_1_maybe" kindref="compound">Maybe</ref>. If this <ref refid="class_napi_1_1_maybe" kindref="compound">Maybe</ref> is nothing (empty), node-addon-api will crash the process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="242" column="5" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="402" bodyend="405"/>
        <references refid="napi_8h_1aaea8a598a09ab908a305b8db312ba3c7" compoundref="napi_8h" startline="138" endline="143">NAPI_CHECK</references>
        <referencedby refid="class_napi_1_1_maybe_1a566b4782c63d33f31f6fab5eb71841f7" compoundref="napi-inl_8h" startline="422" endline="425">Napi::Maybe&lt; T &gt;::operator==</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_maybe_1ac3fc1e5db839b82eb2965fcf91784254" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T Napi::Maybe&lt; T &gt;::UnwrapOr</definition>
        <argsstring>(const T &amp;default_value) const</argsstring>
        <name>UnwrapOr</name>
        <qualifiedname>Napi::Maybe::UnwrapOr</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the value of type T contained in the <ref refid="class_napi_1_1_maybe" kindref="compound">Maybe</ref>, or using a default value if this <ref refid="class_napi_1_1_maybe" kindref="compound">Maybe</ref> is nothing (empty). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="246" column="5" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="408" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_maybe_1ad2bda066322fd13cc2e877f3a2172b79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Napi::Maybe&lt; T &gt;::UnwrapTo</definition>
        <argsstring>(T *out) const</argsstring>
        <name>UnwrapTo</name>
        <qualifiedname>Napi::Maybe::UnwrapTo</qualifiedname>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts this <ref refid="class_napi_1_1_maybe" kindref="compound">Maybe</ref> to a value of type T in the out. If this <ref refid="class_napi_1_1_maybe" kindref="compound">Maybe</ref> is nothing (empty), <computeroutput>false</computeroutput> is returned and <computeroutput>out</computeroutput> is left untouched. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="250" column="8" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="413" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_maybe_1a566b4782c63d33f31f6fab5eb71841f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Napi::Maybe&lt; T &gt;::operator==</definition>
        <argsstring>(const Maybe &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>Napi::Maybe::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_napi_1_1_maybe" kindref="compound">Maybe</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="252" column="8" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="422" bodyend="425"/>
        <references refid="class_napi_1_1_maybe_1afad0aceef6dbf831e1a32cd8f58ff72b" compoundref="napi-inl_8h" startline="392" endline="394">Napi::Maybe&lt; T &gt;::IsJust</references>
        <references refid="class_napi_1_1_maybe_1aa5bac165b94e9d8eff5ddfd37e844858" compoundref="napi-inl_8h" startline="402" endline="405">Napi::Maybe&lt; T &gt;::Unwrap</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_maybe_1ae34754b1e3af0b86bbfcbb9d22c57e60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Napi::Maybe&lt; T &gt;::operator!=</definition>
        <argsstring>(const Maybe &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>Napi::Maybe::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="class_napi_1_1_maybe" kindref="compound">Maybe</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="253" column="8" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="428" bodyend="430"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_napi_1_1_maybe_1afe046012c146898842e44b0b7950cd2f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Napi::Maybe&lt; T &gt;::Maybe</definition>
        <argsstring>()</argsstring>
        <name>Maybe</name>
        <qualifiedname>Napi::Maybe::Maybe</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="256" column="3" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="433" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_maybe_1a53d388770266866e9e11e2cb2f981047" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Napi::Maybe&lt; T &gt;::Maybe</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>Maybe</name>
        <qualifiedname>Napi::Maybe::Maybe</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="257" column="12" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="436" bodyend="436"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_napi_1_1_maybe_1a036c86a2c612f9aa315df165e04bbfee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_napi_1_1_maybe" kindref="compound">Maybe</ref>&lt; U &gt;</type>
        <definition>Maybe&lt; U &gt; Nothing</definition>
        <argsstring>()</argsstring>
        <name>Nothing</name>
        <qualifiedname>Napi::Maybe::Nothing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="263" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="439" bodyend="441"/>
      </memberdef>
      <memberdef kind="friend" id="class_napi_1_1_maybe_1ac51cf8b5507d2bc9714151958c619480" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_napi_1_1_maybe" kindref="compound">Maybe</ref>&lt; U &gt;</type>
        <definition>Maybe&lt; U &gt; Just</definition>
        <argsstring>(const U &amp;u)</argsstring>
        <name>Just</name>
        <qualifiedname>Napi::Maybe::Just</qualifiedname>
        <param>
          <type>const U &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="265" column="16"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A simple <ref refid="class_napi_1_1_maybe" kindref="compound">Maybe</ref> type, representing an object which may or may not have a value.</para>
<para>If an API method returns a Maybe&lt;&gt;, the API method can potentially fail either because an exception is thrown, or because an exception is pending, e.g. because a previous API call threw an exception that hasn&apos;t been caught yet. In that case, a &quot;Nothing&quot; value is returned. </para>
    </detaileddescription>
    <location file="backend/node_modules/node-addon-api/napi.h" line="229" column="1" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="229" bodyend="266"/>
    <listofallmembers>
      <member refid="class_napi_1_1_maybe_1a3a135657fc3dd14968892b0a3ab1c2bf" prot="private" virt="non-virtual"><scope>Napi::Maybe</scope><name>_has_value</name></member>
      <member refid="class_napi_1_1_maybe_1a53ee63f4f7dcf1d370d2f481cf132c87" prot="private" virt="non-virtual"><scope>Napi::Maybe</scope><name>_value</name></member>
      <member refid="class_napi_1_1_maybe_1ab599fe87d543ba7f512b7361f5f1b27b" prot="public" virt="non-virtual"><scope>Napi::Maybe</scope><name>Check</name></member>
      <member refid="class_napi_1_1_maybe_1afad0aceef6dbf831e1a32cd8f58ff72b" prot="public" virt="non-virtual"><scope>Napi::Maybe</scope><name>IsJust</name></member>
      <member refid="class_napi_1_1_maybe_1ae8c28c3a3485493382c37ddd77be3ae9" prot="public" virt="non-virtual"><scope>Napi::Maybe</scope><name>IsNothing</name></member>
      <member refid="class_napi_1_1_maybe_1ac51cf8b5507d2bc9714151958c619480" prot="private" virt="non-virtual"><scope>Napi::Maybe</scope><name>Just</name></member>
      <member refid="class_napi_1_1_maybe_1afe046012c146898842e44b0b7950cd2f" prot="private" virt="non-virtual"><scope>Napi::Maybe</scope><name>Maybe</name></member>
      <member refid="class_napi_1_1_maybe_1a53d388770266866e9e11e2cb2f981047" prot="private" virt="non-virtual"><scope>Napi::Maybe</scope><name>Maybe</name></member>
      <member refid="class_napi_1_1_maybe_1a036c86a2c612f9aa315df165e04bbfee" prot="private" virt="non-virtual"><scope>Napi::Maybe</scope><name>Nothing</name></member>
      <member refid="class_napi_1_1_maybe_1ae34754b1e3af0b86bbfcbb9d22c57e60" prot="public" virt="non-virtual"><scope>Napi::Maybe</scope><name>operator!=</name></member>
      <member refid="class_napi_1_1_maybe_1a566b4782c63d33f31f6fab5eb71841f7" prot="public" virt="non-virtual"><scope>Napi::Maybe</scope><name>operator==</name></member>
      <member refid="class_napi_1_1_maybe_1aa5bac165b94e9d8eff5ddfd37e844858" prot="public" virt="non-virtual"><scope>Napi::Maybe</scope><name>Unwrap</name></member>
      <member refid="class_napi_1_1_maybe_1ac3fc1e5db839b82eb2965fcf91784254" prot="public" virt="non-virtual"><scope>Napi::Maybe</scope><name>UnwrapOr</name></member>
      <member refid="class_napi_1_1_maybe_1ad2bda066322fd13cc2e877f3a2172b79" prot="public" virt="non-virtual"><scope>Napi::Maybe</scope><name>UnwrapTo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
