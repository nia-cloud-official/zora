<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="class_napi_1_1_object" kind="class" language="C++" prot="public">
    <compoundname>Napi::Object</compoundname>
    <basecompoundref refid="class_napi_1_1_type_taggable" prot="public" virt="non-virtual">Napi::TypeTaggable</basecompoundref>
    <derivedcompoundref refid="class_napi_1_1_array" prot="public" virt="non-virtual">Napi::Array</derivedcompoundref>
    <derivedcompoundref refid="class_napi_1_1_array_buffer" prot="public" virt="non-virtual">Napi::ArrayBuffer</derivedcompoundref>
    <derivedcompoundref refid="class_napi_1_1_data_view" prot="public" virt="non-virtual">Napi::DataView</derivedcompoundref>
    <derivedcompoundref refid="class_napi_1_1_function" prot="public" virt="non-virtual">Napi::Function</derivedcompoundref>
    <derivedcompoundref refid="class_napi_1_1_promise" prot="public" virt="non-virtual">Napi::Promise</derivedcompoundref>
    <derivedcompoundref refid="class_napi_1_1_typed_array" prot="public" virt="non-virtual">Napi::TypedArray</derivedcompoundref>
    <includes refid="napi_8h" local="no">napi.h</includes>
    <innerclass refid="class_napi_1_1_object_1_1_property_l_value" prot="public">Napi::Object::PropertyLValue</innerclass>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_napi_1_1_object_1aa92b5f3a7c5b1735312133993d6d1a9b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_object" kindref="compound">Object</ref></type>
        <definition>Object Napi::Object::New</definition>
        <argsstring>(napi_env env)</argsstring>
        <name>New</name>
        <qualifiedname>Napi::Object::New</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
          <briefdescription><para>Node-API environment </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="class_napi_1_1_object" kindref="compound">Object</ref> value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="788" column="17" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1393" bodyend="1398"/>
        <references refid="napi_8h_1a2cdee1e97eb430de17e8839fbcf3db97" compoundref="napi_8h" startline="101" endline="105">NAPI_THROW_IF_FAILED</references>
        <references refid="class_napi_1_1_object_1af8444323ad4b377c2a688550b74183e7" compoundref="napi-inl_8h" startline="1410" endline="1410">Object</references>
        <referencedby refid="classnode__sqlite3_1_1_statement_1a8c164d1a5ab4c2c3bb38f0ccaecba9f9" compoundref="statement_8cc" startline="790" endline="823">node_sqlite3::Statement::RowToJS</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a60ca08105a232e615be0bc0712f685e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Napi::Object::CheckCast</definition>
        <argsstring>(napi_env env, napi_value value)</argsstring>
        <name>CheckCast</name>
        <qualifiedname>Napi::Object::CheckCast</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <param>
          <type>napi_value</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="791" column="15" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1400" bodyend="1408"/>
        <references refid="napi_8h_1aaea8a598a09ab908a305b8db312ba3c7" compoundref="napi_8h" startline="138" endline="143">NAPI_CHECK</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_napi_1_1_object_1af8444323ad4b377c2a688550b74183e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Napi::Object::Object</definition>
        <argsstring>()</argsstring>
        <name>Object</name>
        <qualifiedname>Napi::Object::Object</qualifiedname>
        <briefdescription>
<para>Creates a new <emphasis>empty</emphasis> <ref refid="class_napi_1_1_object" kindref="compound">Object</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="793" column="3" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1410" bodyend="1410"/>
        <referencedby refid="class_napi_1_1_object_1aa92b5f3a7c5b1735312133993d6d1a9b" compoundref="napi-inl_8h" startline="1393" endline="1398">New</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1ace3f659ef30b9c9190ef27c7a9120f0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Napi::Object::Object</definition>
        <argsstring>(napi_env env, napi_value value)</argsstring>
        <name>Object</name>
        <qualifiedname>Napi::Object::Object</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <param>
          <type>napi_value</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Wraps a Node-API value primitive. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="794" column="3" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1412" bodyend="1413"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a68612987b8af3cb4cfccefaa0a9008e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_object_1_1_property_l_value" kindref="compound">PropertyLValue</ref>&lt; std::string &gt;</type>
        <definition>Object::PropertyLValue&lt; std::string &gt; Napi::Object::operator[]</definition>
        <argsstring>(const char *utf8name)</argsstring>
        <name>operator[]</name>
        <qualifiedname>Napi::Object::operator[]</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded null-terminated property name </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Gets or sets a named property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="798" column="18" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1415" bodyend="1418"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a4f4cb7d34cb4f27df97cf94cbdec82ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_object_1_1_property_l_value" kindref="compound">PropertyLValue</ref>&lt; std::string &gt;</type>
        <definition>Object::PropertyLValue&lt; std::string &gt; Napi::Object::operator[]</definition>
        <argsstring>(const std::string &amp;utf8name)</argsstring>
        <name>operator[]</name>
        <qualifiedname>Napi::Object::operator[]</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded property name </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Gets or sets a named property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="803" column="18" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1420" bodyend="1423"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1ac62d5e927cd956db62a3a2ae02f9027e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_object_1_1_property_l_value" kindref="compound">PropertyLValue</ref>&lt; uint32_t &gt;</type>
        <definition>Object::PropertyLValue&lt; uint32_t &gt; Napi::Object::operator[]</definition>
        <argsstring>(uint32_t index)</argsstring>
        <name>operator[]</name>
        <qualifiedname>Napi::Object::operator[]</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
          <briefdescription><para>Property / element index </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Gets or sets an indexed property or array element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="808" column="18" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1425" bodyend="1427"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a71b77f7a5b240418152c221b2d25c4d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_object_1_1_property_l_value" kindref="compound">PropertyLValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Value</ref> &gt;</type>
        <definition>Object::PropertyLValue&lt; Value &gt; Napi::Object::operator[]</definition>
        <argsstring>(Value index) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>Napi::Object::operator[]</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_value" kindref="compound">Value</ref></type>
          <declname>index</declname>
          <briefdescription><para>Property / element index </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Gets or sets an indexed property or array element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="813" column="18" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1429" bodyend="1431"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1ac6ccd3223f779e71ec8dafbe869c8fae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Value &gt; Napi::Object::operator[]</definition>
        <argsstring>(const char *utf8name) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>Napi::Object::operator[]</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded null-terminated property name </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Gets a named property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="817" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1433" bodyend="1435"/>
        <references refid="class_napi_1_1_object_1a4cc2ecc864b3e98b3b1f13393a7cdfdf" compoundref="napi-inl_8h" startline="1493" endline="1497">Get</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a27059bba309fa739a3380598b0a3fc63" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Value &gt; Napi::Object::operator[]</definition>
        <argsstring>(const std::string &amp;utf8name) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>Napi::Object::operator[]</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded property name </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Gets a named property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="822" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1437" bodyend="1440"/>
        <references refid="class_napi_1_1_object_1a4cc2ecc864b3e98b3b1f13393a7cdfdf" compoundref="napi-inl_8h" startline="1493" endline="1497">Get</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1acc08da53db6ab928b7fc425a03183af6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Value &gt; Napi::Object::operator[]</definition>
        <argsstring>(uint32_t index) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>Napi::Object::operator[]</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
          <briefdescription><para>Property / element index </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Gets an indexed property or array element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="827" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1442" bodyend="1444"/>
        <references refid="class_napi_1_1_object_1a4cc2ecc864b3e98b3b1f13393a7cdfdf" compoundref="napi-inl_8h" startline="1493" endline="1497">Get</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1aca149fd5a08e45d808d4f1b9aa601db6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Has</definition>
        <argsstring>(napi_value key) const</argsstring>
        <name>Has</name>
        <qualifiedname>Napi::Object::Has</qualifiedname>
        <param>
          <type>napi_value</type>
          <declname>key</declname>
          <briefdescription><para>Property key primitive </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Checks whether a property is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="831" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1446" bodyend="1450"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
        <referencedby refid="class_napi_1_1_object_1ae30f9a3ebb40a7c09291a37dd07a8382" compoundref="napi-inl_8h" startline="1464" endline="1466">Has</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a238c7bd48c9ec91edaa6d2619f93fdfb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Has</definition>
        <argsstring>(Value key) const</argsstring>
        <name>Has</name>
        <qualifiedname>Napi::Object::Has</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_value" kindref="compound">Value</ref></type>
          <declname>key</declname>
          <briefdescription><para>Property key </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Checks whether a property is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="835" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1452" bodyend="1456"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a6c17c546d24f828fbffe2b254f3a841f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Has</definition>
        <argsstring>(const char *utf8name) const</argsstring>
        <name>Has</name>
        <qualifiedname>Napi::Object::Has</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded null-terminated property name </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Checks whether a named property is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="839" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1458" bodyend="1462"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1ae30f9a3ebb40a7c09291a37dd07a8382" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Has</definition>
        <argsstring>(const std::string &amp;utf8name) const</argsstring>
        <name>Has</name>
        <qualifiedname>Napi::Object::Has</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded property name </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Checks whether a named property is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="844" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1464" bodyend="1466"/>
        <references refid="class_napi_1_1_object_1aca149fd5a08e45d808d4f1b9aa601db6" compoundref="napi-inl_8h" startline="1446" endline="1450">Has</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1acb6fca4db4b1b5c0a4aa9753116d713d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::HasOwnProperty</definition>
        <argsstring>(napi_value key) const</argsstring>
        <name>HasOwnProperty</name>
        <qualifiedname>Napi::Object::HasOwnProperty</qualifiedname>
        <param>
          <type>napi_value</type>
          <declname>key</declname>
          <briefdescription><para>Property key primitive </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Checks whether a own property is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="849" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1468" bodyend="1472"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
        <referencedby refid="class_napi_1_1_object_1af96f872e8681f8820c436d1b24953ed5" compoundref="napi-inl_8h" startline="1480" endline="1486">HasOwnProperty</referencedby>
        <referencedby refid="class_napi_1_1_object_1aab3d54565a03a5244fe18b2ebfafb28a" compoundref="napi-inl_8h" startline="1488" endline="1491">HasOwnProperty</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a6810658d153befc05e6c23850586be16" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::HasOwnProperty</definition>
        <argsstring>(Value key) const</argsstring>
        <name>HasOwnProperty</name>
        <qualifiedname>Napi::Object::HasOwnProperty</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_value" kindref="compound">Value</ref></type>
          <declname>key</declname>
          <briefdescription><para>Property key </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Checks whether a own property is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="853" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1474" bodyend="1478"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1af96f872e8681f8820c436d1b24953ed5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::HasOwnProperty</definition>
        <argsstring>(const char *utf8name) const</argsstring>
        <name>HasOwnProperty</name>
        <qualifiedname>Napi::Object::HasOwnProperty</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded null-terminated property name </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Checks whether a own property is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="857" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1480" bodyend="1486"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_object_1acb6fca4db4b1b5c0a4aa9753116d713d" compoundref="napi-inl_8h" startline="1468" endline="1472">HasOwnProperty</references>
        <references refid="napi_8h_1a0dd92f0860426c7dd0e3ae144c59397e" compoundref="napi_8h" startline="123" endline="124">NAPI_MAYBE_THROW_IF_FAILED</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1aab3d54565a03a5244fe18b2ebfafb28a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::HasOwnProperty</definition>
        <argsstring>(const std::string &amp;utf8name) const</argsstring>
        <name>HasOwnProperty</name>
        <qualifiedname>Napi::Object::HasOwnProperty</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded property name </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Checks whether a own property is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="862" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1488" bodyend="1491"/>
        <references refid="class_napi_1_1_object_1acb6fca4db4b1b5c0a4aa9753116d713d" compoundref="napi-inl_8h" startline="1468" endline="1472">HasOwnProperty</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a4cc2ecc864b3e98b3b1f13393a7cdfdf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Value &gt; Napi::Object::Get</definition>
        <argsstring>(napi_value key) const</argsstring>
        <name>Get</name>
        <qualifiedname>Napi::Object::Get</qualifiedname>
        <param>
          <type>napi_value</type>
          <declname>key</declname>
          <briefdescription><para>Property key primitive </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Gets a property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="867" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1493" bodyend="1497"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
        <references refid="class_napi_1_1_value_1a91352891b563fb744683240949e458e4" compoundref="napi-inl_8h" startline="591" endline="591">Napi::Value::Value</references>
        <referencedby refid="class_napi_1_1_symbol_1a6c9932d805e01598a90e83d7916405fa" compoundref="napi-inl_8h" startline="1206" endline="1226">Napi::Symbol::For</referencedby>
        <referencedby refid="class_napi_1_1_object_1ad9cc6c50537a40bfd775cca0c1b4aeb9" compoundref="napi-inl_8h" startline="1511" endline="1513">Get</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1a774cf64f19ae5ddf2ab24efa1927eeea" compoundref="napi-inl_8h" startline="3373" endline="3388">Napi::ObjectReference::Get</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1adec6b3ead540701f0da36bc623a029d1" compoundref="napi-inl_8h" startline="3390" endline="3405">Napi::ObjectReference::Get</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1aae16888931b5cda98e16dbaa0bf5a297" compoundref="napi-inl_8h" startline="3467" endline="3481">Napi::ObjectReference::Get</referencedby>
        <referencedby refid="class_napi_1_1_object_1_1_property_l_value_1a8a9c826009a0894e5d76cc9982fbff47" compoundref="napi-inl_8h" startline="1366" endline="1373">Napi::Object::PropertyLValue&lt; Key &gt;::operator Value</referencedby>
        <referencedby refid="class_napi_1_1_object_1ac6ccd3223f779e71ec8dafbe869c8fae" compoundref="napi-inl_8h" startline="1433" endline="1435">operator[]</referencedby>
        <referencedby refid="class_napi_1_1_object_1a27059bba309fa739a3380598b0a3fc63" compoundref="napi-inl_8h" startline="1437" endline="1440">operator[]</referencedby>
        <referencedby refid="class_napi_1_1_object_1acc08da53db6ab928b7fc425a03183af6" compoundref="napi-inl_8h" startline="1442" endline="1444">operator[]</referencedby>
        <referencedby refid="statement_8cc_1a4ee960416c1771c8ab6436efc1fbdf8d" compoundref="statement_8cc" startline="32" endline="40">OtherInstanceOf</referencedby>
        <referencedby refid="class_napi_1_1_symbol_1ac12111d18302edf375b3f29cd5efb7af" compoundref="napi-inl_8h" startline="1171" endline="1189">Napi::Symbol::WellKnown</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a60d522cfdbc98ff5c07c0ee35aa3ed95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Value &gt; Napi::Object::Get</definition>
        <argsstring>(Value key) const</argsstring>
        <name>Get</name>
        <qualifiedname>Napi::Object::Get</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_value" kindref="compound">Value</ref></type>
          <declname>key</declname>
          <briefdescription><para>Property key </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Gets a property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="871" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1499" bodyend="1503"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
        <references refid="class_napi_1_1_value_1a91352891b563fb744683240949e458e4" compoundref="napi-inl_8h" startline="591" endline="591">Napi::Value::Value</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a09f94a94bb6e81f5dbbb8e79e6d44bfc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Value &gt; Napi::Object::Get</definition>
        <argsstring>(const char *utf8name) const</argsstring>
        <name>Get</name>
        <qualifiedname>Napi::Object::Get</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded null-terminated property name </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Gets a named property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="875" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1505" bodyend="1509"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
        <references refid="class_napi_1_1_value_1a91352891b563fb744683240949e458e4" compoundref="napi-inl_8h" startline="591" endline="591">Napi::Value::Value</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1ad9cc6c50537a40bfd775cca0c1b4aeb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Value &gt; Napi::Object::Get</definition>
        <argsstring>(const std::string &amp;utf8name) const</argsstring>
        <name>Get</name>
        <qualifiedname>Napi::Object::Get</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded property name </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Gets a named property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="880" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1511" bodyend="1513"/>
        <references refid="class_napi_1_1_object_1a4cc2ecc864b3e98b3b1f13393a7cdfdf" compoundref="napi-inl_8h" startline="1493" endline="1497">Get</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1ab58533f930d4f81b41cc5ef6e96ce589" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Set</definition>
        <argsstring>(napi_value key, const ValueType &amp;value) const</argsstring>
        <name>Set</name>
        <qualifiedname>Napi::Object::Set</qualifiedname>
        <param>
          <type>napi_value</type>
          <declname>key</declname>
          <briefdescription><para>Property key primitive </para>
</briefdescription>
        </param>
        <param>
          <type>const ValueType &amp;</type>
          <declname>value</declname>
          <briefdescription><para>Property value primitive </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Sets a property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="886" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1516" bodyend="1521"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="class_napi_1_1_value_1a0ee78f70cade37fb28fef3087ef7e9e2" compoundref="napi-inl_8h" startline="1306" endline="1314">Napi::Value::From</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
        <referencedby refid="classnode__sqlite3_1_1_backup_1ae511b656411586039109b41428e3b4f1" compoundref="backup_8cc" startline="9" endline="28">node_sqlite3::Backup::Init</referencedby>
        <referencedby refid="classnode__sqlite3_1_1_database_1a74347e00418fa1cfcb9e18c694c7a612" compoundref="database_8cc" startline="14" endline="42">node_sqlite3::Database::Init</referencedby>
        <referencedby refid="classnode__sqlite3_1_1_statement_1a167e7038d13728bab030a8206472b6ec" compoundref="statement_8cc" startline="11" endline="29">node_sqlite3::Statement::Init</referencedby>
        <referencedby refid="class_napi_1_1_object_1_1_property_l_value_1a74587061ec3166eb11d1ed62f785b397" compoundref="napi-inl_8h" startline="1377" endline="1387">Napi::Object::PropertyLValue&lt; Key &gt;::operator=</referencedby>
        <referencedby refid="class_napi_1_1_object_1a885385e0218eb794a99c5b17e8f97a84" compoundref="napi-inl_8h" startline="1539" endline="1542">Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1a89d4afd9c5125f26e53ffa7c970ef332" compoundref="napi-inl_8h" startline="3425" endline="3429">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1ad1e5e51d5d0b71b45c06840a5769bc28" compoundref="napi-inl_8h" startline="3419" endline="3423">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1ad465288b9f8c339b8a727316b1c681b5" compoundref="napi-inl_8h" startline="3431" endline="3435">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1a854eba79a27c2a65aa4e5745638531f3" compoundref="napi-inl_8h" startline="3413" endline="3417">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1a86673a0cabfd296f2de71ee69abc9da0" compoundref="napi-inl_8h" startline="3407" endline="3411">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1a8e17845828f22f047e82678e169f37f3" compoundref="napi-inl_8h" startline="3455" endline="3459">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1a51e606959f75d695cf5e25446b6ed455" compoundref="napi-inl_8h" startline="3461" endline="3465">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1a19a4dcaaf1adca6385504f021b245606" compoundref="napi-inl_8h" startline="3443" endline="3447">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1a8d51967a6fef82715e789f3f12885454" compoundref="napi-inl_8h" startline="3437" endline="3441">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1af64f86ebf97e343ad3f594ffc0f48065" compoundref="napi-inl_8h" startline="3449" endline="3453">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1af4930333162fab88d5df6cc9d3c7a5b5" compoundref="napi-inl_8h" startline="3507" endline="3511">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1ac327f005217d32a20a63976d8a3ae60d" compoundref="napi-inl_8h" startline="3495" endline="3499">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1a267c80385311be5c37eeba5fb6897164" compoundref="napi-inl_8h" startline="3489" endline="3493">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1a0330953f0b3c85b763c846612a83ce53" compoundref="napi-inl_8h" startline="3483" endline="3487">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1af5dc6f90a7140d5e4a4dc934fd5c36e2" compoundref="napi-inl_8h" startline="3501" endline="3505">Napi::ObjectReference::Set</referencedby>
        <referencedby refid="class_napi_1_1_object_reference_1ad0403e12ced07d73946f3dca09945896" compoundref="napi-inl_8h" startline="3513" endline="3517">Napi::ObjectReference::Set</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1afc89bac675d67898019bb5aaaa5eb8d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Set</definition>
        <argsstring>(Value key, const ValueType &amp;value) const</argsstring>
        <name>Set</name>
        <qualifiedname>Napi::Object::Set</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_value" kindref="compound">Value</ref></type>
          <declname>key</declname>
          <briefdescription><para>Property key </para>
</briefdescription>
        </param>
        <param>
          <type>const ValueType &amp;</type>
          <declname>value</declname>
          <briefdescription><para>Property value </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Sets a property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="892" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1524" bodyend="1528"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="class_napi_1_1_value_1a0ee78f70cade37fb28fef3087ef7e9e2" compoundref="napi-inl_8h" startline="1306" endline="1314">Napi::Value::From</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1afcf86509ee25187bbbfb6912ea3d640e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Set</definition>
        <argsstring>(const char *utf8name, const ValueType &amp;value) const</argsstring>
        <name>Set</name>
        <qualifiedname>Napi::Object::Set</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded null-terminated property name </para>
</briefdescription>
        </param>
        <param>
          <type>const ValueType &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets a named property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="898" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1531" bodyend="1536"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="class_napi_1_1_value_1a0ee78f70cade37fb28fef3087ef7e9e2" compoundref="napi-inl_8h" startline="1306" endline="1314">Napi::Value::From</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a885385e0218eb794a99c5b17e8f97a84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Set</definition>
        <argsstring>(const std::string &amp;utf8name, const ValueType &amp;value) const</argsstring>
        <name>Set</name>
        <qualifiedname>Napi::Object::Set</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded property name </para>
</briefdescription>
        </param>
        <param>
          <type>const ValueType &amp;</type>
          <declname>value</declname>
          <briefdescription><para>Property value primitive </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Sets a named property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="904" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1539" bodyend="1542"/>
        <references refid="class_napi_1_1_object_1ab58533f930d4f81b41cc5ef6e96ce589" compoundref="napi-inl_8h" startline="1516" endline="1521">Set</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a3fd87a38e51b7a1272857bd341055e8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Delete</definition>
        <argsstring>(napi_value key) const</argsstring>
        <name>Delete</name>
        <qualifiedname>Napi::Object::Delete</qualifiedname>
        <param>
          <type>napi_value</type>
          <declname>key</declname>
          <briefdescription><para>Property key primitive </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Delete property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="910" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1544" bodyend="1548"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1ab1950c87068d8fd676af7f35fdb9bdd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Delete</definition>
        <argsstring>(Value key) const</argsstring>
        <name>Delete</name>
        <qualifiedname>Napi::Object::Delete</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_value" kindref="compound">Value</ref></type>
          <declname>key</declname>
          <briefdescription><para>Property key </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Delete property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="914" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1550" bodyend="1554"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a1afd500e6d9d17fc7008726b2e95ad8e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Delete</definition>
        <argsstring>(const char *utf8name) const</argsstring>
        <name>Delete</name>
        <qualifiedname>Napi::Object::Delete</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded null-terminated property name </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Delete property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="918" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1556" bodyend="1558"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1acddd6a70cd99b3702cf2f157c20539da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Delete</definition>
        <argsstring>(const std::string &amp;utf8name) const</argsstring>
        <name>Delete</name>
        <qualifiedname>Napi::Object::Delete</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>utf8name</declname>
          <briefdescription><para>UTF-8 encoded property name </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Delete property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="923" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1560" bodyend="1562"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a8ede0e021c4eddaf457efc7dd0673bba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Has</definition>
        <argsstring>(uint32_t index) const</argsstring>
        <name>Has</name>
        <qualifiedname>Napi::Object::Has</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
          <briefdescription><para>Property / element index </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Checks whether an indexed property is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="928" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1564" bodyend="1568"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a5dd0e551211dade3d99491d49f8ce328" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Value &gt; Napi::Object::Get</definition>
        <argsstring>(uint32_t index) const</argsstring>
        <name>Get</name>
        <qualifiedname>Napi::Object::Get</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
          <briefdescription><para>Property / element index </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Gets an indexed property or array element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="932" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1570" bodyend="1574"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1ab498f307eeebdd432aba6addea51b60a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Set</definition>
        <argsstring>(uint32_t index, const ValueType &amp;value) const</argsstring>
        <name>Set</name>
        <qualifiedname>Napi::Object::Set</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
          <briefdescription><para>Property / element index </para>
</briefdescription>
        </param>
        <param>
          <type>const ValueType &amp;</type>
          <declname>value</declname>
          <briefdescription><para>Property value primitive </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Sets an indexed property or array element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="937" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1577" bodyend="1582"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="class_napi_1_1_value_1a0ee78f70cade37fb28fef3087ef7e9e2" compoundref="napi-inl_8h" startline="1306" endline="1314">Napi::Value::From</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1adde21c0ce2e606522036f2cb97fe0909" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::Delete</definition>
        <argsstring>(uint32_t index) const</argsstring>
        <name>Delete</name>
        <qualifiedname>Napi::Object::Delete</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
          <briefdescription><para>Property / element index </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Deletes an indexed property or array element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="942" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1584" bodyend="1588"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a1e8b87c148b5e4973c8a24dfca336531" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_array" kindref="compound">Array</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Array &gt; Napi::Object::GetPropertyNames</definition>
        <argsstring>() const</argsstring>
        <name>GetPropertyNames</name>
        <qualifiedname>Napi::Object::GetPropertyNames</qualifiedname>
        <briefdescription>
<para>Get all property names. </para>
        </briefdescription>
        <detaileddescription>
<para>This operation can fail in case of Proxy.[[OwnPropertyKeys]] and Proxy.[[GetOwnProperty]] calling into JavaScript. See:<itemizedlist>
<listitem><para><ulink url="https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys">https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys</ulink></para>
</listitem><listitem><para><ulink url="https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p">https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p</ulink> </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="951" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1590" bodyend="1594"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
        <referencedby refid="classnode__sqlite3_1_1_statement_1a3329249cd95736fe74f2ae1ff6e846ec" compoundref="statement_8cc" startline="223" endline="277">node_sqlite3::Statement::Bind</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a694fc12ffb1633dbec40d52705afda63" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::DefineProperty</definition>
        <argsstring>(const PropertyDescriptor &amp;property) const</argsstring>
        <name>DefineProperty</name>
        <qualifiedname>Napi::Object::DefineProperty</qualifiedname>
        <param>
          <type>const <ref refid="class_napi_1_1_property_descriptor" kindref="compound">PropertyDescriptor</ref> &amp;</type>
          <declname>property</declname>
          <briefdescription><para>Descriptor for the property to be defined </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines a property on the object.</para>
<para>This operation can fail in case of Proxy.[[DefineOwnProperty]] calling into JavaScript. See <ulink url="https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc">https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="958" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1596" bodyend="1604"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1af41a3d792550c5996833a058c2370ea3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::DefineProperties</definition>
        <argsstring>(const std::initializer_list&lt; PropertyDescriptor &gt; &amp;properties) const</argsstring>
        <name>DefineProperties</name>
        <qualifiedname>Napi::Object::DefineProperties</qualifiedname>
        <param>
          <type>const std::initializer_list&lt; <ref refid="class_napi_1_1_property_descriptor" kindref="compound">PropertyDescriptor</ref> &gt; &amp;</type>
          <declname>properties</declname>
          <briefdescription><para>List of descriptors for the properties to be defined </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines properties on the object.</para>
<para>This operation can fail in case of Proxy.[[DefineOwnProperty]] calling into JavaScript. See <ulink url="https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc">https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="968" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1606" bodyend="1614"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a4c45f53183f293db0ca01040c35822c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::DefineProperties</definition>
        <argsstring>(const std::vector&lt; PropertyDescriptor &gt; &amp;properties) const</argsstring>
        <name>DefineProperties</name>
        <qualifiedname>Napi::Object::DefineProperties</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="class_napi_1_1_property_descriptor" kindref="compound">PropertyDescriptor</ref> &gt; &amp;</type>
          <declname>properties</declname>
          <briefdescription><para>Vector of descriptors for the properties to be defined </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines properties on the object.</para>
<para>This operation can fail in case of Proxy.[[DefineOwnProperty]] calling into JavaScript. See <ulink url="https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc">https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="978" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1616" bodyend="1624"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a109697df6456b29ab46c8c9e381e5ecc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; bool &gt;</type>
        <definition>MaybeOrValue&lt; bool &gt; Napi::Object::InstanceOf</definition>
        <argsstring>(const Function &amp;constructor) const</argsstring>
        <name>InstanceOf</name>
        <qualifiedname>Napi::Object::InstanceOf</qualifiedname>
        <param>
          <type>const <ref refid="class_napi_1_1_function" kindref="compound">Function</ref> &amp;</type>
          <declname>constructor</declname>
          <briefdescription><para>Constructor function </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if an object is an instance created by a constructor function.</para>
<para>This is equivalent to the JavaScript <computeroutput>instanceof</computeroutput> operator.</para>
<para>This operation can fail in case of Proxy.[[GetPrototypeOf]] calling into JavaScript. See <ulink url="https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof">https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="991" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1626" bodyend="1631"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" compoundref="napi_8h" startline="488">Napi::Value::_value</references>
        <references refid="napi_8h_1a0aabefea1dc28209775a88dbf4c378e1" compoundref="napi_8h" startline="126" endline="128">NAPI_RETURN_OR_THROW_IF_FAILED</references>
        <referencedby refid="classnode__sqlite3_1_1_database_1ae0f3eaca6a75e3a7c4c7683a6e1d1da3" compoundref="backend_2node__modules_2sqlite3_2src_2database_8h" startline="29" endline="41">node_sqlite3::Database::HasInstance</referencedby>
        <referencedby refid="statement_8cc_1a4ee960416c1771c8ab6436efc1fbdf8d" compoundref="statement_8cc" startline="32" endline="40">OtherInstanceOf</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1a430311c4753ba8f939556d359a1d640b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Finalizer</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Napi::Object::AddFinalizer</definition>
        <argsstring>(Finalizer finalizeCallback, T *data) const</argsstring>
        <name>AddFinalizer</name>
        <qualifiedname>Napi::Object::AddFinalizer</qualifiedname>
        <param>
          <type>Finalizer</type>
          <declname>finalizeCallback</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="996" column="15" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1634" bodyend="1645"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="napi_8h_1ac36643b3916c3dd8c17ec9c4bebae860" compoundref="napi_8h" startline="107" endline="111">NAPI_THROW_IF_FAILED_VOID</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_object_1ad27279ba5567a9db06b043c97d5fed58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Finalizer</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Hint</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Napi::Object::AddFinalizer</definition>
        <argsstring>(Finalizer finalizeCallback, T *data, Hint *finalizeHint) const</argsstring>
        <name>AddFinalizer</name>
        <qualifiedname>Napi::Object::AddFinalizer</qualifiedname>
        <param>
          <type>Finalizer</type>
          <declname>finalizeCallback</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>Hint *</type>
          <declname>finalizeHint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="999" column="15" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="1648" bodyend="1661"/>
        <references refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" compoundref="napi_8h" startline="487">Napi::Value::_env</references>
        <references refid="napi_8h_1ac36643b3916c3dd8c17ec9c4bebae860" compoundref="napi_8h" startline="107" endline="111">NAPI_THROW_IF_FAILED_VOID</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A JavaScript object value. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>Napi::Array</label>
        <link refid="class_napi_1_1_array"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Napi::ArrayBuffer</label>
        <link refid="class_napi_1_1_array_buffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>Napi::Buffer&lt; T &gt;</label>
        <link refid="class_napi_1_1_buffer"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Napi::DataView</label>
        <link refid="class_napi_1_1_data_view"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Napi::Function</label>
        <link refid="class_napi_1_1_function"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Napi::Object</label>
        <link refid="class_napi_1_1_object"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Napi::Promise</label>
        <link refid="class_napi_1_1_promise"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Napi::TypeTaggable</label>
        <link refid="class_napi_1_1_type_taggable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>Napi::TypedArray</label>
        <link refid="class_napi_1_1_typed_array"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>Napi::TypedArrayOf&lt; T &gt;</label>
        <link refid="class_napi_1_1_typed_array_of"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Napi::Value</label>
        <link refid="class_napi_1_1_value"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Napi::Object</label>
        <link refid="class_napi_1_1_object"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Napi::TypeTaggable</label>
        <link refid="class_napi_1_1_type_taggable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Napi::Value</label>
        <link refid="class_napi_1_1_value"/>
      </node>
    </collaborationgraph>
    <location file="backend/node_modules/node-addon-api/napi.h" line="750" column="1" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="750" bodyend="1029"/>
    <listofallmembers>
      <member refid="class_napi_1_1_value_1ad0a0cc895c3134df3ca3267dbf2dfe08" prot="protected" virt="non-virtual"><scope>Napi::Object</scope><name>_env</name></member>
      <member refid="class_napi_1_1_value_1ae2060cfa039ca4c6abaff238fb00d1f8" prot="protected" virt="non-virtual"><scope>Napi::Object</scope><name>_value</name></member>
      <member refid="class_napi_1_1_object_1a430311c4753ba8f939556d359a1d640b" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>AddFinalizer</name></member>
      <member refid="class_napi_1_1_object_1ad27279ba5567a9db06b043c97d5fed58" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>AddFinalizer</name></member>
      <member refid="class_napi_1_1_value_1a9c1a9c4eca9617b0aafbe311c946982a" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>As</name></member>
      <member refid="class_napi_1_1_object_1a60ca08105a232e615be0bc0712f685e1" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>CheckCast</name></member>
      <member refid="class_napi_1_1_object_1af41a3d792550c5996833a058c2370ea3" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>DefineProperties</name></member>
      <member refid="class_napi_1_1_object_1a4c45f53183f293db0ca01040c35822c5" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>DefineProperties</name></member>
      <member refid="class_napi_1_1_object_1a694fc12ffb1633dbec40d52705afda63" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>DefineProperty</name></member>
      <member refid="class_napi_1_1_object_1a3fd87a38e51b7a1272857bd341055e8c" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Delete</name></member>
      <member refid="class_napi_1_1_object_1ab1950c87068d8fd676af7f35fdb9bdd8" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Delete</name></member>
      <member refid="class_napi_1_1_object_1a1afd500e6d9d17fc7008726b2e95ad8e" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Delete</name></member>
      <member refid="class_napi_1_1_object_1acddd6a70cd99b3702cf2f157c20539da" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Delete</name></member>
      <member refid="class_napi_1_1_object_1adde21c0ce2e606522036f2cb97fe0909" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Delete</name></member>
      <member refid="class_napi_1_1_value_1a1e1930afac70f2811a222c363d892a42" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Env</name></member>
      <member refid="class_napi_1_1_value_1a0ee78f70cade37fb28fef3087ef7e9e2" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>From</name></member>
      <member refid="class_napi_1_1_object_1a4cc2ecc864b3e98b3b1f13393a7cdfdf" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Get</name></member>
      <member refid="class_napi_1_1_object_1a60d522cfdbc98ff5c07c0ee35aa3ed95" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Get</name></member>
      <member refid="class_napi_1_1_object_1a09f94a94bb6e81f5dbbb8e79e6d44bfc" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Get</name></member>
      <member refid="class_napi_1_1_object_1ad9cc6c50537a40bfd775cca0c1b4aeb9" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Get</name></member>
      <member refid="class_napi_1_1_object_1a5dd0e551211dade3d99491d49f8ce328" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Get</name></member>
      <member refid="class_napi_1_1_object_1a1e8b87c148b5e4973c8a24dfca336531" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>GetPropertyNames</name></member>
      <member refid="class_napi_1_1_object_1aca149fd5a08e45d808d4f1b9aa601db6" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Has</name></member>
      <member refid="class_napi_1_1_object_1a238c7bd48c9ec91edaa6d2619f93fdfb" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Has</name></member>
      <member refid="class_napi_1_1_object_1a6c17c546d24f828fbffe2b254f3a841f" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Has</name></member>
      <member refid="class_napi_1_1_object_1ae30f9a3ebb40a7c09291a37dd07a8382" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Has</name></member>
      <member refid="class_napi_1_1_object_1a8ede0e021c4eddaf457efc7dd0673bba" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Has</name></member>
      <member refid="class_napi_1_1_object_1acb6fca4db4b1b5c0a4aa9753116d713d" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>HasOwnProperty</name></member>
      <member refid="class_napi_1_1_object_1a6810658d153befc05e6c23850586be16" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>HasOwnProperty</name></member>
      <member refid="class_napi_1_1_object_1af96f872e8681f8820c436d1b24953ed5" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>HasOwnProperty</name></member>
      <member refid="class_napi_1_1_object_1aab3d54565a03a5244fe18b2ebfafb28a" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>HasOwnProperty</name></member>
      <member refid="class_napi_1_1_object_1a109697df6456b29ab46c8c9e381e5ecc" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>InstanceOf</name></member>
      <member refid="class_napi_1_1_value_1a5611708b6e0aacddb688a8dba6dc028d" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsArray</name></member>
      <member refid="class_napi_1_1_value_1a9beba019f6caf6cd8a8fe1f7ef23a1f4" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsArrayBuffer</name></member>
      <member refid="class_napi_1_1_value_1ae876a79e6ac45840cb76fbdb5d5f0e71" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsBoolean</name></member>
      <member refid="class_napi_1_1_value_1a7ae7ce9bb0c81e08285aa36f810b3257" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsBuffer</name></member>
      <member refid="class_napi_1_1_value_1abf010c00f7c2e5d65f29740bf4483209" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsDataView</name></member>
      <member refid="class_napi_1_1_value_1a988bdb3e9806beb7761b4ea864461005" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsEmpty</name></member>
      <member refid="class_napi_1_1_value_1aedb256ac2a1e0c1aee11cc966579e81f" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsExternal</name></member>
      <member refid="class_napi_1_1_value_1ae8a76974575d2a58c7aa69e43b6bc70a" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsFunction</name></member>
      <member refid="class_napi_1_1_value_1adc11fc44a7ee5204535387369f1fa787" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsNull</name></member>
      <member refid="class_napi_1_1_value_1a55b70b6e71b4e3eb5eda4ef6da44fb61" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsNumber</name></member>
      <member refid="class_napi_1_1_value_1ae5bd652acc39256b28fe89e23720c164" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsObject</name></member>
      <member refid="class_napi_1_1_value_1ac4cdad6473b6d31a671a98318fa28e86" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsPromise</name></member>
      <member refid="class_napi_1_1_value_1a4f62ef1c00bdd6ec33ef6bc53bd40954" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsString</name></member>
      <member refid="class_napi_1_1_value_1aece440d4ba60f726044bf590a26f18e9" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsSymbol</name></member>
      <member refid="class_napi_1_1_value_1a23ebf28e327e5e67378efb06b0237e07" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsTypedArray</name></member>
      <member refid="class_napi_1_1_value_1ac67d471b3773d6458cb1587acb105882" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>IsUndefined</name></member>
      <member refid="class_napi_1_1_object_1aa92b5f3a7c5b1735312133993d6d1a9b" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>New</name></member>
      <member refid="class_napi_1_1_object_1af8444323ad4b377c2a688550b74183e7" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Object</name></member>
      <member refid="class_napi_1_1_object_1ace3f659ef30b9c9190ef27c7a9120f0f" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Object</name></member>
      <member refid="class_napi_1_1_value_1af19dbe71df9d7d29bd204935192a4d5f" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>operator napi_value</name></member>
      <member refid="class_napi_1_1_value_1a580263f743cb763cda7a0c0e45c49951" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>operator!=</name></member>
      <member refid="class_napi_1_1_value_1aeacac83e70476de242048d8ee6329fd0" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>operator==</name></member>
      <member refid="class_napi_1_1_object_1a68612987b8af3cb4cfccefaa0a9008e2" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>operator[]</name></member>
      <member refid="class_napi_1_1_object_1a4f4cb7d34cb4f27df97cf94cbdec82ae" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>operator[]</name></member>
      <member refid="class_napi_1_1_object_1ac62d5e927cd956db62a3a2ae02f9027e" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>operator[]</name></member>
      <member refid="class_napi_1_1_object_1a71b77f7a5b240418152c221b2d25c4d8" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>operator[]</name></member>
      <member refid="class_napi_1_1_object_1ac6ccd3223f779e71ec8dafbe869c8fae" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>operator[]</name></member>
      <member refid="class_napi_1_1_object_1a27059bba309fa739a3380598b0a3fc63" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>operator[]</name></member>
      <member refid="class_napi_1_1_object_1acc08da53db6ab928b7fc425a03183af6" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>operator[]</name></member>
      <member refid="class_napi_1_1_object_1ab58533f930d4f81b41cc5ef6e96ce589" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_1afc89bac675d67898019bb5aaaa5eb8d6" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_1afcf86509ee25187bbbfb6912ea3d640e" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_1a885385e0218eb794a99c5b17e8f97a84" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_1ab498f307eeebdd432aba6addea51b60a" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Set</name></member>
      <member refid="class_napi_1_1_value_1ada554f19e69df3becf95da7273b1a25a" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>StrictEquals</name></member>
      <member refid="class_napi_1_1_value_1a9c1fed3959cfccb6b5e3355ed2142b61" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>ToBoolean</name></member>
      <member refid="class_napi_1_1_value_1a531c0bf83f10b3abf11355cc440e1409" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>ToNumber</name></member>
      <member refid="class_napi_1_1_value_1a872d39e601d5a1b522e6f2935362e4dd" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>ToObject</name></member>
      <member refid="class_napi_1_1_value_1ae38ce41d7a0b7241975d0676e4fbb30b" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>ToString</name></member>
      <member refid="class_napi_1_1_value_1a5da2e4f1a5a6b237159c4cfbd0866281" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Type</name></member>
      <member refid="class_napi_1_1_type_taggable_1a458d376034851fa466614ead65d1161d" prot="protected" virt="non-virtual"><scope>Napi::Object</scope><name>TypeTaggable</name></member>
      <member refid="class_napi_1_1_type_taggable_1a9b87f81f810c09bd703e0af6ea3e2a3b" prot="protected" virt="non-virtual"><scope>Napi::Object</scope><name>TypeTaggable</name></member>
      <member refid="class_napi_1_1_value_1a91352891b563fb744683240949e458e4" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Value</name></member>
      <member refid="class_napi_1_1_value_1a0517f43046a9d6f33ec975ec12aa8641" prot="public" virt="non-virtual"><scope>Napi::Object</scope><name>Value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
