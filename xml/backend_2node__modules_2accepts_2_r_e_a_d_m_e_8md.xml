<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2accepts_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>accepts</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Version][npm-version-image]][npm-url]</highlight></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Downloads][npm-downloads-image]][npm-url]</highlight></codeline>
<codeline><highlight class="normal">[![Node.js<sp/>Version][node-version-image]][node-version-url]</highlight></codeline>
<codeline><highlight class="normal">[![Build<sp/>Status][github-actions-ci-image]][github-actions-ci-url]</highlight></codeline>
<codeline><highlight class="normal">[![Test<sp/>Coverage][coveralls-image]][coveralls-url]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Higher<sp/>level<sp/>content<sp/>negotiation<sp/>based<sp/>on<sp/>[negotiator](https://www.npmjs.com/package/negotiator).</highlight></codeline>
<codeline><highlight class="normal">Extracted<sp/>from<sp/>[koa](https://www.npmjs.com/package/koa)<sp/>for<sp/>general<sp/>use.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>addition<sp/>to<sp/>negotiator,<sp/>it<sp/>allows:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>Allows<sp/>types<sp/>as<sp/>an<sp/>array<sp/>or<sp/>arguments<sp/>list,<sp/>ie<sp/>`([&apos;text/html&apos;,<sp/>&apos;application/json&apos;])`</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>as<sp/>well<sp/>as<sp/>`(&apos;text/html&apos;,<sp/>&apos;application/json&apos;)`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Allows<sp/>type<sp/>shorthands<sp/>such<sp/>as<sp/>`json`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Returns<sp/>`false`<sp/>when<sp/>no<sp/>types<sp/>match</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Treats<sp/>non-existent<sp/>headers<sp/>as<sp/>`*`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Installation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>is<sp/>a<sp/>[Node.js](https://nodejs.org/en/)<sp/>module<sp/>available<sp/>through<sp/>the</highlight></codeline>
<codeline><highlight class="normal">[npm<sp/>registry](https://www.npmjs.com/).<sp/>Installation<sp/>is<sp/>done<sp/>using<sp/>the</highlight></codeline>
<codeline><highlight class="normal">[`npm<sp/>install`<sp/>command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">$<sp/>npm<sp/>install<sp/>accepts</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>accepts<sp/>=<sp/>require(&apos;accepts&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>accepts(req)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>a<sp/>new<sp/>`Accepts`<sp/>object<sp/>for<sp/>the<sp/>given<sp/>`req`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>.charset(charsets)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Return<sp/>the<sp/>first<sp/>accepted<sp/>charset.<sp/>If<sp/>nothing<sp/>in<sp/>`charsets`<sp/>is<sp/>accepted,</highlight></codeline>
<codeline><highlight class="normal">then<sp/>`false`<sp/>is<sp/>returned.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>.charsets()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Return<sp/>the<sp/>charsets<sp/>that<sp/>the<sp/>request<sp/>accepts,<sp/>in<sp/>the<sp/>order<sp/>of<sp/>the<sp/>client&apos;s</highlight></codeline>
<codeline><highlight class="normal">preference<sp/>(most<sp/>preferred<sp/>first).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>.encoding(encodings)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Return<sp/>the<sp/>first<sp/>accepted<sp/>encoding.<sp/>If<sp/>nothing<sp/>in<sp/>`encodings`<sp/>is<sp/>accepted,</highlight></codeline>
<codeline><highlight class="normal">then<sp/>`false`<sp/>is<sp/>returned.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>.encodings()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Return<sp/>the<sp/>encodings<sp/>that<sp/>the<sp/>request<sp/>accepts,<sp/>in<sp/>the<sp/>order<sp/>of<sp/>the<sp/>client&apos;s</highlight></codeline>
<codeline><highlight class="normal">preference<sp/>(most<sp/>preferred<sp/>first).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>.language(languages)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Return<sp/>the<sp/>first<sp/>accepted<sp/>language.<sp/>If<sp/>nothing<sp/>in<sp/>`languages`<sp/>is<sp/>accepted,</highlight></codeline>
<codeline><highlight class="normal">then<sp/>`false`<sp/>is<sp/>returned.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>.languages()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Return<sp/>the<sp/>languages<sp/>that<sp/>the<sp/>request<sp/>accepts,<sp/>in<sp/>the<sp/>order<sp/>of<sp/>the<sp/>client&apos;s</highlight></codeline>
<codeline><highlight class="normal">preference<sp/>(most<sp/>preferred<sp/>first).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>.type(types)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Return<sp/>the<sp/>first<sp/>accepted<sp/>type<sp/>(and<sp/>it<sp/>is<sp/>returned<sp/>as<sp/>the<sp/>same<sp/>text<sp/>as<sp/>what</highlight></codeline>
<codeline><highlight class="normal">appears<sp/>in<sp/>the<sp/>`types`<sp/>array).<sp/>If<sp/>nothing<sp/>in<sp/>`types`<sp/>is<sp/>accepted,<sp/>then<sp/>`false`</highlight></codeline>
<codeline><highlight class="normal">is<sp/>returned.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>`types`<sp/>array<sp/>can<sp/>contain<sp/>full<sp/>MIME<sp/>types<sp/>or<sp/>file<sp/>extensions.<sp/>Any<sp/>value</highlight></codeline>
<codeline><highlight class="normal">that<sp/>is<sp/>not<sp/>a<sp/>full<sp/>MIME<sp/>types<sp/>is<sp/>passed<sp/>to<sp/>`require(&apos;mime-types&apos;).lookup`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>.types()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Return<sp/>the<sp/>types<sp/>that<sp/>the<sp/>request<sp/>accepts,<sp/>in<sp/>the<sp/>order<sp/>of<sp/>the<sp/>client&apos;s</highlight></codeline>
<codeline><highlight class="normal">preference<sp/>(most<sp/>preferred<sp/>first).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Examples</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Simple<sp/>type<sp/>negotiation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>simple<sp/>example<sp/>shows<sp/>how<sp/>to<sp/>use<sp/>`accepts`<sp/>to<sp/>return<sp/>a<sp/>different<sp/>typed</highlight></codeline>
<codeline><highlight class="normal">respond<sp/>body<sp/>based<sp/>on<sp/>what<sp/>the<sp/>client<sp/>wants<sp/>to<sp/>accept.<sp/>The<sp/>server<sp/>lists<sp/>it&apos;s</highlight></codeline>
<codeline><highlight class="normal">preferences<sp/>in<sp/>order<sp/>and<sp/>will<sp/>get<sp/>back<sp/>the<sp/>best<sp/>match<sp/>between<sp/>the<sp/>client<sp/>and</highlight></codeline>
<codeline><highlight class="normal">server.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>accepts<sp/>=<sp/>require(&apos;accepts&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>http<sp/>=<sp/>require(&apos;http&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>app<sp/>(req,<sp/>res)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>var<sp/>accept<sp/>=<sp/>accepts(req)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>the<sp/>order<sp/>of<sp/>this<sp/>list<sp/>is<sp/>significant;<sp/>should<sp/>be<sp/>server<sp/>preferred<sp/>order</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>switch<sp/>(accept.type([&apos;json&apos;,<sp/>&apos;html&apos;]))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>case<sp/>&apos;json&apos;:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.setHeader(&apos;Content-Type&apos;,<sp/>&apos;application/json&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.write(&apos;{&quot;hello&quot;:&quot;world!&quot;}&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>break</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>case<sp/>&apos;html&apos;:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.setHeader(&apos;Content-Type&apos;,<sp/>&apos;text/html&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.write(&apos;&lt;b&gt;hello,<sp/>world!&lt;/b&gt;&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>break</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>the<sp/>fallback<sp/>is<sp/>text/plain,<sp/>so<sp/>no<sp/>need<sp/>to<sp/>specify<sp/>it<sp/>above</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.setHeader(&apos;Content-Type&apos;,<sp/>&apos;text/plain&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.write(&apos;hello,<sp/>world!&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>break</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.end()</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">http.createServer(app).listen(3000)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>test<sp/>this<sp/>out<sp/>with<sp/>the<sp/>cURL<sp/>program:</highlight></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">curl<sp/>-I<sp/>-H&apos;Accept:<sp/>text/html&apos;<sp/>http://localhost:3000/</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[MIT](LICENSE)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[coveralls-image]:<sp/>https://badgen.net/coveralls/c/github/jshttp/accepts/master</highlight></codeline>
<codeline><highlight class="normal">[coveralls-url]:<sp/>https://coveralls.io/r/jshttp/accepts?branch=master</highlight></codeline>
<codeline><highlight class="normal">[github-actions-ci-image]:<sp/>https://badgen.net/github/checks/jshttp/accepts/master?label=ci</highlight></codeline>
<codeline><highlight class="normal">[github-actions-ci-url]:<sp/>https://github.com/jshttp/accepts/actions/workflows/ci.yml</highlight></codeline>
<codeline><highlight class="normal">[node-version-image]:<sp/>https://badgen.net/npm/node/accepts</highlight></codeline>
<codeline><highlight class="normal">[node-version-url]:<sp/>https://nodejs.org/en/download</highlight></codeline>
<codeline><highlight class="normal">[npm-downloads-image]:<sp/>https://badgen.net/npm/dm/accepts</highlight></codeline>
<codeline><highlight class="normal">[npm-url]:<sp/>https://npmjs.org/package/accepts</highlight></codeline>
<codeline><highlight class="normal">[npm-version-image]:<sp/>https://badgen.net/npm/v/accepts</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/accepts/README.md"/>
  </compounddef>
</doxygen>
