<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2minipass-sized_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>minipass-sized</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>Minipass<sp/>stream<sp/>that<sp/>raises<sp/>an<sp/>error<sp/>if<sp/>you<sp/>get<sp/>a<sp/>different<sp/>number<sp/>of</highlight></codeline>
<codeline><highlight class="normal">bytes<sp/>than<sp/>expected.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>USAGE</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Use<sp/>just<sp/>like<sp/>any<sp/>old<sp/>[minipass](http://npm.im/minipass)<sp/>stream,<sp/>but</highlight></codeline>
<codeline><highlight class="normal">provide<sp/>a<sp/>`size`<sp/>option<sp/>to<sp/>the<sp/>constructor.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>`size`<sp/>option<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>integer,<sp/>smaller<sp/>than</highlight></codeline>
<codeline><highlight class="normal">`Number.MAX_SAFE_INTEGER`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">const<sp/>MinipassSized<sp/>=<sp/>require(&apos;minipass-sized&apos;)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>figure<sp/>out<sp/>how<sp/>much<sp/>data<sp/>you<sp/>expect<sp/>to<sp/>get</highlight></codeline>
<codeline><highlight class="normal">const<sp/>expectedSize<sp/>=<sp/>+headers[&apos;content-length&apos;]</highlight></codeline>
<codeline><highlight class="normal">const<sp/>stream<sp/>=<sp/>new<sp/>MinipassSized({<sp/>size:<sp/>expectedSize<sp/>})</highlight></codeline>
<codeline><highlight class="normal">stream.on(&apos;error&apos;,<sp/>er<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>if<sp/>it&apos;s<sp/>the<sp/>wrong<sp/>size,<sp/>then<sp/>this<sp/>will<sp/>raise<sp/>an<sp/>error<sp/>with</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>{<sp/>found:<sp/>&lt;number&gt;,<sp/>expect:<sp/>&lt;number&gt;,<sp/>code:<sp/>&apos;EBADSIZE&apos;<sp/>}</highlight></codeline>
<codeline><highlight class="normal">})</highlight></codeline>
<codeline><highlight class="normal">response.pipe(stream)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Caveats:<sp/>this<sp/>does<sp/>not<sp/>work<sp/>with<sp/>`objectMode`<sp/>streams,<sp/>and<sp/>will<sp/>throw<sp/>a</highlight></codeline>
<codeline><highlight class="normal">`TypeError`<sp/>from<sp/>the<sp/>constructor<sp/>if<sp/>the<sp/>size<sp/>argument<sp/>is<sp/>missing<sp/>or</highlight></codeline>
<codeline><highlight class="normal">invalid.</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/minipass-sized/README.md"/>
  </compounddef>
</doxygen>
