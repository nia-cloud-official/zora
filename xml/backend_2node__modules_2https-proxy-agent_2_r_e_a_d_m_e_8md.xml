<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2https-proxy-agent_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">https-proxy-agent</highlight></codeline>
<codeline><highlight class="normal">================</highlight></codeline>
<codeline><highlight class="normal">###<sp/>An<sp/>HTTP(s)<sp/>proxy<sp/>`http.Agent`<sp/>implementation<sp/>for<sp/>HTTPS</highlight></codeline>
<codeline><highlight class="normal">[![Build<sp/>Status](https://github.com/TooTallNate/node-https-proxy-agent/workflows/Node%20CI/badge.svg)](https://github.com/TooTallNate/node-https-proxy-agent/actions?workflow=Node+CI)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>module<sp/>provides<sp/>an<sp/>`http.Agent`<sp/>implementation<sp/>that<sp/>connects<sp/>to<sp/>a<sp/>specified</highlight></codeline>
<codeline><highlight class="normal">HTTP<sp/>or<sp/>HTTPS<sp/>proxy<sp/>server,<sp/>and<sp/>can<sp/>be<sp/>used<sp/>with<sp/>the<sp/>built-in<sp/>`https`<sp/>module.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Specifically,<sp/>this<sp/>`Agent`<sp/>implementation<sp/>connects<sp/>to<sp/>an<sp/>intermediary<sp/>&quot;proxy&quot;</highlight></codeline>
<codeline><highlight class="normal">server<sp/>and<sp/>issues<sp/>the<sp/>[CONNECT<sp/>HTTP<sp/>method][CONNECT],<sp/>which<sp/>tells<sp/>the<sp/>proxy<sp/>to</highlight></codeline>
<codeline><highlight class="normal">open<sp/>a<sp/>direct<sp/>TCP<sp/>connection<sp/>to<sp/>the<sp/>destination<sp/>server.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Since<sp/>this<sp/>agent<sp/>implements<sp/>the<sp/>CONNECT<sp/>HTTP<sp/>method,<sp/>it<sp/>also<sp/>works<sp/>with<sp/>other</highlight></codeline>
<codeline><highlight class="normal">protocols<sp/>that<sp/>use<sp/>this<sp/>method<sp/>when<sp/>connecting<sp/>over<sp/>proxies<sp/>(i.e.<sp/>WebSockets).</highlight></codeline>
<codeline><highlight class="normal">See<sp/>the<sp/>&quot;Examples&quot;<sp/>section<sp/>below<sp/>for<sp/>more.</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Installation</highlight></codeline>
<codeline><highlight class="normal">------------</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Install<sp/>with<sp/>`npm`:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```<sp/>bash</highlight></codeline>
<codeline><highlight class="normal">$<sp/>npm<sp/>install<sp/>https-proxy-agent</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Examples</highlight></codeline>
<codeline><highlight class="normal">--------</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`https`<sp/>module<sp/>example</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```<sp/>js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>url<sp/>=<sp/>require(&apos;url&apos;);</highlight></codeline>
<codeline><highlight class="normal">var<sp/>https<sp/>=<sp/>require(&apos;https&apos;);</highlight></codeline>
<codeline><highlight class="normal">var<sp/>HttpsProxyAgent<sp/>=<sp/>require(&apos;https-proxy-agent&apos;);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>HTTP/HTTPS<sp/>proxy<sp/>to<sp/>connect<sp/>to</highlight></codeline>
<codeline><highlight class="normal">var<sp/>proxy<sp/>=<sp/>process.env.http_proxy<sp/>||<sp/>&apos;http://168.63.76.32:3128&apos;;</highlight></codeline>
<codeline><highlight class="normal">console.log(&apos;using<sp/>proxy<sp/>server<sp/>%j&apos;,<sp/>proxy);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>HTTPS<sp/>endpoint<sp/>for<sp/>the<sp/>proxy<sp/>to<sp/>connect<sp/>to</highlight></codeline>
<codeline><highlight class="normal">var<sp/>endpoint<sp/>=<sp/>process.argv[2]<sp/>||<sp/>&apos;https://graph.facebook.com/tootallnate&apos;;</highlight></codeline>
<codeline><highlight class="normal">console.log(&apos;attempting<sp/>to<sp/>GET<sp/>%j&apos;,<sp/>endpoint);</highlight></codeline>
<codeline><highlight class="normal">var<sp/>options<sp/>=<sp/>url.parse(endpoint);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>create<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>`HttpsProxyAgent`<sp/>class<sp/>with<sp/>the<sp/>proxy<sp/>server<sp/>information</highlight></codeline>
<codeline><highlight class="normal">var<sp/>agent<sp/>=<sp/>new<sp/>HttpsProxyAgent(proxy);</highlight></codeline>
<codeline><highlight class="normal">options.agent<sp/>=<sp/>agent;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">https.get(options,<sp/>function<sp/>(res)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>console.log(&apos;&quot;response&quot;<sp/>event!&apos;,<sp/>res.headers);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.pipe(process.stdout);</highlight></codeline>
<codeline><highlight class="normal">});</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`ws`<sp/>WebSocket<sp/>connection<sp/>example</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```<sp/>js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>url<sp/>=<sp/>require(&apos;url&apos;);</highlight></codeline>
<codeline><highlight class="normal">var<sp/>WebSocket<sp/>=<sp/>require(&apos;ws&apos;);</highlight></codeline>
<codeline><highlight class="normal">var<sp/>HttpsProxyAgent<sp/>=<sp/>require(&apos;https-proxy-agent&apos;);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>HTTP/HTTPS<sp/>proxy<sp/>to<sp/>connect<sp/>to</highlight></codeline>
<codeline><highlight class="normal">var<sp/>proxy<sp/>=<sp/>process.env.http_proxy<sp/>||<sp/>&apos;http://168.63.76.32:3128&apos;;</highlight></codeline>
<codeline><highlight class="normal">console.log(&apos;using<sp/>proxy<sp/>server<sp/>%j&apos;,<sp/>proxy);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>WebSocket<sp/>endpoint<sp/>for<sp/>the<sp/>proxy<sp/>to<sp/>connect<sp/>to</highlight></codeline>
<codeline><highlight class="normal">var<sp/>endpoint<sp/>=<sp/>process.argv[2]<sp/>||<sp/>&apos;ws://echo.websocket.org&apos;;</highlight></codeline>
<codeline><highlight class="normal">var<sp/>parsed<sp/>=<sp/>url.parse(endpoint);</highlight></codeline>
<codeline><highlight class="normal">console.log(&apos;attempting<sp/>to<sp/>connect<sp/>to<sp/>WebSocket<sp/>%j&apos;,<sp/>endpoint);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>create<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>`HttpsProxyAgent`<sp/>class<sp/>with<sp/>the<sp/>proxy<sp/>server<sp/>information</highlight></codeline>
<codeline><highlight class="normal">var<sp/>options<sp/>=<sp/>url.parse(proxy);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">var<sp/>agent<sp/>=<sp/>new<sp/>HttpsProxyAgent(options);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>finally,<sp/>initiate<sp/>the<sp/>WebSocket<sp/>connection</highlight></codeline>
<codeline><highlight class="normal">var<sp/>socket<sp/>=<sp/>new<sp/>WebSocket(endpoint,<sp/>{<sp/>agent:<sp/>agent<sp/>});</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">socket.on(&apos;open&apos;,<sp/>function<sp/>()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>console.log(&apos;&quot;open&quot;<sp/>event!&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>socket.send(&apos;hello<sp/>world&apos;);</highlight></codeline>
<codeline><highlight class="normal">});</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">socket.on(&apos;message&apos;,<sp/>function<sp/>(data,<sp/>flags)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>console.log(&apos;&quot;message&quot;<sp/>event!<sp/>%j<sp/>%j&apos;,<sp/>data,<sp/>flags);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>socket.close();</highlight></codeline>
<codeline><highlight class="normal">});</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">API</highlight></codeline>
<codeline><highlight class="normal">---</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>new<sp/>HttpsProxyAgent(Object<sp/>options)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>`HttpsProxyAgent`<sp/>class<sp/>implements<sp/>an<sp/>`http.Agent`<sp/>subclass<sp/>that<sp/>connects</highlight></codeline>
<codeline><highlight class="normal">to<sp/>the<sp/>specified<sp/>&quot;HTTP(s)<sp/>proxy<sp/>server&quot;<sp/>in<sp/>order<sp/>to<sp/>proxy<sp/>HTTPS<sp/>and/or<sp/>WebSocket</highlight></codeline>
<codeline><highlight class="normal">requests.<sp/>This<sp/>is<sp/>achieved<sp/>by<sp/>using<sp/>the<sp/>[HTTP<sp/>`CONNECT`<sp/>method][CONNECT].</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>`options`<sp/>argument<sp/>may<sp/>either<sp/>be<sp/>a<sp/>string<sp/>URI<sp/>of<sp/>the<sp/>proxy<sp/>server<sp/>to<sp/>use,<sp/>or<sp/>an</highlight></codeline>
<codeline><highlight class="normal">&quot;options&quot;<sp/>object<sp/>with<sp/>more<sp/>specific<sp/>properties:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>`host`<sp/>-<sp/>String<sp/>-<sp/>Proxy<sp/>host<sp/>to<sp/>connect<sp/>to<sp/>(may<sp/>use<sp/>`hostname`<sp/>as<sp/>well).<sp/>Required.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>`port`<sp/>-<sp/>Number<sp/>-<sp/>Proxy<sp/>port<sp/>to<sp/>connect<sp/>to.<sp/>Required.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>`protocol`<sp/>-<sp/>String<sp/>-<sp/>If<sp/>`https:`,<sp/>then<sp/>use<sp/>TLS<sp/>to<sp/>connect<sp/>to<sp/>the<sp/>proxy.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>`headers`<sp/>-<sp/>Object<sp/>-<sp/>Additional<sp/>HTTP<sp/>headers<sp/>to<sp/>be<sp/>sent<sp/>on<sp/>the<sp/>HTTP<sp/>CONNECT<sp/>method.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>*<sp/>Any<sp/>other<sp/>options<sp/>given<sp/>are<sp/>passed<sp/>to<sp/>the<sp/>`net.connect()`/`tls.connect()`<sp/>functions.</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">License</highlight></codeline>
<codeline><highlight class="normal">-------</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(The<sp/>MIT<sp/>License)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Copyright<sp/>(c)<sp/>2013<sp/>Nathan<sp/>Rajlich<sp/>&amp;lt;nathan@tootallnate.net&amp;gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline><highlight class="normal">a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline><highlight class="normal">&apos;Software&apos;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline><highlight class="normal">without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline><highlight class="normal">distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline><highlight class="normal">permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline><highlight class="normal">the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline><highlight class="normal">included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&apos;AS<sp/>IS&apos;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline><highlight class="normal">EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline><highlight class="normal">MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline><highlight class="normal">IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY</highlight></codeline>
<codeline><highlight class="normal">CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,</highlight></codeline>
<codeline><highlight class="normal">TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE</highlight></codeline>
<codeline><highlight class="normal">SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[CONNECT]:<sp/>http://en.wikipedia.org/wiki/HTTP_tunnel#HTTP_CONNECT_Tunneling</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/https-proxy-agent/README.md"/>
  </compounddef>
</doxygen>
