<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="_m_s_v_s_util_8py" kind="file" language="Python">
    <compoundname>MSVSUtil.py</compoundname>
    <innernamespace refid="namespacegyp">gyp</innernamespace>
    <innernamespace refid="namespacegyp_1_1_m_s_v_s_util">gyp::MSVSUtil</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacegyp_1_1_m_s_v_s_util" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>2013<sp/>Google<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Utility<sp/>functions<sp/>shared<sp/>amongst<sp/>the<sp/>Windows<sp/>generators.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>copy</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>dictionary<sp/>mapping<sp/>supported<sp/>target<sp/>types<sp/>to<sp/>extensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="namespacegyp_1_1_m_s_v_s_util_1a9108321beb6a3cfb332776732c8f3a4b" refkind="member"><highlight class="normal">TARGET_TYPE_EXT<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;executable&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;exe&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;loadable_module&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;dll&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;shared_library&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;dll&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;static_library&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;lib&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;windows_driver&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;sys&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="namespacegyp_1_1_m_s_v_s_util_1a4a4cb2bf8ce33246d1277c90c6fbb094" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1_m_s_v_s_util_1a4a4cb2bf8ce33246d1277c90c6fbb094" kindref="member">_GetLargePdbShimCcPath</ref>():</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>path<sp/>of<sp/>the<sp/>large_pdb_shim.cc<sp/>file.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>this_dir<sp/>=<sp/>os.path.abspath(os.path.dirname(__file__))</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>src_dir<sp/>=<sp/>os.path.abspath(os.path.join(this_dir,<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>win_data_dir<sp/>=<sp/>os.path.join(src_dir,<sp/></highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;win&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>large_pdb_shim_cc<sp/>=<sp/>os.path.join(win_data_dir,<sp/></highlight><highlight class="stringliteral">&quot;large-pdb-shim.cc&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>large_pdb_shim_cc</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="namespacegyp_1_1_m_s_v_s_util_1acba4a54e38709d19bbde83024cff6da8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1_m_s_v_s_util_1acba4a54e38709d19bbde83024cff6da8" kindref="member">_DeepCopySomeKeys</ref>(in_dict,<sp/>keys):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Performs<sp/>a<sp/>partial<sp/>deep-copy<sp/>on<sp/>|in_dict|,<sp/>only<sp/>copying<sp/>the<sp/>keys<sp/>in<sp/>|keys|.</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/>Arguments:</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>in_dict:<sp/>The<sp/>dictionary<sp/>to<sp/>copy.</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>keys:<sp/>The<sp/>keys<sp/>to<sp/>be<sp/>copied.<sp/>If<sp/>a<sp/>key<sp/>is<sp/>in<sp/>this<sp/>list<sp/>and<sp/>doesn&apos;t<sp/>exist<sp/>in</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|in_dict|<sp/>this<sp/>is<sp/>not<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>partially<sp/>deep-copied<sp/>dictionary.</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>keys:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>in_dict:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d[key]<sp/>=<sp/>copy.deepcopy(in_dict[key])</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="namespacegyp_1_1_m_s_v_s_util_1acf497f03234f455f52f09625a6c9ce50" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1_m_s_v_s_util_1acf497f03234f455f52f09625a6c9ce50" kindref="member">_SuffixName</ref>(name,<sp/>suffix):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Add<sp/>a<sp/>suffix<sp/>to<sp/>the<sp/>end<sp/>of<sp/>a<sp/>target.</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/>Arguments:</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>name:<sp/>name<sp/>of<sp/>the<sp/>target<sp/>(foo#target)</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>suffix:<sp/>the<sp/>suffix<sp/>to<sp/>be<sp/>added</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Target<sp/>name<sp/>with<sp/>suffix<sp/>added<sp/>(foo_suffix#target)</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>parts<sp/>=<sp/>name.rsplit(</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>parts[0]<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;{parts[0]}_{suffix}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">.join(parts)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="namespacegyp_1_1_m_s_v_s_util_1a4cdefb42e91d7747789db935c5310046" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1_m_s_v_s_util_1a4cdefb42e91d7747789db935c5310046" kindref="member">_ShardName</ref>(name,<sp/>number):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Add<sp/>a<sp/>shard<sp/>number<sp/>to<sp/>the<sp/>end<sp/>of<sp/>a<sp/>target.</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/>Arguments:</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>name:<sp/>name<sp/>of<sp/>the<sp/>target<sp/>(foo#target)</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>number:<sp/>shard<sp/>number</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Target<sp/>name<sp/>with<sp/>shard<sp/>added<sp/>(foo_1#target)</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1_m_s_v_s_util_1acf497f03234f455f52f09625a6c9ce50" kindref="member">_SuffixName</ref>(name,<sp/>str(number))</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="namespacegyp_1_1_m_s_v_s_util_1aaff9bd36c35afd64173c231f3f536cc5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1_m_s_v_s_util_1aaff9bd36c35afd64173c231f3f536cc5" kindref="member">ShardTargets</ref>(target_list,<sp/>target_dicts):</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Shard<sp/>some<sp/>targets<sp/>apart<sp/>to<sp/>work<sp/>around<sp/>the<sp/>linkers<sp/>limits.</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/>Arguments:</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>target_list:<sp/>List<sp/>of<sp/>target<sp/>pairs:<sp/>&apos;base/base.gyp:base&apos;.</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>target_dicts:<sp/>Dict<sp/>of<sp/>target<sp/>properties<sp/>keyed<sp/>on<sp/>target<sp/>pair.</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Tuple<sp/>of<sp/>the<sp/>new<sp/>sharded<sp/>versions<sp/>of<sp/>the<sp/>inputs.</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Gather<sp/>the<sp/>targets<sp/>to<sp/>shard,<sp/>and<sp/>how<sp/>many<sp/>pieces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>targets_to_shard<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_dicts:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shards<sp/>=<sp/>int(target_dicts[t].get(</highlight><highlight class="stringliteral">&quot;msvs_shard&quot;</highlight><highlight class="normal">,<sp/>0))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>shards:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targets_to_shard[t]<sp/>=<sp/>shards</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Shard<sp/>target_list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>new_target_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_list:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>targets_to_shard:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(targets_to_shard[t]):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_target_list.append(<ref refid="namespacegyp_1_1_m_s_v_s_util_1a4cdefb42e91d7747789db935c5310046" kindref="member">_ShardName</ref>(t,<sp/>i))</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_target_list.append(t)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Shard<sp/>target_dict.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>new_target_dicts<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_dicts:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>targets_to_shard:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(targets_to_shard[t]):</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="namespacegyp_1_1_m_s_v_s_util_1a4cdefb42e91d7747789db935c5310046" kindref="member">_ShardName</ref>(t,<sp/>i)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_target_dicts[name]<sp/>=<sp/>copy.copy(target_dicts[t])</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_target_dicts[name][</highlight><highlight class="stringliteral">&quot;target_name&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="namespacegyp_1_1_m_s_v_s_util_1a4cdefb42e91d7747789db935c5310046" kindref="member">_ShardName</ref>(</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_target_dicts[name][</highlight><highlight class="stringliteral">&quot;target_name&quot;</highlight><highlight class="normal">],<sp/>i</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sources<sp/>=<sp/>new_target_dicts[name].get(</highlight><highlight class="stringliteral">&quot;sources&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_sources<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pos<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(i,<sp/>len(sources),<sp/>targets_to_shard[t]):</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_sources.append(sources[pos])</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_target_dicts[name][</highlight><highlight class="stringliteral">&quot;sources&quot;</highlight><highlight class="normal">]<sp/>=<sp/>new_sources</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_target_dicts[t]<sp/>=<sp/>target_dicts[t]</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Shard<sp/>dependencies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sorted(new_target_dicts):</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>deptype<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;dependencies&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dependencies_original&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dependencies<sp/>=<sp/>copy.copy(new_target_dicts[t].get(deptype,<sp/>[]))</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_dependencies<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dependencies:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>targets_to_shard:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(targets_to_shard[d]):</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_dependencies.append(<ref refid="namespacegyp_1_1_m_s_v_s_util_1a4cdefb42e91d7747789db935c5310046" kindref="member">_ShardName</ref>(d,<sp/>i))</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_dependencies.append(d)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_target_dicts[t][deptype]<sp/>=<sp/>new_dependencies</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(new_target_list,<sp/>new_target_dicts)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="namespacegyp_1_1_m_s_v_s_util_1ad16d6f5e7cb9d8d62ec659f1ca019910" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1_m_s_v_s_util_1ad16d6f5e7cb9d8d62ec659f1ca019910" kindref="member">_GetPdbPath</ref>(target_dict,<sp/>config_name,<sp/>vars):</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>path<sp/>to<sp/>the<sp/>PDB<sp/>file<sp/>that<sp/>will<sp/>be<sp/>generated<sp/>by<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/>configuration.</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/>The<sp/>lookup<sp/>proceeds<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>Look<sp/>for<sp/>an<sp/>explicit<sp/>path<sp/>in<sp/>the<sp/>VCLinkerTool<sp/>configuration<sp/>block.</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>Look<sp/>for<sp/>an<sp/>&apos;msvs_large_pdb_path&apos;<sp/>variable.</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>Use<sp/>&apos;&lt;(PRODUCT_DIR)/&lt;(product_name).(exe|dll).pdb&apos;<sp/>if<sp/>&apos;product_name&apos;<sp/>is</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>specified.</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>Use<sp/>&apos;&lt;(PRODUCT_DIR)/&lt;(target_name).(exe|dll).pdb&apos;.</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/>Arguments:</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>target_dict:<sp/>The<sp/>target<sp/>dictionary<sp/>to<sp/>be<sp/>searched.</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>config_name:<sp/>The<sp/>name<sp/>of<sp/>the<sp/>configuration<sp/>of<sp/>interest.</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vars:<sp/>A<sp/>dictionary<sp/>of<sp/>common<sp/>GYP<sp/>variables<sp/>with<sp/>generator-specific<sp/>values.</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>path<sp/>of<sp/>the<sp/>corresponding<sp/>PDB<sp/>file.</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>config<sp/>=<sp/>target_dict[</highlight><highlight class="stringliteral">&quot;configurations&quot;</highlight><highlight class="normal">][config_name]</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>msvs<sp/>=<sp/>config.setdefault(</highlight><highlight class="stringliteral">&quot;msvs_settings&quot;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>linker<sp/>=<sp/>msvs.get(</highlight><highlight class="stringliteral">&quot;VCLinkerTool&quot;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>pdb_path<sp/>=<sp/>linker.get(</highlight><highlight class="stringliteral">&quot;ProgramDatabaseFile&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pdb_path:</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pdb_path</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>variables<sp/>=<sp/>target_dict.get(</highlight><highlight class="stringliteral">&quot;variables&quot;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>pdb_path<sp/>=<sp/>variables.get(</highlight><highlight class="stringliteral">&quot;msvs_large_pdb_path&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pdb_path:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pdb_path</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>pdb_base<sp/>=<sp/>target_dict.get(</highlight><highlight class="stringliteral">&quot;product_name&quot;</highlight><highlight class="normal">,<sp/>target_dict[</highlight><highlight class="stringliteral">&quot;target_name&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>pdb_base<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{}.{}.pdb&quot;</highlight><highlight class="normal">.format(pdb_base,<sp/>TARGET_TYPE_EXT[target_dict[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]])</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>pdb_path<sp/>=<sp/>vars[</highlight><highlight class="stringliteral">&quot;PRODUCT_DIR&quot;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>pdb_base</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pdb_path</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="namespacegyp_1_1_m_s_v_s_util_1ae17c81ec653d2e6fbc85242db5fd30bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1_m_s_v_s_util_1ae17c81ec653d2e6fbc85242db5fd30bd" kindref="member">InsertLargePdbShims</ref>(target_list,<sp/>target_dicts,<sp/>vars):</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Insert<sp/>a<sp/>shim<sp/>target<sp/>that<sp/>forces<sp/>the<sp/>linker<sp/>to<sp/>use<sp/>4KB<sp/>pagesize<sp/>PDBs.</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/>This<sp/>is<sp/>a<sp/>workaround<sp/>for<sp/>targets<sp/>with<sp/>PDBs<sp/>greater<sp/>than<sp/>1GB<sp/>in<sp/>size,<sp/>the</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/>limit<sp/>for<sp/>the<sp/>1KB<sp/>pagesize<sp/>PDBs<sp/>created<sp/>by<sp/>the<sp/>linker<sp/>by<sp/>default.</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/>Arguments:</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>target_list:<sp/>List<sp/>of<sp/>target<sp/>pairs:<sp/>&apos;base/base.gyp:base&apos;.</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>target_dicts:<sp/>Dict<sp/>of<sp/>target<sp/>properties<sp/>keyed<sp/>on<sp/>target<sp/>pair.</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>vars:<sp/>A<sp/>dictionary<sp/>of<sp/>common<sp/>GYP<sp/>variables<sp/>with<sp/>generator-specific<sp/>values.</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Tuple<sp/>of<sp/>the<sp/>shimmed<sp/>version<sp/>of<sp/>the<sp/>inputs.</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Determine<sp/>which<sp/>targets<sp/>need<sp/>shimming.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>targets_to_shim<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_dicts:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_dict<sp/>=<sp/>target_dicts[t]</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>only<sp/>want<sp/>to<sp/>shim<sp/>targets<sp/>that<sp/>have<sp/>msvs_large_pdb<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>int(target_dict.get(</highlight><highlight class="stringliteral">&quot;msvs_large_pdb&quot;</highlight><highlight class="normal">,<sp/>0)):</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>intended<sp/>for<sp/>executable,<sp/>shared_library<sp/>and<sp/>loadable_module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>targets<sp/>where<sp/>every<sp/>configuration<sp/>is<sp/>set<sp/>up<sp/>to<sp/>produce<sp/>a<sp/>PDB<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>any<sp/>of<sp/>these<sp/>conditions<sp/>is<sp/>not<sp/>true<sp/>then<sp/>the<sp/>shim<sp/>logic<sp/>will<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targets_to_shim.append(t)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>large_pdb_shim_cc<sp/>=<sp/><ref refid="namespacegyp_1_1_m_s_v_s_util_1a4a4cb2bf8ce33246d1277c90c6fbb094" kindref="member">_GetLargePdbShimCcPath</ref>()</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>targets_to_shim:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_dict<sp/>=<sp/>target_dicts[t]</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_name<sp/>=<sp/>target_dict.get(</highlight><highlight class="stringliteral">&quot;target_name&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_dict<sp/>=<sp/><ref refid="namespacegyp_1_1_m_s_v_s_util_1acba4a54e38709d19bbde83024cff6da8" kindref="member">_DeepCopySomeKeys</ref>(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_dict,<sp/>[</highlight><highlight class="stringliteral">&quot;configurations&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;default_configuration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;toolset&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>the<sp/>dict<sp/>for<sp/>copying<sp/>the<sp/>source<sp/>file<sp/>(part<sp/>of<sp/>the<sp/>GYP<sp/>tree)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>the<sp/>intermediate<sp/>directory<sp/>of<sp/>the<sp/>project.<sp/>This<sp/>is<sp/>necessary<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>we<sp/>can&apos;t<sp/>always<sp/>build<sp/>a<sp/>relative<sp/>path<sp/>to<sp/>the<sp/>shim<sp/>source<sp/>file<sp/>(on<sp/>Windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>GYP<sp/>and<sp/>the<sp/>project<sp/>may<sp/>be<sp/>on<sp/>different<sp/>drives),<sp/>and<sp/>Ninja<sp/>hates<sp/>absolute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>paths<sp/>(it<sp/>ends<sp/>up<sp/>generating<sp/>the<sp/>.obj<sp/>and<sp/>.obj.d<sp/>alongside<sp/>the<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>file,<sp/>polluting<sp/>GYPs<sp/>tree).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;large_pdb_copy&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_target_name<sp/>=<sp/>target_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>copy_suffix</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_copy_target_name<sp/>=<sp/><ref refid="namespacegyp_1_1_m_s_v_s_util_1acf497f03234f455f52f09625a6c9ce50" kindref="member">_SuffixName</ref>(t,<sp/>copy_suffix)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shim_cc_basename<sp/>=<sp/>os.path.basename(large_pdb_shim_cc)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shim_cc_dir<sp/>=<sp/>vars[</highlight><highlight class="stringliteral">&quot;SHARED_INTERMEDIATE_DIR&quot;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>copy_target_name</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shim_cc_path<sp/>=<sp/>shim_cc_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>shim_cc_basename</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_dict<sp/>=<sp/>copy.deepcopy(base_dict)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_dict[</highlight><highlight class="stringliteral">&quot;target_name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>copy_target_name</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_dict[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_dict[</highlight><highlight class="stringliteral">&quot;sources&quot;</highlight><highlight class="normal">]<sp/>=<sp/>[large_pdb_shim_cc]</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_dict[</highlight><highlight class="stringliteral">&quot;copies&quot;</highlight><highlight class="normal">]<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;destination&quot;</highlight><highlight class="normal">:<sp/>shim_cc_dir,<sp/></highlight><highlight class="stringliteral">&quot;files&quot;</highlight><highlight class="normal">:<sp/>[large_pdb_shim_cc]}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>the<sp/>dict<sp/>for<sp/>the<sp/>PDB<sp/>generating<sp/>shim<sp/>target.<sp/>It<sp/>depends<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>copy<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shim_suffix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;large_pdb_shim&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shim_target_name<sp/>=<sp/>target_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>shim_suffix</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_shim_target_name<sp/>=<sp/><ref refid="namespacegyp_1_1_m_s_v_s_util_1acf497f03234f455f52f09625a6c9ce50" kindref="member">_SuffixName</ref>(t,<sp/>shim_suffix)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shim_dict<sp/>=<sp/>copy.deepcopy(base_dict)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shim_dict[</highlight><highlight class="stringliteral">&quot;target_name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>shim_target_name</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shim_dict[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;static_library&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shim_dict[</highlight><highlight class="stringliteral">&quot;sources&quot;</highlight><highlight class="normal">]<sp/>=<sp/>[shim_cc_path]</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shim_dict[</highlight><highlight class="stringliteral">&quot;dependencies&quot;</highlight><highlight class="normal">]<sp/>=<sp/>[full_copy_target_name]</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>up<sp/>the<sp/>shim<sp/>to<sp/>output<sp/>its<sp/>PDB<sp/>to<sp/>the<sp/>same<sp/>location<sp/>as<sp/>the<sp/>final<sp/>linker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>config_name,<sp/>config<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>shim_dict.get(</highlight><highlight class="stringliteral">&quot;configurations&quot;</highlight><highlight class="normal">).items():</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdb_path<sp/>=<sp/><ref refid="namespacegyp_1_1_m_s_v_s_util_1ad16d6f5e7cb9d8d62ec659f1ca019910" kindref="member">_GetPdbPath</ref>(target_dict,<sp/>config_name,<sp/>vars)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>few<sp/>keys<sp/>that<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>propagate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&quot;msvs_precompiled_header&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;msvs_precompiled_source&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.pop(key,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msvs<sp/>=<sp/>config.setdefault(</highlight><highlight class="stringliteral">&quot;msvs_settings&quot;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Update<sp/>the<sp/>compiler<sp/>directives<sp/>in<sp/>the<sp/>shim<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compiler<sp/>=<sp/>msvs.setdefault(</highlight><highlight class="stringliteral">&quot;VCCLCompilerTool&quot;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compiler[</highlight><highlight class="stringliteral">&quot;DebugInformationFormat&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compiler[</highlight><highlight class="stringliteral">&quot;ProgramDataBaseFileName&quot;</highlight><highlight class="normal">]<sp/>=<sp/>pdb_path</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>the<sp/>explicit<sp/>PDB<sp/>path<sp/>in<sp/>the<sp/>appropriate<sp/>configuration<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>original<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config<sp/>=<sp/>target_dict[</highlight><highlight class="stringliteral">&quot;configurations&quot;</highlight><highlight class="normal">][config_name]</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msvs<sp/>=<sp/>config.setdefault(</highlight><highlight class="stringliteral">&quot;msvs_settings&quot;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linker<sp/>=<sp/>msvs.setdefault(</highlight><highlight class="stringliteral">&quot;VCLinkerTool&quot;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linker[</highlight><highlight class="stringliteral">&quot;GenerateDebugInformation&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linker[</highlight><highlight class="stringliteral">&quot;ProgramDatabaseFile&quot;</highlight><highlight class="normal">]<sp/>=<sp/>pdb_path</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>the<sp/>new<sp/>targets.<sp/>They<sp/>must<sp/>go<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>list<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>dependency<sp/>generation<sp/>works<sp/>as<sp/>expected<sp/>in<sp/>ninja.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_list.insert(0,<sp/>full_copy_target_name)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_list.insert(0,<sp/>full_shim_target_name)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_dicts[full_copy_target_name]<sp/>=<sp/>copy_dict</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_dicts[full_shim_target_name]<sp/>=<sp/>shim_dict</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Update<sp/>the<sp/>original<sp/>target<sp/>to<sp/>depend<sp/>on<sp/>the<sp/>shim<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_dict.setdefault(</highlight><highlight class="stringliteral">&quot;dependencies&quot;</highlight><highlight class="normal">,<sp/>[]).append(full_shim_target_name)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(target_list,<sp/>target_dicts)</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/MSVSUtil.py"/>
  </compounddef>
</doxygen>
