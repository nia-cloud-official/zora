<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2minizlib_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>minizlib</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>fast<sp/>zlib<sp/>stream<sp/>built<sp/>on<sp/>[minipass](http://npm.im/minipass)<sp/>and</highlight></codeline>
<codeline><highlight class="normal">Node.js&apos;s<sp/>zlib<sp/>binding.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>module<sp/>was<sp/>created<sp/>to<sp/>serve<sp/>the<sp/>needs<sp/>of</highlight></codeline>
<codeline><highlight class="normal">[node-tar](http://npm.im/tar)<sp/>and</highlight></codeline>
<codeline><highlight class="normal">[minipass-fetch](http://npm.im/minipass-fetch).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Brotli<sp/>is<sp/>supported<sp/>in<sp/>versions<sp/>of<sp/>node<sp/>with<sp/>a<sp/>Brotli<sp/>binding.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>How<sp/>does<sp/>this<sp/>differ<sp/>from<sp/>the<sp/>streams<sp/>in<sp/>`require(&apos;zlib&apos;)`?</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">First,<sp/>there<sp/>are<sp/>no<sp/>convenience<sp/>methods<sp/>to<sp/>compress<sp/>or<sp/>decompress<sp/>a</highlight></codeline>
<codeline><highlight class="normal">buffer.<sp/><sp/>If<sp/>you<sp/>want<sp/>those,<sp/>use<sp/>the<sp/>built-in<sp/>`zlib`<sp/>module.<sp/><sp/>This<sp/>is</highlight></codeline>
<codeline><highlight class="normal">only<sp/>streams.<sp/><sp/>That<sp/>being<sp/>said,<sp/>Minipass<sp/>streams<sp/>to<sp/>make<sp/>it<sp/>fairly<sp/>easy<sp/>to</highlight></codeline>
<codeline><highlight class="normal">use<sp/>as<sp/>one-liners:<sp/>`new<sp/>zlib.Deflate().end(data).read()`<sp/>will<sp/>return<sp/>the</highlight></codeline>
<codeline><highlight class="normal">deflate<sp/>compressed<sp/>result.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>module<sp/>compresses<sp/>and<sp/>decompresses<sp/>the<sp/>data<sp/>as<sp/>fast<sp/>as<sp/>you<sp/>feed</highlight></codeline>
<codeline><highlight class="normal">it<sp/>in.<sp/><sp/>It<sp/>is<sp/>synchronous,<sp/>and<sp/>runs<sp/>on<sp/>the<sp/>main<sp/>process<sp/>thread.<sp/><sp/>Zlib</highlight></codeline>
<codeline><highlight class="normal">and<sp/>Brotli<sp/>operations<sp/>can<sp/>be<sp/>high<sp/>CPU,<sp/>but<sp/>they&apos;re<sp/>very<sp/>fast,<sp/>and<sp/>doing<sp/>it</highlight></codeline>
<codeline><highlight class="normal">this<sp/>way<sp/>means<sp/>much<sp/>less<sp/>bookkeeping<sp/>and<sp/>artificial<sp/>deferral.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Node&apos;s<sp/>built<sp/>in<sp/>zlib<sp/>streams<sp/>are<sp/>built<sp/>on<sp/>top<sp/>of<sp/>`stream.Transform`.</highlight></codeline>
<codeline><highlight class="normal">They<sp/>do<sp/>the<sp/>maximally<sp/>safe<sp/>thing<sp/>with<sp/>respect<sp/>to<sp/>consistent</highlight></codeline>
<codeline><highlight class="normal">asynchrony,<sp/>buffering,<sp/>and<sp/>backpressure.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">See<sp/>[Minipass](http://npm.im/minipass)<sp/>for<sp/>more<sp/>on<sp/>the<sp/>differences<sp/>between</highlight></codeline>
<codeline><highlight class="normal">Node.js<sp/>core<sp/>streams<sp/>and<sp/>Minipass<sp/>streams,<sp/>and<sp/>the<sp/>convenience<sp/>methods</highlight></codeline>
<codeline><highlight class="normal">provided<sp/>by<sp/>that<sp/>class.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Classes</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>Deflate</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Inflate</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Gzip</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Gunzip</highlight></codeline>
<codeline><highlight class="normal">-<sp/>DeflateRaw</highlight></codeline>
<codeline><highlight class="normal">-<sp/>InflateRaw</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Unzip</highlight></codeline>
<codeline><highlight class="normal">-<sp/>BrotliCompress<sp/>(Node<sp/>v10<sp/>and<sp/>higher)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>BrotliDecompress<sp/>(Node<sp/>v10<sp/>and<sp/>higher)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>USAGE</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">const<sp/>zlib<sp/>=<sp/>require(&apos;minizlib&apos;)</highlight></codeline>
<codeline><highlight class="normal">const<sp/>input<sp/>=<sp/>sourceOfCompressedData()</highlight></codeline>
<codeline><highlight class="normal">const<sp/>decode<sp/>=<sp/>new<sp/>zlib.BrotliDecompress()</highlight></codeline>
<codeline><highlight class="normal">const<sp/>output<sp/>=<sp/>whereToWriteTheDecodedData()</highlight></codeline>
<codeline><highlight class="normal">input.pipe(decode).pipe(output)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>REPRODUCIBLE<sp/>BUILDS</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>create<sp/>reproducible<sp/>gzip<sp/>compressed<sp/>files<sp/>across<sp/>different<sp/>operating</highlight></codeline>
<codeline><highlight class="normal">systems,<sp/>set<sp/>`portable:<sp/>true`<sp/>in<sp/>the<sp/>options.<sp/><sp/>This<sp/>causes<sp/>minizlib<sp/>to<sp/>set</highlight></codeline>
<codeline><highlight class="normal">the<sp/>`OS`<sp/>indicator<sp/>in<sp/>byte<sp/>9<sp/>of<sp/>the<sp/>extended<sp/>gzip<sp/>header<sp/>to<sp/>`0xFF`<sp/>for</highlight></codeline>
<codeline><highlight class="normal">&apos;unknown&apos;.</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/minizlib/README.md"/>
  </compounddef>
</doxygen>
