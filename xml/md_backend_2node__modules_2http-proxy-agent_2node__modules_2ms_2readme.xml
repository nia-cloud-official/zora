<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="md_backend_2node__modules_2http-proxy-agent_2node__modules_2ms_2readme" kind="page">
    <compoundname>md_backend_2node__modules_2http-proxy-agent_2node__modules_2ms_2readme</compoundname>
    <title>ms</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="md_backend_2node__modules_2http-proxy-agent_2node__modules_2ms_2readme_1autotoc_md1586"/> <ulink url="https://travis-ci.org/zeit/ms"><image type="html" name="https://travis-ci.org/zeit/ms.svg?branch=master" alt="Build Status" inline="yes"></image>
</ulink> <ulink url="https://spectrum.chat/zeit"><image type="html" name="https://withspectrum.github.io/badge/badge.svg" alt="Join the community on Spectrum" inline="yes"></image>
</ulink></para>
<para>Use this package to easily convert various time formats to milliseconds.</para>
<sect1 id="md_backend_2node__modules_2http-proxy-agent_2node__modules_2ms_2readme_1autotoc_md1587">
<title>Examples</title><para><programlisting filename=".js"><codeline><highlight class="normal">ms(&apos;2<sp/>days&apos;)<sp/><sp/>//<sp/>172800000</highlight></codeline>
<codeline><highlight class="normal">ms(&apos;1d&apos;)<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>86400000</highlight></codeline>
<codeline><highlight class="normal">ms(&apos;10h&apos;)<sp/><sp/><sp/><sp/><sp/>//<sp/>36000000</highlight></codeline>
<codeline><highlight class="normal">ms(&apos;2.5<sp/>hrs&apos;)<sp/>//<sp/>9000000</highlight></codeline>
<codeline><highlight class="normal">ms(&apos;2h&apos;)<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>7200000</highlight></codeline>
<codeline><highlight class="normal">ms(&apos;1m&apos;)<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>60000</highlight></codeline>
<codeline><highlight class="normal">ms(&apos;5s&apos;)<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>5000</highlight></codeline>
<codeline><highlight class="normal">ms(&apos;1y&apos;)<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>31557600000</highlight></codeline>
<codeline><highlight class="normal">ms(&apos;100&apos;)<sp/><sp/><sp/><sp/><sp/>//<sp/>100</highlight></codeline>
<codeline><highlight class="normal">ms(&apos;-3<sp/>days&apos;)<sp/>//<sp/>-259200000</highlight></codeline>
<codeline><highlight class="normal">ms(&apos;-1h&apos;)<sp/><sp/><sp/><sp/><sp/>//<sp/>-3600000</highlight></codeline>
<codeline><highlight class="normal">ms(&apos;-200&apos;)<sp/><sp/><sp/><sp/>//<sp/>-200</highlight></codeline>
</programlisting></para>
<sect2 id="md_backend_2node__modules_2http-proxy-agent_2node__modules_2ms_2readme_1autotoc_md1588">
<title>Convert from Milliseconds</title><para><programlisting filename=".js"><codeline><highlight class="normal">ms(60000)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>&quot;1m&quot;</highlight></codeline>
<codeline><highlight class="normal">ms(2<sp/>*<sp/>60000)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>&quot;2m&quot;</highlight></codeline>
<codeline><highlight class="normal">ms(-3<sp/>*<sp/>60000)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>&quot;-3m&quot;</highlight></codeline>
<codeline><highlight class="normal">ms(ms(&apos;10<sp/>hours&apos;))<sp/><sp/><sp/><sp/>//<sp/>&quot;10h&quot;</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_backend_2node__modules_2http-proxy-agent_2node__modules_2ms_2readme_1autotoc_md1589">
<title>Time Format Written-Out</title><para><programlisting filename=".js"><codeline><highlight class="normal">ms(60000,<sp/>{<sp/>long:<sp/>true<sp/>})<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>&quot;1<sp/>minute&quot;</highlight></codeline>
<codeline><highlight class="normal">ms(2<sp/>*<sp/>60000,<sp/>{<sp/>long:<sp/>true<sp/>})<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>&quot;2<sp/>minutes&quot;</highlight></codeline>
<codeline><highlight class="normal">ms(-3<sp/>*<sp/>60000,<sp/>{<sp/>long:<sp/>true<sp/>})<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>&quot;-3<sp/>minutes&quot;</highlight></codeline>
<codeline><highlight class="normal">ms(ms(&apos;10<sp/>hours&apos;),<sp/>{<sp/>long:<sp/>true<sp/>})<sp/><sp/><sp/><sp/>//<sp/>&quot;10<sp/>hours&quot;</highlight></codeline>
</programlisting></para>
</sect2>
</sect1>
<sect1 id="md_backend_2node__modules_2http-proxy-agent_2node__modules_2ms_2readme_1autotoc_md1590">
<title>Features</title><para><itemizedlist>
<listitem><para>Works both in <ulink url="https://nodejs.org">Node.js</ulink> and in the browser</para>
</listitem><listitem><para>If a number is supplied to <computeroutput>ms</computeroutput>, a string with a unit is returned</para>
</listitem><listitem><para>If a string that contains the number is supplied, it returns it as a number (e.g.: it returns <computeroutput>100</computeroutput> for <lsquo/>&apos;100<rsquo/>`)</para>
</listitem><listitem><para>If you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="md_backend_2node__modules_2http-proxy-agent_2node__modules_2ms_2readme_1autotoc_md1591">
<title>Related Packages</title><para><itemizedlist>
<listitem><para><ulink url="https://github.com/knpwrs/ms.macro">ms.macro</ulink> - Run <computeroutput>ms</computeroutput> as a macro at build-time.</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="md_backend_2node__modules_2http-proxy-agent_2node__modules_2ms_2readme_1autotoc_md1592">
<title>Caught a Bug?</title><para><orderedlist>
<listitem><para><ulink url="https://help.github.com/articles/fork-a-repo/">Fork</ulink> this repository to your own GitHub account and then <ulink url="https://help.github.com/articles/cloning-a-repository/">clone</ulink> it to your local device</para>
</listitem><listitem><para>Link the package to the global module directory: <computeroutput>npm link</computeroutput></para>
</listitem><listitem><para>Within the module you want to test your local development instance of ms, just link it to the dependencies: <computeroutput>npm link ms</computeroutput>. Instead of the default one from npm, Node.js will now use your clone of ms!</para>
</listitem></orderedlist>
</para>
<para>As always, you can run the tests using: <computeroutput>npm test</computeroutput> </para>
</sect1>
    </detaileddescription>
    <location file="backend/node_modules/http-proxy-agent/node_modules/ms/readme.md"/>
  </compounddef>
</doxygen>
