<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2content-type_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>content-type</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Version][npm-version-image]][npm-url]</highlight></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Downloads][npm-downloads-image]][npm-url]</highlight></codeline>
<codeline><highlight class="normal">[![Node.js<sp/>Version][node-image]][node-url]</highlight></codeline>
<codeline><highlight class="normal">[![Build<sp/>Status][ci-image]][ci-url]</highlight></codeline>
<codeline><highlight class="normal">[![Coverage<sp/>Status][coveralls-image]][coveralls-url]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>and<sp/>parse<sp/>HTTP<sp/>Content-Type<sp/>header<sp/>according<sp/>to<sp/>RFC<sp/>7231</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Installation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">$<sp/>npm<sp/>install<sp/>content-type</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>contentType<sp/>=<sp/>require(&apos;content-type&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>contentType.parse(string)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>obj<sp/>=<sp/>contentType.parse(&apos;image/svg+xml;<sp/>charset=utf-8&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Parse<sp/>a<sp/>`Content-Type`<sp/>header.<sp/>This<sp/>will<sp/>return<sp/>an<sp/>object<sp/>with<sp/>the<sp/>following</highlight></codeline>
<codeline><highlight class="normal">properties<sp/>(examples<sp/>are<sp/>shown<sp/>for<sp/>the<sp/>string<sp/>`&apos;image/svg+xml;<sp/>charset=utf-8&apos;`):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>`type`:<sp/>The<sp/>media<sp/>type<sp/>(the<sp/>type<sp/>and<sp/>subtype,<sp/>always<sp/>lower<sp/>case).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>Example:<sp/>`&apos;image/svg+xml&apos;`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>`parameters`:<sp/>An<sp/>object<sp/>of<sp/>the<sp/>parameters<sp/>in<sp/>the<sp/>media<sp/>type<sp/>(name<sp/>of<sp/>parameter</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>always<sp/>lower<sp/>case).<sp/>Example:<sp/>`{charset:<sp/>&apos;utf-8&apos;}`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Throws<sp/>a<sp/>`TypeError`<sp/>if<sp/>the<sp/>string<sp/>is<sp/>missing<sp/>or<sp/>invalid.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>contentType.parse(req)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>obj<sp/>=<sp/>contentType.parse(req)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Parse<sp/>the<sp/>`Content-Type`<sp/>header<sp/>from<sp/>the<sp/>given<sp/>`req`.<sp/>Short-cut<sp/>for</highlight></codeline>
<codeline><highlight class="normal">`contentType.parse(req.headers[&apos;content-type&apos;])`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Throws<sp/>a<sp/>`TypeError`<sp/>if<sp/>the<sp/>`Content-Type`<sp/>header<sp/>is<sp/>missing<sp/>or<sp/>invalid.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>contentType.parse(res)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>obj<sp/>=<sp/>contentType.parse(res)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Parse<sp/>the<sp/>`Content-Type`<sp/>header<sp/>set<sp/>on<sp/>the<sp/>given<sp/>`res`.<sp/>Short-cut<sp/>for</highlight></codeline>
<codeline><highlight class="normal">`contentType.parse(res.getHeader(&apos;content-type&apos;))`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Throws<sp/>a<sp/>`TypeError`<sp/>if<sp/>the<sp/>`Content-Type`<sp/>header<sp/>is<sp/>missing<sp/>or<sp/>invalid.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>contentType.format(obj)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>str<sp/>=<sp/>contentType.format({</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>type:<sp/>&apos;image/svg+xml&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>parameters:<sp/>{<sp/>charset:<sp/>&apos;utf-8&apos;<sp/>}</highlight></codeline>
<codeline><highlight class="normal">})</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Format<sp/>an<sp/>object<sp/>into<sp/>a<sp/>`Content-Type`<sp/>header.<sp/>This<sp/>will<sp/>return<sp/>a<sp/>string<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal">content<sp/>type<sp/>for<sp/>the<sp/>given<sp/>object<sp/>with<sp/>the<sp/>following<sp/>properties<sp/>(examples<sp/>are</highlight></codeline>
<codeline><highlight class="normal">shown<sp/>that<sp/>produce<sp/>the<sp/>string<sp/>`&apos;image/svg+xml;<sp/>charset=utf-8&apos;`):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>`type`:<sp/>The<sp/>media<sp/>type<sp/>(will<sp/>be<sp/>lower-cased).<sp/>Example:<sp/>`&apos;image/svg+xml&apos;`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>`parameters`:<sp/>An<sp/>object<sp/>of<sp/>the<sp/>parameters<sp/>in<sp/>the<sp/>media<sp/>type<sp/>(name<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>parameter<sp/>will<sp/>be<sp/>lower-cased).<sp/>Example:<sp/>`{charset:<sp/>&apos;utf-8&apos;}`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Throws<sp/>a<sp/>`TypeError`<sp/>if<sp/>the<sp/>object<sp/>contains<sp/>an<sp/>invalid<sp/>type<sp/>or<sp/>parameter<sp/>names.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[MIT](LICENSE)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[ci-image]:<sp/>https://badgen.net/github/checks/jshttp/content-type/master?label=ci</highlight></codeline>
<codeline><highlight class="normal">[ci-url]:<sp/>https://github.com/jshttp/content-type/actions/workflows/ci.yml</highlight></codeline>
<codeline><highlight class="normal">[coveralls-image]:<sp/>https://badgen.net/coveralls/c/github/jshttp/content-type/master</highlight></codeline>
<codeline><highlight class="normal">[coveralls-url]:<sp/>https://coveralls.io/r/jshttp/content-type?branch=master</highlight></codeline>
<codeline><highlight class="normal">[node-image]:<sp/>https://badgen.net/npm/node/content-type</highlight></codeline>
<codeline><highlight class="normal">[node-url]:<sp/>https://nodejs.org/en/download</highlight></codeline>
<codeline><highlight class="normal">[npm-downloads-image]:<sp/>https://badgen.net/npm/dm/content-type</highlight></codeline>
<codeline><highlight class="normal">[npm-url]:<sp/>https://npmjs.org/package/content-type</highlight></codeline>
<codeline><highlight class="normal">[npm-version-image]:<sp/>https://badgen.net/npm/v/content-type</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/content-type/README.md"/>
  </compounddef>
</doxygen>
