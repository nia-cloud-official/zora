<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2inherits_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">Browser-friendly<sp/>inheritance<sp/>fully<sp/>compatible<sp/>with<sp/>standard<sp/>node.js</highlight></codeline>
<codeline><highlight class="normal">[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>package<sp/>exports<sp/>standard<sp/>`inherits`<sp/>from<sp/>node.js<sp/>`util`<sp/>module<sp/>in</highlight></codeline>
<codeline><highlight class="normal">node<sp/>environment,<sp/>but<sp/>also<sp/>provides<sp/>alternative<sp/>browser-friendly</highlight></codeline>
<codeline><highlight class="normal">implementation<sp/>through<sp/>[browser</highlight></codeline>
<codeline><highlight class="normal">field](https://gist.github.com/shtylman/4339901).<sp/>Alternative</highlight></codeline>
<codeline><highlight class="normal">implementation<sp/>is<sp/>a<sp/>literal<sp/>copy<sp/>of<sp/>standard<sp/>one<sp/>located<sp/>in<sp/>standalone</highlight></codeline>
<codeline><highlight class="normal">module<sp/>to<sp/>avoid<sp/>requiring<sp/>of<sp/>`util`.<sp/>It<sp/>also<sp/>has<sp/>a<sp/>shim<sp/>for<sp/>old</highlight></codeline>
<codeline><highlight class="normal">browsers<sp/>with<sp/>no<sp/>`Object.create`<sp/>support.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">While<sp/>keeping<sp/>you<sp/>sure<sp/>you<sp/>are<sp/>using<sp/>standard<sp/>`inherits`</highlight></codeline>
<codeline><highlight class="normal">implementation<sp/>in<sp/>node.js<sp/>environment,<sp/>it<sp/>allows<sp/>bundlers<sp/>such<sp/>as</highlight></codeline>
<codeline><highlight class="normal">[browserify](https://github.com/substack/node-browserify)<sp/>to<sp/>not</highlight></codeline>
<codeline><highlight class="normal">include<sp/>full<sp/>`util`<sp/>package<sp/>to<sp/>your<sp/>client<sp/>code<sp/>if<sp/>all<sp/>you<sp/>need<sp/>is</highlight></codeline>
<codeline><highlight class="normal">just<sp/>`inherits`<sp/>function.<sp/>It<sp/>worth,<sp/>because<sp/>browser<sp/>shim<sp/>for<sp/>`util`</highlight></codeline>
<codeline><highlight class="normal">package<sp/>is<sp/>large<sp/>and<sp/>`inherits`<sp/>is<sp/>often<sp/>the<sp/>single<sp/>function<sp/>you<sp/>need</highlight></codeline>
<codeline><highlight class="normal">from<sp/>it.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">It&apos;s<sp/>recommended<sp/>to<sp/>use<sp/>this<sp/>package<sp/>instead<sp/>of</highlight></codeline>
<codeline><highlight class="normal">`require(&apos;util&apos;).inherits`<sp/>for<sp/>any<sp/>code<sp/>that<sp/>has<sp/>chances<sp/>to<sp/>be<sp/>used</highlight></codeline>
<codeline><highlight class="normal">not<sp/>only<sp/>in<sp/>node.js<sp/>but<sp/>in<sp/>browser<sp/>too.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>usage</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>inherits<sp/>=<sp/>require(&apos;inherits&apos;);</highlight></codeline>
<codeline><highlight class="normal">//<sp/>then<sp/>use<sp/>exactly<sp/>as<sp/>the<sp/>standard<sp/>one</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>note<sp/>on<sp/>version<sp/>~1.0</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Version<sp/>~1.0<sp/>had<sp/>completely<sp/>different<sp/>motivation<sp/>and<sp/>is<sp/>not<sp/>compatible</highlight></codeline>
<codeline><highlight class="normal">neither<sp/>with<sp/>2.0<sp/>nor<sp/>with<sp/>standard<sp/>node.js<sp/>`inherits`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>are<sp/>using<sp/>version<sp/>~1.0<sp/>and<sp/>planning<sp/>to<sp/>switch<sp/>to<sp/>~2.0,<sp/>be</highlight></codeline>
<codeline><highlight class="normal">careful:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>new<sp/>version<sp/>uses<sp/>`super_`<sp/>instead<sp/>of<sp/>`super`<sp/>for<sp/>referencing</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>superclass</highlight></codeline>
<codeline><highlight class="normal">*<sp/>new<sp/>version<sp/>overwrites<sp/>current<sp/>prototype<sp/>while<sp/>old<sp/>one<sp/>preserves<sp/>any</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>existing<sp/>fields<sp/>on<sp/>it</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/inherits/README.md"/>
  </compounddef>
</doxygen>
