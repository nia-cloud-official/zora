<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="md_backend_2node__modules_2path-to-regexp_2_readme" kind="page">
    <compoundname>md_backend_2node__modules_2path-to-regexp_2_readme</compoundname>
    <title>Path-to-RegExp</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="md_backend_2node__modules_2path-to-regexp_2_readme_1autotoc_md2684"/> Turn an Express-style path string such as <computeroutput>/user/:name</computeroutput> into a regular expression.</para>
<para><bold>Note:</bold> This is a legacy branch. You should upgrade to <computeroutput>1.x</computeroutput>.</para>
<sect1 id="md_backend_2node__modules_2path-to-regexp_2_readme_1autotoc_md2685">
<title>Usage</title><para><programlisting filename=".js"><codeline><highlight class="normal">var<sp/>pathToRegexp<sp/>=<sp/>require(&apos;path-to-regexp&apos;);</highlight></codeline>
</programlisting></para>
<sect2 id="md_backend_2node__modules_2path-to-regexp_2_readme_1autotoc_md2686">
<title>pathToRegexp(path, keys, options)</title><para><itemizedlist>
<listitem><para><bold>path</bold> A string in the express format, an array of such strings, or a regular expression</para>
</listitem><listitem><para><bold>keys</bold> An array to be populated with the keys present in the url. Once the function completes, this will be an array of strings.</para>
</listitem><listitem><para><bold>options</bold><itemizedlist>
<listitem><para><bold>options.sensitive</bold> Defaults to false, set this to true to make routes case sensitive</para>
</listitem><listitem><para><bold>options.strict</bold> Defaults to false, set this to true to make the trailing slash matter.</para>
</listitem><listitem><para><bold>options.end</bold> Defaults to true, set this to false to only match the prefix of the URL.</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><programlisting filename=".js"><codeline><highlight class="normal">var<sp/>keys<sp/>=<sp/>[];</highlight></codeline>
<codeline><highlight class="normal">var<sp/>exp<sp/>=<sp/>pathToRegexp(&apos;/foo/:bar&apos;,<sp/>keys);</highlight></codeline>
<codeline><highlight class="normal">//keys<sp/>=<sp/>[&apos;bar&apos;]</highlight></codeline>
<codeline><highlight class="normal">//exp<sp/>=<sp/>/^\/foo\/(?:([^\/]+?))\/?$/i</highlight></codeline>
</programlisting></para>
</sect2>
</sect1>
<sect1 id="md_backend_2node__modules_2path-to-regexp_2_readme_1autotoc_md2687">
<title>Live Demo</title><para>You can see a live demo of this library in use at <ulink url="http://forbeslindesay.github.com/express-route-tester/">express-route-tester</ulink>.</para>
</sect1>
<sect1 id="md_backend_2node__modules_2path-to-regexp_2_readme_1autotoc_md2688">
<title>License</title><para>MIT </para>
</sect1>
    </detaileddescription>
    <location file="backend/node_modules/path-to-regexp/Readme.md"/>
  </compounddef>
</doxygen>
