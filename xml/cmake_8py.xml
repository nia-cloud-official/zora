<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="cmake_8py" kind="file" language="Python">
    <compoundname>cmake.py</compoundname>
    <innerclass refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type" prot="public">gyp::generator::cmake::CMakeTargetType</innerclass>
    <innerclass refid="classgyp_1_1generator_1_1cmake_1_1_c_make_namer" prot="public">gyp::generator::cmake::CMakeNamer</innerclass>
    <innernamespace refid="namespacegyp">gyp</innernamespace>
    <innernamespace refid="namespacegyp_1_1generator">gyp::generator</innernamespace>
    <innernamespace refid="namespacegyp_1_1generator_1_1cmake">gyp::generator::cmake</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacegyp_1_1generator_1_1cmake" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>(c)<sp/>2013<sp/>Google<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a<sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;cmake<sp/>output<sp/>module</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">This<sp/>module<sp/>is<sp/>under<sp/>development<sp/>and<sp/>should<sp/>be<sp/>considered<sp/>experimental.</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">This<sp/>module<sp/>produces<sp/>cmake<sp/>(2.8.8+)<sp/>input<sp/>as<sp/>its<sp/>output.<sp/>One<sp/>CMakeLists.txt<sp/>is</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">created<sp/>for<sp/>each<sp/>configuration.</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">This<sp/>module&apos;s<sp/>original<sp/>purpose<sp/>was<sp/>to<sp/>support<sp/>editing<sp/>in<sp/>IDEs<sp/>like<sp/>KDevelop</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">which<sp/>use<sp/>CMake<sp/>for<sp/>project<sp/>management.<sp/>It<sp/>is<sp/>also<sp/>possible<sp/>to<sp/>use<sp/>CMake<sp/>to</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">generate<sp/>projects<sp/>for<sp/>other<sp/>IDEs<sp/>such<sp/>as<sp/>eclipse<sp/>cdt<sp/>and<sp/>code::blocks.<sp/>QtCreator</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">will<sp/>convert<sp/>the<sp/>CMakeLists.txt<sp/>to<sp/>a<sp/>code::blocks<sp/>cbp<sp/>for<sp/>the<sp/>editor<sp/>to<sp/>read,</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">but<sp/>build<sp/>using<sp/>CMake.<sp/>As<sp/>a<sp/>result<sp/>QtCreator<sp/>editor<sp/>is<sp/>unaware<sp/>of<sp/>compiler</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral">defines.<sp/>The<sp/>generated<sp/>CMakeLists.txt<sp/>can<sp/>also<sp/>be<sp/>used<sp/>to<sp/>build<sp/>on<sp/>Linux.<sp/>There</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">is<sp/>currently<sp/>no<sp/>support<sp/>for<sp/>building<sp/>on<sp/>platforms<sp/>other<sp/>than<sp/>Linux.</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">The<sp/>generated<sp/>CMakeLists.txt<sp/>should<sp/>properly<sp/>compile<sp/>all<sp/>projects.<sp/>However,</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral">there<sp/>is<sp/>a<sp/>mismatch<sp/>between<sp/>gyp<sp/>and<sp/>cmake<sp/>with<sp/>regard<sp/>to<sp/>linking.<sp/>All<sp/>attempts</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">are<sp/>made<sp/>to<sp/>work<sp/>around<sp/>this,<sp/>but<sp/>CMake<sp/>sometimes<sp/>sees<sp/>-Wl,--start-group<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">library<sp/>and<sp/>incorrectly<sp/>repeats<sp/>it.<sp/>As<sp/>a<sp/>result<sp/>the<sp/>output<sp/>of<sp/>this<sp/>generator</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral">should<sp/>not<sp/>be<sp/>relied<sp/>on<sp/>for<sp/>building.</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">When<sp/>using<sp/>with<sp/>kdevelop,<sp/>use<sp/>version<sp/>4.4+.<sp/>Previous<sp/>versions<sp/>of<sp/>kdevelop<sp/>will</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">not<sp/>be<sp/>able<sp/>to<sp/>find<sp/>the<sp/>header<sp/>file<sp/>directories<sp/>described<sp/>in<sp/>the<sp/>generated</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">CMakeLists.txt<sp/>file.</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>multiprocessing</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>signal</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1common" kindref="compound">gyp.common</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1xcode__emulation" kindref="compound">gyp.xcode_emulation</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespacegyp_1_1generator_1_1cmake_1a981698a95fde570641c2316fe84c202a" refkind="member"><highlight class="normal">_maketrans<sp/>=<sp/>str.maketrans</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="namespacegyp_1_1generator_1_1cmake_1a923d4a4182d98a65dfe0eda9b1a4ce0f" refkind="member"><highlight class="normal">generator_default_variables<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EXECUTABLE_PREFIX&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EXECUTABLE_SUFFIX&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;STATIC_LIB_PREFIX&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;lib&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;STATIC_LIB_SUFFIX&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;.a&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SHARED_LIB_PREFIX&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;lib&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SHARED_LIB_SUFFIX&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;.so&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SHARED_LIB_DIR&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;${builddir}/lib.${TOOLSET}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LIB_DIR&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;${obj}.${TOOLSET}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;INTERMEDIATE_DIR&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;${obj}.${TOOLSET}/${TARGET}/geni&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SHARED_INTERMEDIATE_DIR&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;${obj}/gen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PRODUCT_DIR&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;${builddir}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_PATH&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;${RULE_INPUT_PATH}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_DIRNAME&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;${RULE_INPUT_DIRNAME}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_NAME&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;${RULE_INPUT_NAME}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_ROOT&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;${RULE_INPUT_ROOT}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_EXT&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;${RULE_INPUT_EXT}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CONFIGURATION_NAME&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;${configuration}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="namespacegyp_1_1generator_1_1cmake_1a80a717ee3f2b7135d3a16a9ecb40d766" refkind="member"><highlight class="normal">FULL_PATH_VARS<sp/>=<sp/>(</highlight><highlight class="stringliteral">&quot;${CMAKE_CURRENT_LIST_DIR}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;${builddir}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;${obj}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="namespacegyp_1_1generator_1_1cmake_1aff7c3609068ccd5750c7fe11af2d9699" refkind="member"><highlight class="normal">generator_supports_multiple_toolsets<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="namespacegyp_1_1generator_1_1cmake_1aabdf70832f84f903f293f6089d0b175b" refkind="member"><highlight class="normal">generator_wants_static_library_dependencies_adjusted<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="namespacegyp_1_1generator_1_1cmake_1acd7efc87878a3be6d035efdce5b7f245" refkind="member"><highlight class="normal">COMPILABLE_EXTENSIONS<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.c&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;cc&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.cc&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;cxx&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.cpp&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;cxx&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.cxx&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;cxx&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.s&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="comment">#<sp/>cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;.S&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="comment">#<sp/>cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="namespacegyp_1_1generator_1_1cmake_1a843a0c5c56c7948ad31855e8365af79c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a843a0c5c56c7948ad31855e8365af79c" kindref="member">RemovePrefix</ref>(a,<sp/>prefix):</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>&apos;a&apos;<sp/>without<sp/>&apos;prefix&apos;<sp/>if<sp/>it<sp/>starts<sp/>with<sp/>&apos;prefix&apos;.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a[len(prefix)<sp/>:]<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>a.startswith(prefix)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>a</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="namespacegyp_1_1generator_1_1cmake_1af74a74f885cff322001b021547550c67" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1af74a74f885cff322001b021547550c67" kindref="member">CalculateVariables</ref>(default_variables,<sp/>params):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Calculate<sp/>additional<sp/>variables<sp/>for<sp/>use<sp/>in<sp/>the<sp/>build<sp/>(called<sp/>by<sp/>gyp).&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>default_variables.setdefault(</highlight><highlight class="stringliteral">&quot;OS&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacegyp_1_1common_1aeb48ab17a03cd7c40f5ad72fac713486" kindref="member">gyp.common.GetFlavor</ref>(params))</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="namespacegyp_1_1generator_1_1cmake_1ae8f4fce97aa1ab8ad3b9e3e23bcef2bb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1ae8f4fce97aa1ab8ad3b9e3e23bcef2bb" kindref="member">Compilable</ref>(filename):</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Return<sp/>true<sp/>if<sp/>the<sp/>file<sp/>is<sp/>compilable<sp/>(should<sp/>be<sp/>in<sp/>OBJS).&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>any(filename.endswith(e)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>e<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>COMPILABLE_EXTENSIONS)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="namespacegyp_1_1generator_1_1cmake_1a712638e8cc1a7dceef12a169d2b3a8ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a712638e8cc1a7dceef12a169d2b3a8ae" kindref="member">Linkable</ref>(filename):</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Return<sp/>true<sp/>if<sp/>the<sp/>file<sp/>is<sp/>linkable<sp/>(should<sp/>be<sp/>on<sp/>the<sp/>link<sp/>line).&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filename.endswith(</highlight><highlight class="stringliteral">&quot;.o&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="namespacegyp_1_1generator_1_1cmake_1aa66dc3f1850aeb8ac3b865044b3d9113" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1aa66dc3f1850aeb8ac3b865044b3d9113" kindref="member">NormjoinPathForceCMakeSource</ref>(base_path,<sp/>rel_path):</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Resolves<sp/>rel_path<sp/>against<sp/>base_path<sp/>and<sp/>returns<sp/>the<sp/>result.</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/>If<sp/>rel_path<sp/>is<sp/>an<sp/>absolute<sp/>path<sp/>it<sp/>is<sp/>returned<sp/>unchanged.</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/>Otherwise<sp/>it<sp/>is<sp/>resolved<sp/>against<sp/>base_path<sp/>and<sp/>normalized.</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/>If<sp/>the<sp/>result<sp/>is<sp/>a<sp/>relative<sp/>path,<sp/>it<sp/>is<sp/>forced<sp/>to<sp/>be<sp/>relative<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/>CMakeLists.txt.</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isabs(rel_path):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rel_path</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>any([rel_path.startswith(var)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>FULL_PATH_VARS]):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rel_path</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>do<sp/>we<sp/>need<sp/>to<sp/>check<sp/>base_path<sp/>for<sp/>absolute<sp/>variables<sp/>as<sp/>well?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.join(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;${CMAKE_CURRENT_LIST_DIR}&quot;</highlight><highlight class="normal">,<sp/>os.path.normpath(os.path.join(base_path,<sp/>rel_path))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="namespacegyp_1_1generator_1_1cmake_1ab9a54e8429ea4dafe901947062436230" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1ab9a54e8429ea4dafe901947062436230" kindref="member">NormjoinPath</ref>(base_path,<sp/>rel_path):</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Resolves<sp/>rel_path<sp/>against<sp/>base_path<sp/>and<sp/>returns<sp/>the<sp/>result.</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/>TODO:<sp/>what<sp/>is<sp/>this<sp/>really<sp/>used<sp/>for?</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/>If<sp/>rel_path<sp/>begins<sp/>with<sp/>&apos;$&apos;<sp/>it<sp/>is<sp/>returned<sp/>unchanged.</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/>Otherwise<sp/>it<sp/>is<sp/>resolved<sp/>against<sp/>base_path<sp/>if<sp/>relative,<sp/>then<sp/>normalized.</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rel_path.startswith(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>rel_path.startswith(</highlight><highlight class="stringliteral">&quot;${configuration}&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rel_path</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.normpath(os.path.join(base_path,<sp/>rel_path))</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="namespacegyp_1_1generator_1_1cmake_1a79eae0680ce728e6ff53796c3bfb08d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a79eae0680ce728e6ff53796c3bfb08d5" kindref="member">CMakeStringEscape</ref>(a):</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Escapes<sp/>the<sp/>string<sp/>&apos;a&apos;<sp/>for<sp/>use<sp/>inside<sp/>a<sp/>CMake<sp/>string.</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/>This<sp/>means<sp/>escaping</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/>&apos;\&apos;<sp/>otherwise<sp/>it<sp/>may<sp/>be<sp/>seen<sp/>as<sp/>modifying<sp/>the<sp/>next<sp/>character</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/>&apos;&quot;&apos;<sp/>otherwise<sp/>it<sp/>will<sp/>end<sp/>the<sp/>string</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/>&apos;;&apos;<sp/>otherwise<sp/>the<sp/>string<sp/>becomes<sp/>a<sp/>list</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/>The<sp/>following<sp/>do<sp/>not<sp/>need<sp/>to<sp/>be<sp/>escaped</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/>&apos;#&apos;<sp/>when<sp/>the<sp/>lexer<sp/>is<sp/>in<sp/>string<sp/>state,<sp/>this<sp/>does<sp/>not<sp/>start<sp/>a<sp/>comment</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/>The<sp/>following<sp/>are<sp/>yet<sp/>unknown</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/>&apos;$&apos;<sp/>generator<sp/>variables<sp/>(like<sp/>${obj})<sp/>must<sp/>not<sp/>be<sp/>escaped,</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>text<sp/>$<sp/>should<sp/>be<sp/>escaped</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>what<sp/>is<sp/>wanted<sp/>is<sp/>to<sp/>know<sp/>which<sp/>$<sp/>come<sp/>from<sp/>generator<sp/>variables</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.replace(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\\\\&quot;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\\;&quot;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\\&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="namespacegyp_1_1generator_1_1cmake_1a7d0a0ca26bce711a299e828414bac8da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a7d0a0ca26bce711a299e828414bac8da" kindref="member">SetFileProperty</ref>(output,<sp/>source_name,<sp/>property_name,<sp/>values,<sp/>sep):</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Given<sp/>a<sp/>set<sp/>of<sp/>source<sp/>file,<sp/>sets<sp/>the<sp/>given<sp/>property<sp/>on<sp/>them.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;set_source_files_properties(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(source_name)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/>PROPERTIES<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(property_name)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;<sp/>&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(<ref refid="namespacegyp_1_1generator_1_1cmake_1a79eae0680ce728e6ff53796c3bfb08d5" kindref="member">CMakeStringEscape</ref>(value))</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(sep)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;&quot;)\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="namespacegyp_1_1generator_1_1cmake_1ab89494855e015adc10efd214f16cf7c8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1ab89494855e015adc10efd214f16cf7c8" kindref="member">SetFilesProperty</ref>(output,<sp/>variable,<sp/>property_name,<sp/>values,<sp/>sep):</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Given<sp/>a<sp/>set<sp/>of<sp/>source<sp/>files,<sp/>sets<sp/>the<sp/>given<sp/>property<sp/>on<sp/>them.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;set_source_files_properties(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>variable)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/>PROPERTIES<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(property_name)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;<sp/>&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(<ref refid="namespacegyp_1_1generator_1_1cmake_1a79eae0680ce728e6ff53796c3bfb08d5" kindref="member">CMakeStringEscape</ref>(value))</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(sep)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;&quot;)\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(output,<sp/>target_name,<sp/>property_name,<sp/>values,<sp/>sep=&quot;&quot;):</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Given<sp/>a<sp/>target,<sp/>sets<sp/>the<sp/>given<sp/>property.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;set_target_properties(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(target_name)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/>PROPERTIES<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(property_name)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;<sp/>&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(<ref refid="namespacegyp_1_1generator_1_1cmake_1a79eae0680ce728e6ff53796c3bfb08d5" kindref="member">CMakeStringEscape</ref>(value))</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(sep)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;&quot;)\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/>variable_name,<sp/>value):</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Sets<sp/>a<sp/>CMake<sp/>variable.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;set(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(variable_name)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;<sp/>&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(<ref refid="namespacegyp_1_1generator_1_1cmake_1a79eae0680ce728e6ff53796c3bfb08d5" kindref="member">CMakeStringEscape</ref>(value))</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;&quot;)\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="namespacegyp_1_1generator_1_1cmake_1a930ecc27bac8e8eff33eb4523b82a5ba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a930ecc27bac8e8eff33eb4523b82a5ba" kindref="member">SetVariableList</ref>(output,<sp/>variable_name,<sp/>values):</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Sets<sp/>a<sp/>CMake<sp/>variable<sp/>to<sp/>a<sp/>list.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>values:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/>variable_name,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(values)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/>variable_name,<sp/>values[0])</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;list(APPEND<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(variable_name)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;\n<sp/><sp/>&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;&quot;\n<sp/><sp/>&quot;&apos;</highlight><highlight class="normal">.join([<ref refid="namespacegyp_1_1generator_1_1cmake_1a79eae0680ce728e6ff53796c3bfb08d5" kindref="member">CMakeStringEscape</ref>(value)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>values]))</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;&quot;)\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="namespacegyp_1_1generator_1_1cmake_1abf5ff1d9526ddbbba59ff260e20322d7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1abf5ff1d9526ddbbba59ff260e20322d7" kindref="member">UnsetVariable</ref>(output,<sp/>variable_name):</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Unsets<sp/>a<sp/>CMake<sp/>variable.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;unset(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(variable_name)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>variable_name,<sp/>prepend=None):</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>prepend:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(prepend)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;${&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(variable_name)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type" kindref="compound">CMakeTargetType</ref>:</highlight></codeline>
<codeline lineno="221" refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type_1a3131fbe0d686b25933f4715ecbe7fb2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type_1a3131fbe0d686b25933f4715ecbe7fb2f" kindref="member">__init__</ref>(self,<sp/>command,<sp/>modifier,<sp/>property_modifier):</highlight></codeline>
<codeline lineno="222" refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type_1abb23f5c771f7a909a48272a13a11c1e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type_1abb23f5c771f7a909a48272a13a11c1e0" kindref="member">command</ref><sp/>=<sp/>command</highlight></codeline>
<codeline lineno="223" refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type_1ac3295218a8ad2fd5161b8c4bcc347404" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type_1ac3295218a8ad2fd5161b8c4bcc347404" kindref="member">modifier</ref><sp/>=<sp/>modifier</highlight></codeline>
<codeline lineno="224" refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type_1ac1d7422dc2244526418d9e9550202c4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type_1ac1d7422dc2244526418d9e9550202c4f" kindref="member">property_modifier</ref><sp/>=<sp/>property_modifier</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="namespacegyp_1_1generator_1_1cmake_1a37ddd1972b7e8590fbf6ad0e3d6d28e5" refkind="member"><highlight class="normal">cmake_target_type_from_gyp_target_type<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;executable&quot;</highlight><highlight class="normal">:<sp/><ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type" kindref="compound">CMakeTargetType</ref>(</highlight><highlight class="stringliteral">&quot;add_executable&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RUNTIME&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;static_library&quot;</highlight><highlight class="normal">:<sp/><ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type" kindref="compound">CMakeTargetType</ref>(</highlight><highlight class="stringliteral">&quot;add_library&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;STATIC&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ARCHIVE&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;shared_library&quot;</highlight><highlight class="normal">:<sp/><ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type" kindref="compound">CMakeTargetType</ref>(</highlight><highlight class="stringliteral">&quot;add_library&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SHARED&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LIBRARY&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;loadable_module&quot;</highlight><highlight class="normal">:<sp/><ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type" kindref="compound">CMakeTargetType</ref>(</highlight><highlight class="stringliteral">&quot;add_library&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MODULE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LIBRARY&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">:<sp/><ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_target_type" kindref="compound">CMakeTargetType</ref>(</highlight><highlight class="stringliteral">&quot;add_custom_target&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SOURCES&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="namespacegyp_1_1generator_1_1cmake_1a0555c06a6f18f26c8dfde9490d618622" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a0555c06a6f18f26c8dfde9490d618622" kindref="member">StringToCMakeTargetName</ref>(a):</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Converts<sp/>the<sp/>given<sp/>string<sp/>&apos;a&apos;<sp/>to<sp/>a<sp/>valid<sp/>CMake<sp/>target<sp/>name.</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/>All<sp/>invalid<sp/>characters<sp/>are<sp/>replaced<sp/>by<sp/>&apos;_&apos;.</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/>Invalid<sp/>for<sp/>cmake:<sp/>&apos;<sp/>&apos;,<sp/>&apos;/&apos;,<sp/>&apos;(&apos;,<sp/>&apos;)&apos;,<sp/>&apos;&quot;&apos;</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/>Invalid<sp/>for<sp/>make:<sp/>&apos;:&apos;</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/>Invalid<sp/>for<sp/>unknown<sp/>reasons<sp/>but<sp/>cause<sp/>failures:<sp/>&apos;.&apos;</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.translate(<ref refid="namespacegyp_1_1generator_1_1cmake_1a981698a95fde570641c2316fe84c202a" kindref="member">_maketrans</ref>(</highlight><highlight class="stringliteral">&apos;<sp/>/():.&quot;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_______&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="namespacegyp_1_1generator_1_1cmake_1ab5b121f0489273f2a2150200c10ec415" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1ab5b121f0489273f2a2150200c10ec415" kindref="member">WriteActions</ref>(target_name,<sp/>actions,<sp/>extra_sources,<sp/>extra_deps,<sp/>path_to_gyp,<sp/>output):</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Write<sp/>CMake<sp/>for<sp/>the<sp/>&apos;actions&apos;<sp/>in<sp/>the<sp/>target.</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>target_name:<sp/>the<sp/>name<sp/>of<sp/>the<sp/>CMake<sp/>target<sp/>being<sp/>generated.</highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>actions:<sp/>the<sp/>Gyp<sp/>&apos;actions&apos;<sp/>dict<sp/>for<sp/>this<sp/>target.</highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>extra_sources:<sp/>[(&lt;cmake_src&gt;,<sp/>&lt;src&gt;)]<sp/>to<sp/>append<sp/>with<sp/>generated<sp/>source<sp/>files.</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>extra_deps:<sp/>[&lt;cmake_taget&gt;]<sp/>to<sp/>append<sp/>with<sp/>generated<sp/>targets.</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>path_to_gyp:<sp/>relative<sp/>path<sp/>from<sp/>CMakeLists.txt<sp/>being<sp/>generated<sp/>to</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>Gyp<sp/>file<sp/>in<sp/>which<sp/>the<sp/>target<sp/>being<sp/>generated<sp/>is<sp/>defined.</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>action<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>actions:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_name<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a0555c06a6f18f26c8dfde9490d618622" kindref="member">StringToCMakeTargetName</ref>(action[</highlight><highlight class="stringliteral">&quot;action_name&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_target_name<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;{target_name}__{action_name}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs<sp/>=<sp/>action[</highlight><highlight class="stringliteral">&quot;inputs&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs_name<sp/>=<sp/>action_target_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__input&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a930ecc27bac8e8eff33eb4523b82a5ba" kindref="member">SetVariableList</ref>(</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs_name,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="namespacegyp_1_1generator_1_1cmake_1aa66dc3f1850aeb8ac3b865044b3d9113" kindref="member">NormjoinPathForceCMakeSource</ref>(path_to_gyp,<sp/>dep)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inputs],</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs<sp/>=<sp/>action[</highlight><highlight class="stringliteral">&quot;outputs&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_outputs<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1aa66dc3f1850aeb8ac3b865044b3d9113" kindref="member">NormjoinPathForceCMakeSource</ref>(path_to_gyp,<sp/>out)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>out<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>outputs</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs_name<sp/>=<sp/>action_target_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__output&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a930ecc27bac8e8eff33eb4523b82a5ba" kindref="member">SetVariableList</ref>(output,<sp/>outputs_name,<sp/>cmake_outputs)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>up<sp/>a<sp/>list<sp/>of<sp/>outputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Collect<sp/>the<sp/>output<sp/>dirs<sp/>we&apos;ll<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirs<sp/>=<sp/>{dir<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dir<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(os.path.dirname(o)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>outputs)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dir}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>int(action.get(</highlight><highlight class="stringliteral">&quot;process_outputs_as_sources&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)):</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_sources.extend(zip(cmake_outputs,<sp/>outputs))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add_custom_command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;add_custom_command(OUTPUT<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>outputs_name)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(dirs)<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>directory<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dirs:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>COMMAND<sp/>${CMAKE_COMMAND}<sp/>-E<sp/>make_directory<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(directory)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>COMMAND<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(<ref refid="namespacegyp_1_1common_1a1681405bb09a2eda416079b3ed7de917" kindref="member">gyp.common.EncodePOSIXShellList</ref>(action[</highlight><highlight class="stringliteral">&quot;action&quot;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>DEPENDS<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>inputs_name)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>WORKING_DIRECTORY<sp/>${CMAKE_CURRENT_LIST_DIR}/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(path_to_gyp)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>COMMENT<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>action:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(action[</highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(action_target_name)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>VERBATIM\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add_custom_target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;add_custom_target(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(action_target_name)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/>DEPENDS<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>outputs_name)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/>SOURCES<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>inputs_name)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_deps.append(action_target_name)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="namespacegyp_1_1generator_1_1cmake_1abb4b7b3ad649787b82debc35939d0874" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1abb4b7b3ad649787b82debc35939d0874" kindref="member">NormjoinRulePathForceCMakeSource</ref>(base_path,<sp/>rel_path,<sp/>rule_source):</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rel_path.startswith((</highlight><highlight class="stringliteral">&quot;${RULE_INPUT_PATH}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;${RULE_INPUT_DIRNAME}&quot;</highlight><highlight class="normal">)):</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>any([rule_source.startswith(var)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>FULL_PATH_VARS]):</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rel_path</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1aa66dc3f1850aeb8ac3b865044b3d9113" kindref="member">NormjoinPathForceCMakeSource</ref>(base_path,<sp/>rel_path)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="namespacegyp_1_1generator_1_1cmake_1a0d654706899f964a89c6768c69149645" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a0d654706899f964a89c6768c69149645" kindref="member">WriteRules</ref>(target_name,<sp/>rules,<sp/>extra_sources,<sp/>extra_deps,<sp/>path_to_gyp,<sp/>output):</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Write<sp/>CMake<sp/>for<sp/>the<sp/>&apos;rules&apos;<sp/>in<sp/>the<sp/>target.</highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>target_name:<sp/>the<sp/>name<sp/>of<sp/>the<sp/>CMake<sp/>target<sp/>being<sp/>generated.</highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>actions:<sp/>the<sp/>Gyp<sp/>&apos;actions&apos;<sp/>dict<sp/>for<sp/>this<sp/>target.</highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>extra_sources:<sp/>[(&lt;cmake_src&gt;,<sp/>&lt;src&gt;)]<sp/>to<sp/>append<sp/>with<sp/>generated<sp/>source<sp/>files.</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>extra_deps:<sp/>[&lt;cmake_taget&gt;]<sp/>to<sp/>append<sp/>with<sp/>generated<sp/>targets.</highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>path_to_gyp:<sp/>relative<sp/>path<sp/>from<sp/>CMakeLists.txt<sp/>being<sp/>generated<sp/>to</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>Gyp<sp/>file<sp/>in<sp/>which<sp/>the<sp/>target<sp/>being<sp/>generated<sp/>is<sp/>defined.</highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rule<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>rules:</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rule_name<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a0555c06a6f18f26c8dfde9490d618622" kindref="member">StringToCMakeTargetName</ref>(target_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__&quot;</highlight><highlight class="normal"><sp/>+<sp/>rule[</highlight><highlight class="stringliteral">&quot;rule_name&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs<sp/>=<sp/>rule.get(</highlight><highlight class="stringliteral">&quot;inputs&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs_name<sp/>=<sp/>rule_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__input&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a930ecc27bac8e8eff33eb4523b82a5ba" kindref="member">SetVariableList</ref>(</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs_name,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="namespacegyp_1_1generator_1_1cmake_1aa66dc3f1850aeb8ac3b865044b3d9113" kindref="member">NormjoinPathForceCMakeSource</ref>(path_to_gyp,<sp/>dep)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inputs],</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs<sp/>=<sp/>rule[</highlight><highlight class="stringliteral">&quot;outputs&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_outputs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>count,<sp/>rule_source<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(rule.get(</highlight><highlight class="stringliteral">&quot;rule_sources&quot;</highlight><highlight class="normal">,<sp/>[])):</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_name<sp/>=<sp/>rule_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(count)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rule_source_dirname,<sp/>rule_source_basename<sp/>=<sp/>os.path.split(rule_source)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rule_source_root,<sp/>rule_source_ext<sp/>=<sp/>os.path.splitext(rule_source_basename)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_PATH&quot;</highlight><highlight class="normal">,<sp/>rule_source)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_DIRNAME&quot;</highlight><highlight class="normal">,<sp/>rule_source_dirname)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_NAME&quot;</highlight><highlight class="normal">,<sp/>rule_source_basename)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_ROOT&quot;</highlight><highlight class="normal">,<sp/>rule_source_root)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_EXT&quot;</highlight><highlight class="normal">,<sp/>rule_source_ext)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>up<sp/>a<sp/>list<sp/>of<sp/>outputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Collect<sp/>the<sp/>output<sp/>dirs<sp/>we&apos;ll<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirs<sp/>=<sp/>{dir<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dir<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(os.path.dirname(o)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>outputs)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dir}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>variables<sp/>for<sp/>the<sp/>output,<sp/>as<sp/>&apos;local&apos;<sp/>variable<sp/>will<sp/>be<sp/>unset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>these_outputs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>output_index,<sp/>out<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(outputs):</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_name<sp/>=<sp/>action_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(output_index)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_name,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1abb4b7b3ad649787b82debc35939d0874" kindref="member">NormjoinRulePathForceCMakeSource</ref>(path_to_gyp,<sp/>out,<sp/>rule_source),</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>int(rule.get(</highlight><highlight class="stringliteral">&quot;process_outputs_as_sources&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)):</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_sources.append((</highlight><highlight class="stringliteral">&quot;${&quot;</highlight><highlight class="normal"><sp/>+<sp/>output_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">,<sp/>out))</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>these_outputs.append(</highlight><highlight class="stringliteral">&quot;${&quot;</highlight><highlight class="normal"><sp/>+<sp/>output_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_outputs.append(</highlight><highlight class="stringliteral">&quot;${&quot;</highlight><highlight class="normal"><sp/>+<sp/>output_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add_custom_command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;add_custom_command(OUTPUT\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>out<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>these_outputs:</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(out)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>directory<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dirs:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>COMMAND<sp/>${CMAKE_COMMAND}<sp/>-E<sp/>make_directory<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(directory)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>COMMAND<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(<ref refid="namespacegyp_1_1common_1a1681405bb09a2eda416079b3ed7de917" kindref="member">gyp.common.EncodePOSIXShellList</ref>(rule[</highlight><highlight class="stringliteral">&quot;action&quot;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>DEPENDS<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>inputs_name)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(<ref refid="namespacegyp_1_1generator_1_1cmake_1ab9a54e8429ea4dafe901947062436230" kindref="member">NormjoinPath</ref>(path_to_gyp,<sp/>rule_source))</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>CMAKE_CURRENT_LIST_DIR<sp/>is<sp/>where<sp/>the<sp/>CMakeLists.txt<sp/>lives.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>cwd<sp/>is<sp/>the<sp/>current<sp/>build<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>WORKING_DIRECTORY<sp/>${CMAKE_CURRENT_LIST_DIR}/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(path_to_gyp)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>COMMENT<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>rule:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(rule[</highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(action_name)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>VERBATIM\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1abf5ff1d9526ddbbba59ff260e20322d7" kindref="member">UnsetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_PATH&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1abf5ff1d9526ddbbba59ff260e20322d7" kindref="member">UnsetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_DIRNAME&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1abf5ff1d9526ddbbba59ff260e20322d7" kindref="member">UnsetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_NAME&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1abf5ff1d9526ddbbba59ff260e20322d7" kindref="member">UnsetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_ROOT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1abf5ff1d9526ddbbba59ff260e20322d7" kindref="member">UnsetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;RULE_INPUT_EXT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add_custom_target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;add_custom_target(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(rule_name)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/>DEPENDS\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>out<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>var_outputs:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(out)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;SOURCES<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>inputs_name)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rule_source<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>rule.get(</highlight><highlight class="stringliteral">&quot;rule_sources&quot;</highlight><highlight class="normal">,<sp/>[]):</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(<ref refid="namespacegyp_1_1generator_1_1cmake_1ab9a54e8429ea4dafe901947062436230" kindref="member">NormjoinPath</ref>(path_to_gyp,<sp/>rule_source))</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_deps.append(rule_name)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="namespacegyp_1_1generator_1_1cmake_1a737edd52c80f9615e11c4f19bd16c884" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a737edd52c80f9615e11c4f19bd16c884" kindref="member">WriteCopies</ref>(target_name,<sp/>copies,<sp/>extra_deps,<sp/>path_to_gyp,<sp/>output):</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Write<sp/>CMake<sp/>for<sp/>the<sp/>&apos;copies&apos;<sp/>in<sp/>the<sp/>target.</highlight></codeline>
<codeline lineno="456"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="457"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="458"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>target_name:<sp/>the<sp/>name<sp/>of<sp/>the<sp/>CMake<sp/>target<sp/>being<sp/>generated.</highlight></codeline>
<codeline lineno="459"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>actions:<sp/>the<sp/>Gyp<sp/>&apos;actions&apos;<sp/>dict<sp/>for<sp/>this<sp/>target.</highlight></codeline>
<codeline lineno="460"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>extra_deps:<sp/>[&lt;cmake_taget&gt;]<sp/>to<sp/>append<sp/>with<sp/>generated<sp/>targets.</highlight></codeline>
<codeline lineno="461"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>path_to_gyp:<sp/>relative<sp/>path<sp/>from<sp/>CMakeLists.txt<sp/>being<sp/>generated<sp/>to</highlight></codeline>
<codeline lineno="462"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>Gyp<sp/>file<sp/>in<sp/>which<sp/>the<sp/>target<sp/>being<sp/>generated<sp/>is<sp/>defined.</highlight></codeline>
<codeline lineno="463"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>copy_name<sp/>=<sp/>target_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__copies&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>CMake<sp/>gets<sp/>upset<sp/>with<sp/>custom<sp/>targets<sp/>with<sp/>OUTPUT<sp/>which<sp/>specify<sp/>no<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>have_copies<sp/>=<sp/>any(copy[</highlight><highlight class="stringliteral">&quot;files&quot;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>copy<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>copies)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>have_copies:</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;add_custom_target(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(copy_name)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_deps.append(copy_name)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Copy:</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>ext,<sp/>command):</highlight></codeline>
<codeline lineno="477" refid="namespacegyp_1_1generator_1_1cmake_1ab6739b00b24253cda4a1734eb0b4ff7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.cmake_inputs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="478" refid="namespacegyp_1_1generator_1_1cmake_1abd137737b1c9d8b1ddc8fe99f7fadae8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.cmake_outputs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="479" refid="namespacegyp_1_1generator_1_1cmake_1aae2b82e1000e256799bbccce72963cc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.gyp_inputs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="480" refid="namespacegyp_1_1generator_1_1cmake_1a86d75c5264ad2d90c7700fc148cd87c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.gyp_outputs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="481" refid="namespacegyp_1_1generator_1_1cmake_1a79c7b8e85ff7fc007c2664ada87f6d04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.ext<sp/>=<sp/>ext</highlight></codeline>
<codeline lineno="482" refid="namespacegyp_1_1generator_1_1cmake_1a90853b48bb0c9e7753bc6041b1332044" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.inputs_name<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="namespacegyp_1_1generator_1_1cmake_1a408c8117bb18232d25ac0f3c9d6c521c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.outputs_name<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="namespacegyp_1_1generator_1_1cmake_1a3de86707eee30a1d0d8c4ee365485ecb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.command<sp/>=<sp/>command</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>file_copy<sp/>=<sp/>Copy(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;copy&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>dir_copy<sp/>=<sp/>Copy(</highlight><highlight class="stringliteral">&quot;_dirs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;copy_directory&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>copy<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>copies:</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>files<sp/>=<sp/>copy[</highlight><highlight class="stringliteral">&quot;files&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination<sp/>=<sp/>copy[</highlight><highlight class="stringliteral">&quot;destination&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>src<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files:</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>os.path.normpath(src)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basename<sp/>=<sp/>os.path.split(path)[1]</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>os.path.join(destination,<sp/>basename)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>file_copy<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.basename(src)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>dir_copy</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy.cmake_inputs.append(<ref refid="namespacegyp_1_1generator_1_1cmake_1aa66dc3f1850aeb8ac3b865044b3d9113" kindref="member">NormjoinPathForceCMakeSource</ref>(path_to_gyp,<sp/>src))</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy.cmake_outputs.append(<ref refid="namespacegyp_1_1generator_1_1cmake_1aa66dc3f1850aeb8ac3b865044b3d9113" kindref="member">NormjoinPathForceCMakeSource</ref>(path_to_gyp,<sp/>dst))</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy.gyp_inputs.append(src)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy.gyp_outputs.append(dst)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>copy<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(file_copy,<sp/>dir_copy):</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>copy.cmake_inputs:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy.inputs_name<sp/>=<sp/>copy_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__input&quot;</highlight><highlight class="normal"><sp/>+<sp/>copy.ext</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a930ecc27bac8e8eff33eb4523b82a5ba" kindref="member">SetVariableList</ref>(output,<sp/>copy.inputs_name,<sp/>copy.cmake_inputs)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy.outputs_name<sp/>=<sp/>copy_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__output&quot;</highlight><highlight class="normal"><sp/>+<sp/>copy.ext</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a930ecc27bac8e8eff33eb4523b82a5ba" kindref="member">SetVariableList</ref>(output,<sp/>copy.outputs_name,<sp/>copy.cmake_outputs)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add_custom_command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;add_custom_command(\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;OUTPUT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>copy<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(file_copy,<sp/>dir_copy):</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>copy.outputs_name:</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>copy.outputs_name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>copy<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(file_copy,<sp/>dir_copy):</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>src,<sp/>dst<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(copy.gyp_inputs,<sp/>copy.gyp_outputs):</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>&apos;cmake<sp/>-E<sp/>copy<sp/>src<sp/>dst&apos;<sp/>will<sp/>create<sp/>the<sp/>&apos;dst&apos;<sp/>directory<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;COMMAND<sp/>${CMAKE_COMMAND}<sp/>-E<sp/>%s<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>copy.command)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(src)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(dst)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;DEPENDS&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>copy<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(file_copy,<sp/>dir_copy):</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>copy.inputs_name:</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>copy.inputs_name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;WORKING_DIRECTORY<sp/>${CMAKE_CURRENT_LIST_DIR}/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(path_to_gyp)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;COMMENT<sp/>Copying<sp/>for<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(target_name)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;VERBATIM\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add_custom_target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;add_custom_target(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(copy_name)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/>DEPENDS&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>copy<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(file_copy,<sp/>dir_copy):</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>copy.outputs_name:</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>copy.outputs_name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/>SOURCES&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>file_copy.inputs_name:</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>file_copy.inputs_name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>extra_deps.append(copy_name)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="namespacegyp_1_1generator_1_1cmake_1a29509c41d435a18143236c17619676ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a29509c41d435a18143236c17619676ad" kindref="member">CreateCMakeTargetBaseName</ref>(qualified_target):</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;This<sp/>is<sp/>the<sp/>name<sp/>we<sp/>would<sp/>like<sp/>the<sp/>target<sp/>to<sp/>have.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>_,<sp/>gyp_target_name,<sp/>gyp_target_toolset<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a51180f038e57ff79c30f6231d1d7958f" kindref="member">gyp.common.ParseQualifiedTarget</ref>(</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qualified_target</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>cmake_target_base_name<sp/>=<sp/>gyp_target_name</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>gyp_target_toolset<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>gyp_target_toolset<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;target&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_base_name<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>gyp_target_toolset</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a0555c06a6f18f26c8dfde9490d618622" kindref="member">StringToCMakeTargetName</ref>(cmake_target_base_name)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="namespacegyp_1_1generator_1_1cmake_1ac789de759005fa0869e11671ede16bb0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1ac789de759005fa0869e11671ede16bb0" kindref="member">CreateCMakeTargetFullName</ref>(qualified_target):</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;An<sp/>unambiguous<sp/>name<sp/>for<sp/>the<sp/>target.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>gyp_file,<sp/>gyp_target_name,<sp/>gyp_target_toolset<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a51180f038e57ff79c30f6231d1d7958f" kindref="member">gyp.common.ParseQualifiedTarget</ref>(</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qualified_target</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>cmake_target_full_name<sp/>=<sp/>gyp_file<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>gyp_target_name</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>gyp_target_toolset<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>gyp_target_toolset<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;target&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_full_name<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>gyp_target_toolset</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a0555c06a6f18f26c8dfde9490d618622" kindref="member">StringToCMakeTargetName</ref>(cmake_target_full_name)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="classgyp_1_1generator_1_1cmake_1_1_c_make_namer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_namer" kindref="compound">CMakeNamer</ref>:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Converts<sp/>Gyp<sp/>target<sp/>names<sp/>into<sp/>CMake<sp/>target<sp/>names.</highlight></codeline>
<codeline lineno="586"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="587"><highlight class="stringliteral"><sp/><sp/>CMake<sp/>requires<sp/>that<sp/>target<sp/>names<sp/>be<sp/>globally<sp/>unique.<sp/>One<sp/>way<sp/>to<sp/>ensure</highlight></codeline>
<codeline lineno="588"><highlight class="stringliteral"><sp/><sp/>this<sp/>is<sp/>to<sp/>fully<sp/>qualify<sp/>the<sp/>names<sp/>of<sp/>the<sp/>targets.<sp/>Unfortunately,<sp/>this</highlight></codeline>
<codeline lineno="589"><highlight class="stringliteral"><sp/><sp/>ends<sp/>up<sp/>with<sp/>all<sp/>targets<sp/>looking<sp/>like<sp/>&quot;chrome_chrome_gyp_chrome&quot;<sp/>instead</highlight></codeline>
<codeline lineno="590"><highlight class="stringliteral"><sp/><sp/>of<sp/>just<sp/>&quot;chrome&quot;.<sp/>If<sp/>this<sp/>generator<sp/>were<sp/>only<sp/>interested<sp/>in<sp/>building,<sp/>it</highlight></codeline>
<codeline lineno="591"><highlight class="stringliteral"><sp/><sp/>would<sp/>be<sp/>possible<sp/>to<sp/>fully<sp/>qualify<sp/>all<sp/>target<sp/>names,<sp/>then<sp/>create</highlight></codeline>
<codeline lineno="592"><highlight class="stringliteral"><sp/><sp/>unqualified<sp/>target<sp/>names<sp/>which<sp/>depend<sp/>on<sp/>all<sp/>qualified<sp/>targets<sp/>which</highlight></codeline>
<codeline lineno="593"><highlight class="stringliteral"><sp/><sp/>should<sp/>have<sp/>had<sp/>that<sp/>name.<sp/>This<sp/>is<sp/>more<sp/>or<sp/>less<sp/>what<sp/>the<sp/>&apos;make&apos;<sp/>generator</highlight></codeline>
<codeline lineno="594"><highlight class="stringliteral"><sp/><sp/>does<sp/>with<sp/>aliases.<sp/>However,<sp/>one<sp/>goal<sp/>of<sp/>this<sp/>generator<sp/>is<sp/>to<sp/>create<sp/>CMake</highlight></codeline>
<codeline lineno="595"><highlight class="stringliteral"><sp/><sp/>files<sp/>for<sp/>use<sp/>with<sp/>IDEs,<sp/>and<sp/>fully<sp/>qualified<sp/>names<sp/>are<sp/>not<sp/>as<sp/>user</highlight></codeline>
<codeline lineno="596"><highlight class="stringliteral"><sp/><sp/>friendly.</highlight></codeline>
<codeline lineno="597"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="598"><highlight class="stringliteral"><sp/><sp/>Since<sp/>target<sp/>name<sp/>collision<sp/>is<sp/>rare,<sp/>we<sp/>do<sp/>the<sp/>above<sp/>only<sp/>when<sp/>required.</highlight></codeline>
<codeline lineno="599"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="600"><highlight class="stringliteral"><sp/><sp/>Toolset<sp/>variants<sp/>are<sp/>always<sp/>qualified<sp/>from<sp/>the<sp/>base,<sp/>as<sp/>this<sp/>is<sp/>required<sp/>for</highlight></codeline>
<codeline lineno="601"><highlight class="stringliteral"><sp/><sp/>building.<sp/>However,<sp/>it<sp/>also<sp/>makes<sp/>sense<sp/>for<sp/>an<sp/>IDE,<sp/>as<sp/>it<sp/>is<sp/>possible<sp/>for</highlight></codeline>
<codeline lineno="602"><highlight class="stringliteral"><sp/><sp/>defines<sp/>to<sp/>be<sp/>different.</highlight></codeline>
<codeline lineno="603"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605" refid="classgyp_1_1generator_1_1cmake_1_1_c_make_namer_1a9604710153af24a49404fd54fb386d56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_namer_1a9604710153af24a49404fd54fb386d56" kindref="member">__init__</ref>(self,<sp/>target_list):</highlight></codeline>
<codeline lineno="606" refid="classgyp_1_1generator_1_1cmake_1_1_c_make_namer_1a2a5d7504cb815c92d8b834684e9d4d06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_namer_1a2a5d7504cb815c92d8b834684e9d4d06" kindref="member">cmake_target_base_names_conficting</ref><sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_base_names_seen<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>qualified_target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_list:</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_base_name<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a29509c41d435a18143236c17619676ad" kindref="member">CreateCMakeTargetBaseName</ref>(qualified_target)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cmake_target_base_name<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>cmake_target_base_names_seen:</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_base_names_seen.add(cmake_target_base_name)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_namer_1a2a5d7504cb815c92d8b834684e9d4d06" kindref="member">cmake_target_base_names_conficting</ref>.add(cmake_target_base_name)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="classgyp_1_1generator_1_1cmake_1_1_c_make_namer_1ae959d947bc1c2fbbc2b4198f0a44839f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_namer_1ae959d947bc1c2fbbc2b4198f0a44839f" kindref="member">CreateCMakeTargetName</ref>(self,<sp/>qualified_target):</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_name<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a29509c41d435a18143236c17619676ad" kindref="member">CreateCMakeTargetBaseName</ref>(qualified_target)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>base_name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_namer_1a2a5d7504cb815c92d8b834684e9d4d06" kindref="member">cmake_target_base_names_conficting</ref>:</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1ac789de759005fa0869e11671ede16bb0" kindref="member">CreateCMakeTargetFullName</ref>(qualified_target)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_name</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="namespacegyp_1_1generator_1_1cmake_1a03c12668c7f3b1764561e6d887e482b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a03c12668c7f3b1764561e6d887e482b3" kindref="member">WriteTarget</ref>(</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>namer,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>qualified_target,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>target_dicts,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>build_dir,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>config_to_use,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>options,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>generator_flags,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>all_qualified_targets,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>flavor,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="635"><highlight class="normal">):</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>make<sp/>generator<sp/>does<sp/>this<sp/>always.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>It<sp/>would<sp/>be<sp/>nice<sp/>to<sp/>be<sp/>able<sp/>to<sp/>tell<sp/>CMake<sp/>all<sp/>dependencies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>circular_libs<sp/>=<sp/>generator_flags.get(</highlight><highlight class="stringliteral">&quot;circular&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>generator_flags.get(</highlight><highlight class="stringliteral">&quot;standalone&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n#&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(qualified_target)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>gyp_file,<sp/>_,<sp/>_<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a51180f038e57ff79c30f6231d1d7958f" kindref="member">gyp.common.ParseQualifiedTarget</ref>(qualified_target)</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>rel_gyp_file<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a8533ebdd9774c22ee7f7450c54239796" kindref="member">gyp.common.RelativePath</ref>(gyp_file,<sp/>options.toplevel_dir)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>rel_gyp_dir<sp/>=<sp/>os.path.dirname(rel_gyp_file)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Relative<sp/>path<sp/>from<sp/>build<sp/>dir<sp/>to<sp/>top<sp/>dir.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>build_to_top<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a444243e74701615d1cdb73c45ab80575" kindref="member">gyp.common.InvertRelativePath</ref>(build_dir,<sp/>options.toplevel_dir)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Relative<sp/>path<sp/>from<sp/>build<sp/>dir<sp/>to<sp/>gyp<sp/>dir.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>build_to_gyp<sp/>=<sp/>os.path.join(build_to_top,<sp/>rel_gyp_dir)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>path_from_cmakelists_to_gyp<sp/>=<sp/>build_to_gyp</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>spec<sp/>=<sp/>target_dicts.get(qualified_target,<sp/>{})</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>config<sp/>=<sp/>spec.get(</highlight><highlight class="stringliteral">&quot;configurations&quot;</highlight><highlight class="normal">,<sp/>{}).get(config_to_use,<sp/>{})</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>xcode_settings<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flavor<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mac&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcode_settings<sp/>=<sp/><ref refid="classgyp_1_1xcode__emulation_1_1_xcode_settings" kindref="compound">gyp.xcode_emulation.XcodeSettings</ref>(spec)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>target_name<sp/>=<sp/>spec.get(</highlight><highlight class="stringliteral">&quot;target_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&lt;missing<sp/>target<sp/>name&gt;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>target_type<sp/>=<sp/>spec.get(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&lt;missing<sp/>target<sp/>type&gt;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>target_toolset<sp/>=<sp/>spec.get(</highlight><highlight class="stringliteral">&quot;toolset&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>cmake_target_type<sp/>=<sp/>cmake_target_type_from_gyp_target_type.get(target_type)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cmake_target_type<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Target<sp/>%s<sp/>has<sp/>unknown<sp/>target<sp/>type<sp/>%s,<sp/>skipping.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>(target_name,<sp/>target_type)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;TARGET&quot;</highlight><highlight class="normal">,<sp/>target_name)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;TOOLSET&quot;</highlight><highlight class="normal">,<sp/>target_toolset)</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>cmake_target_name<sp/>=<sp/>namer.CreateCMakeTargetName(qualified_target)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>extra_sources<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>extra_deps<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Actions<sp/>must<sp/>come<sp/>first,<sp/>since<sp/>they<sp/>can<sp/>generate<sp/>more<sp/>OBJs<sp/>for<sp/>use<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;actions&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>spec:</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1ab5b121f0489273f2a2150200c10ec415" kindref="member">WriteActions</ref>(</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_name,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec[</highlight><highlight class="stringliteral">&quot;actions&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_sources,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_deps,</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_from_cmakelists_to_gyp,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Rules<sp/>must<sp/>be<sp/>early<sp/>like<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;rules&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>spec:</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a0d654706899f964a89c6768c69149645" kindref="member">WriteRules</ref>(</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_name,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec[</highlight><highlight class="stringliteral">&quot;rules&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_sources,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_deps,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_from_cmakelists_to_gyp,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Copies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;copies&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>spec:</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a737edd52c80f9615e11c4f19bd16c884" kindref="member">WriteCopies</ref>(</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_name,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec[</highlight><highlight class="stringliteral">&quot;copies&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_deps,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_from_cmakelists_to_gyp,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Target<sp/>and<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>srcs<sp/>=<sp/>spec.get(</highlight><highlight class="stringliteral">&quot;sources&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Gyp<sp/>separates<sp/>the<sp/>sheep<sp/>from<sp/>the<sp/>goats<sp/>based<sp/>on<sp/>file<sp/>extensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>full<sp/>separation<sp/>is<sp/>done<sp/>here<sp/>because<sp/>of<sp/>flag<sp/>handing<sp/>(see<sp/>below).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>s_sources<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>c_sources<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>cxx_sources<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>linkable_sources<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>other_sources<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>src<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>srcs:</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_,<sp/>ext<sp/>=<sp/>os.path.splitext(src)</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_type<sp/>=<sp/>COMPILABLE_EXTENSIONS.get(ext,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_norm_path<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1ab9a54e8429ea4dafe901947062436230" kindref="member">NormjoinPath</ref>(path_from_cmakelists_to_gyp,<sp/>src)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>src_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_sources.append(src_norm_path)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>src_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cc&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_sources.append(src_norm_path)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>src_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cxx&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cxx_sources.append(src_norm_path)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a712638e8cc1a7dceef12a169d2b3a8ae" kindref="member">Linkable</ref>(ext):</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkable_sources.append(src_norm_path)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_sources.append(src_norm_path)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>extra_source<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>extra_sources:</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src,<sp/>real_source<sp/>=<sp/>extra_source</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_,<sp/>ext<sp/>=<sp/>os.path.splitext(real_source)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_type<sp/>=<sp/>COMPILABLE_EXTENSIONS.get(ext,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>src_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_sources.append(src)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>src_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cc&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_sources.append(src)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>src_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cxx&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cxx_sources.append(src)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a712638e8cc1a7dceef12a169d2b3a8ae" kindref="member">Linkable</ref>(ext):</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkable_sources.append(src)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_sources.append(src)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>s_sources_name<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s_sources:</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_sources_name<sp/>=<sp/>cmake_target_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__asm_srcs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a930ecc27bac8e8eff33eb4523b82a5ba" kindref="member">SetVariableList</ref>(output,<sp/>s_sources_name,<sp/>s_sources)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>c_sources_name<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c_sources:</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_sources_name<sp/>=<sp/>cmake_target_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__c_srcs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a930ecc27bac8e8eff33eb4523b82a5ba" kindref="member">SetVariableList</ref>(output,<sp/>c_sources_name,<sp/>c_sources)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>cxx_sources_name<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cxx_sources:</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cxx_sources_name<sp/>=<sp/>cmake_target_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__cxx_srcs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a930ecc27bac8e8eff33eb4523b82a5ba" kindref="member">SetVariableList</ref>(output,<sp/>cxx_sources_name,<sp/>cxx_sources)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>linkable_sources_name<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>linkable_sources:</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkable_sources_name<sp/>=<sp/>cmake_target_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__linkable_srcs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a930ecc27bac8e8eff33eb4523b82a5ba" kindref="member">SetVariableList</ref>(output,<sp/>linkable_sources_name,<sp/>linkable_sources)</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>other_sources_name<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>other_sources:</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_sources_name<sp/>=<sp/>cmake_target_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__other_srcs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a930ecc27bac8e8eff33eb4523b82a5ba" kindref="member">SetVariableList</ref>(output,<sp/>other_sources_name,<sp/>other_sources)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>CMake<sp/>gets<sp/>upset<sp/>when<sp/>executable<sp/>targets<sp/>provide<sp/>no<sp/>sources.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>http://www.cmake.org/pipermail/cmake/2010-July/038461.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy_sources_name<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>has_sources<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_sources_name</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>c_sources_name</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>cxx_sources_name</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>linkable_sources_name</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>other_sources_name</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>target_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;executable&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>has_sources:</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummy_sources_name<sp/>=<sp/>cmake_target_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__dummy_srcs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,<sp/>dummy_sources_name,<sp/></highlight><highlight class="stringliteral">&quot;${obj}.${TOOLSET}/${TARGET}/genc/dummy.c&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;if(NOT<sp/>EXISTS<sp/>&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>dummy_sources_name)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;&quot;)\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>file(WRITE<sp/>&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>dummy_sources_name)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;&quot;<sp/>&quot;&quot;)\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;endif()\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>CMake<sp/>is<sp/>opposed<sp/>to<sp/>setting<sp/>linker<sp/>directories<sp/>and<sp/>considers<sp/>the<sp/>practice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>of<sp/>setting<sp/>linker<sp/>directories<sp/>dangerous.<sp/>Instead,<sp/>it<sp/>favors<sp/>the<sp/>use<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>find_library<sp/>and<sp/>passing<sp/>absolute<sp/>paths<sp/>to<sp/>target_link_libraries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>However,<sp/>CMake<sp/>does<sp/>provide<sp/>the<sp/>command<sp/>link_directories,<sp/>which<sp/>adds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>link<sp/>directories<sp/>to<sp/>targets<sp/>defined<sp/>after<sp/>it<sp/>is<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>As<sp/>a<sp/>result,<sp/>link_directories<sp/>must<sp/>come<sp/>before<sp/>the<sp/>target<sp/>definition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>CMake<sp/>unfortunately<sp/>has<sp/>no<sp/>means<sp/>of<sp/>removing<sp/>entries<sp/>from<sp/>LINK_DIRECTORIES.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>library_dirs<sp/>=<sp/>config.get(</highlight><highlight class="stringliteral">&quot;library_dirs&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>library_dirs<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;link_directories(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>library_dir<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>library_dirs:</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(<ref refid="namespacegyp_1_1generator_1_1cmake_1ab9a54e8429ea4dafe901947062436230" kindref="member">NormjoinPath</ref>(path_from_cmakelists_to_gyp,<sp/>library_dir))</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(cmake_target_type.command)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(cmake_target_name)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cmake_target_type.modifier<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(cmake_target_type.modifier)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s_sources_name:</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>s_sources_name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c_sources_name:</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>c_sources_name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cxx_sources_name:</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>cxx_sources_name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>linkable_sources_name:</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>linkable_sources_name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>other_sources_name:</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>other_sources_name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dummy_sources_name:</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>dummy_sources_name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Let<sp/>CMake<sp/>know<sp/>if<sp/>the<sp/>&apos;all&apos;<sp/>target<sp/>should<sp/>depend<sp/>on<sp/>this<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>exclude_from_all<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>qualified_target<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>all_qualified_targets<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;FALSE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(output,<sp/>cmake_target_name,<sp/></highlight><highlight class="stringliteral">&quot;EXCLUDE_FROM_ALL&quot;</highlight><highlight class="normal">,<sp/>exclude_from_all)</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>extra_target_name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>extra_deps:</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,<sp/>extra_target_name,<sp/></highlight><highlight class="stringliteral">&quot;EXCLUDE_FROM_ALL&quot;</highlight><highlight class="normal">,<sp/>exclude_from_all</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Output<sp/>name<sp/>and<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>target_type<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Link<sp/>as<sp/>&apos;C&apos;<sp/>if<sp/>there<sp/>are<sp/>no<sp/>other<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>c_sources<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>cxx_sources:</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(output,<sp/>cmake_target_name,<sp/></highlight><highlight class="stringliteral">&quot;LINKER_LANGUAGE&quot;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Mark<sp/>uncompiled<sp/>sources<sp/>as<sp/>uncompiled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>other_sources_name:</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;set_source_files_properties(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>other_sources_name,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;<sp/>PROPERTIES<sp/>HEADER_FILE_ONLY<sp/>&quot;TRUE&quot;)\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Mark<sp/>object<sp/>sources<sp/>as<sp/>linkable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>linkable_sources_name:</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;set_source_files_properties(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>other_sources_name,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;<sp/>PROPERTIES<sp/>EXTERNAL_OBJECT<sp/>&quot;TRUE&quot;)\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Output<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_output_directory<sp/>=<sp/>spec.get(</highlight><highlight class="stringliteral">&quot;product_dir&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>target_output_directory<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>target_type<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;executable&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;loadable_module&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_output_directory<sp/>=<sp/>generator_default_variables[</highlight><highlight class="stringliteral">&quot;PRODUCT_DIR&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>target_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;shared_library&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_output_directory<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;${builddir}/lib.${TOOLSET}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>spec.get(</highlight><highlight class="stringliteral">&quot;standalone_static_library&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_output_directory<sp/>=<sp/>generator_default_variables[</highlight><highlight class="stringliteral">&quot;PRODUCT_DIR&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_path<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a8533ebdd9774c22ee7f7450c54239796" kindref="member">gyp.common.RelativePath</ref>(</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.dirname(gyp_file),<sp/>options.toplevel_dir</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_output_directory<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;${obj}.${TOOLSET}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_output_directory<sp/>=<sp/>os.path.join(</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_output_directory,<sp/>base_path</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_output_directory<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1aa66dc3f1850aeb8ac3b865044b3d9113" kindref="member">NormjoinPathForceCMakeSource</ref>(</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_from_cmakelists_to_gyp,<sp/>target_output_directory</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_name,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_type.property_modifier<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_OUTPUT_DIRECTORY&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_output_directory,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Output<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_product_prefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_product_name<sp/>=<sp/>target_name</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_product_ext<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>target_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;static_library&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_library_prefix<sp/>=<sp/>generator_default_variables[</highlight><highlight class="stringliteral">&quot;STATIC_LIB_PREFIX&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_product_name<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a843a0c5c56c7948ad31855e8365af79c" kindref="member">RemovePrefix</ref>(</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_product_name,<sp/>static_library_prefix</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_product_prefix<sp/>=<sp/>static_library_prefix</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_product_ext<sp/>=<sp/>generator_default_variables[</highlight><highlight class="stringliteral">&quot;STATIC_LIB_SUFFIX&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>target_type<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;loadable_module&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shared_library&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_library_prefix<sp/>=<sp/>generator_default_variables[</highlight><highlight class="stringliteral">&quot;SHARED_LIB_PREFIX&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_product_name<sp/>=<sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a843a0c5c56c7948ad31855e8365af79c" kindref="member">RemovePrefix</ref>(</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_product_name,<sp/>shared_library_prefix</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_product_prefix<sp/>=<sp/>shared_library_prefix</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_product_ext<sp/>=<sp/>generator_default_variables[</highlight><highlight class="stringliteral">&quot;SHARED_LIB_SUFFIX&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>target_type<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;executable&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>What<sp/>output<sp/>file<sp/>should<sp/>be<sp/>generated?&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_type,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;target&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_name,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>product_prefix<sp/>=<sp/>spec.get(</highlight><highlight class="stringliteral">&quot;product_prefix&quot;</highlight><highlight class="normal">,<sp/>default_product_prefix)</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>product_name<sp/>=<sp/>spec.get(</highlight><highlight class="stringliteral">&quot;product_name&quot;</highlight><highlight class="normal">,<sp/>default_product_name)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>product_ext<sp/>=<sp/>spec.get(</highlight><highlight class="stringliteral">&quot;product_extension&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>product_ext:</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>product_ext<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+<sp/>product_ext</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>product_ext<sp/>=<sp/>default_product_ext</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(output,<sp/>cmake_target_name,<sp/></highlight><highlight class="stringliteral">&quot;PREFIX&quot;</highlight><highlight class="normal">,<sp/>product_prefix)</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_name,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_type.property_modifier<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_OUTPUT_NAME&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>product_name,</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(output,<sp/>cmake_target_name,<sp/></highlight><highlight class="stringliteral">&quot;SUFFIX&quot;</highlight><highlight class="normal">,<sp/>product_ext)</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>the<sp/>output<sp/>of<sp/>this<sp/>target<sp/>referenceable<sp/>as<sp/>a<sp/>source.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_output_basename<sp/>=<sp/>product_prefix<sp/>+<sp/>product_name<sp/>+<sp/>product_ext</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_output<sp/>=<sp/>os.path.join(</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_output_directory,<sp/>cmake_target_output_basename</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a7d0a0ca26bce711a299e828414bac8da" kindref="member">SetFileProperty</ref>(output,<sp/>cmake_target_output,<sp/></highlight><highlight class="stringliteral">&quot;GENERATED&quot;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includes<sp/>=<sp/>config.get(</highlight><highlight class="stringliteral">&quot;include_dirs&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>includes:</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>(target<sp/>include<sp/>directories)<sp/>is<sp/>what<sp/>requires<sp/>CMake<sp/>2.8.8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includes_name<sp/>=<sp/>cmake_target_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;__include_dirs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a930ecc27bac8e8eff33eb4523b82a5ba" kindref="member">SetVariableList</ref>(</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includes_name,</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1aa66dc3f1850aeb8ac3b865044b3d9113" kindref="member">NormjoinPathForceCMakeSource</ref>(path_from_cmakelists_to_gyp,<sp/>include)</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>include<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>includes</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;set_property(TARGET<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(cmake_target_name)</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/>APPEND<sp/>PROPERTY<sp/>INCLUDE_DIRECTORIES<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a01c1945107c4652c622293ac17f581b6" kindref="member">WriteVariable</ref>(output,<sp/>includes_name,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Defines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defines<sp/>=<sp/>config.get(</highlight><highlight class="stringliteral">&quot;defines&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defines<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,<sp/>cmake_target_name,<sp/></highlight><highlight class="stringliteral">&quot;COMPILE_DEFINITIONS&quot;</highlight><highlight class="normal">,<sp/>defines,<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compile<sp/>Flags<sp/>-<sp/>http://www.cmake.org/Bug/view.php?id=6493</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>CMake<sp/>currently<sp/>does<sp/>not<sp/>have<sp/>target<sp/>C<sp/>and<sp/>CXX<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>So,<sp/>instead<sp/>of<sp/>doing...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cflags_c<sp/>=<sp/>config.get(&apos;cflags_c&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>cflags_c<sp/>is<sp/>not<sp/>None:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>SetTargetProperty(output,<sp/>cmake_target_name,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;C_COMPILE_FLAGS&apos;,<sp/>cflags_c,<sp/>&apos;<sp/>&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cflags_cc<sp/>=<sp/>config.get(&apos;cflags_cc&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>cflags_cc<sp/>is<sp/>not<sp/>None:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>SetTargetProperty(output,<sp/>cmake_target_name,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;CXX_COMPILE_FLAGS&apos;,<sp/>cflags_cc,<sp/>&apos;<sp/>&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Instead<sp/>we<sp/>must...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cflags<sp/>=<sp/>config.get(</highlight><highlight class="stringliteral">&quot;cflags&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cflags_c<sp/>=<sp/>config.get(</highlight><highlight class="stringliteral">&quot;cflags_c&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cflags_cxx<sp/>=<sp/>config.get(</highlight><highlight class="stringliteral">&quot;cflags_cc&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>xcode_settings:</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cflags<sp/>=<sp/>xcode_settings.GetCflags(config_to_use)</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cflags_c<sp/>=<sp/>xcode_settings.GetCflagsC(config_to_use)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cflags_cxx<sp/>=<sp/>xcode_settings.GetCflagsCC(config_to_use)</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cflags_objc<sp/>=<sp/>xcode_settings.GetCflagsObjC(config_to_use)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cflags_objcc<sp/>=<sp/>xcode_settings.GetCflagsObjCC(config_to_use)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>cflags_c<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>c_sources)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>cflags_cxx<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>cxx_sources):</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(output,<sp/>cmake_target_name,<sp/></highlight><highlight class="stringliteral">&quot;COMPILE_FLAGS&quot;</highlight><highlight class="normal">,<sp/>cflags,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>c_sources<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(s_sources<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>cxx_sources):</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags.extend(cflags)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags.extend(cflags_c)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(output,<sp/>cmake_target_name,<sp/></highlight><highlight class="stringliteral">&quot;COMPILE_FLAGS&quot;</highlight><highlight class="normal">,<sp/>flags,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>cxx_sources<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(s_sources<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>c_sources):</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags.extend(cflags)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags.extend(cflags_cxx)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(output,<sp/>cmake_target_name,<sp/></highlight><highlight class="stringliteral">&quot;COMPILE_FLAGS&quot;</highlight><highlight class="normal">,<sp/>flags,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>This<sp/>is<sp/>broken,<sp/>one<sp/>cannot<sp/>generally<sp/>set<sp/>properties<sp/>on<sp/>files,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>as<sp/>other<sp/>targets<sp/>may<sp/>require<sp/>different<sp/>properties<sp/>on<sp/>the<sp/>same<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s_sources<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>cflags:</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1ab89494855e015adc10efd214f16cf7c8" kindref="member">SetFilesProperty</ref>(output,<sp/>s_sources_name,<sp/></highlight><highlight class="stringliteral">&quot;COMPILE_FLAGS&quot;</highlight><highlight class="normal">,<sp/>cflags,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>c_sources<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(cflags<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>cflags_c):</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags.extend(cflags)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags.extend(cflags_c)</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1ab89494855e015adc10efd214f16cf7c8" kindref="member">SetFilesProperty</ref>(output,<sp/>c_sources_name,<sp/></highlight><highlight class="stringliteral">&quot;COMPILE_FLAGS&quot;</highlight><highlight class="normal">,<sp/>flags,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cxx_sources<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(cflags<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>cflags_cxx):</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags.extend(cflags)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags.extend(cflags_cxx)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1ab89494855e015adc10efd214f16cf7c8" kindref="member">SetFilesProperty</ref>(output,<sp/>cxx_sources_name,<sp/></highlight><highlight class="stringliteral">&quot;COMPILE_FLAGS&quot;</highlight><highlight class="normal">,<sp/>flags,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Linker<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ldflags<sp/>=<sp/>config.get(</highlight><highlight class="stringliteral">&quot;ldflags&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ldflags<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(output,<sp/>cmake_target_name,<sp/></highlight><highlight class="stringliteral">&quot;LINK_FLAGS&quot;</highlight><highlight class="normal">,<sp/>ldflags,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>XCode<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcode_settings<sp/>=<sp/>config.get(</highlight><highlight class="stringliteral">&quot;xcode_settings&quot;</highlight><highlight class="normal">,<sp/>{})</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>xcode_setting,<sp/>xcode_value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>xcode_settings.items():</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a1b75c32a166b60d4a133c66085ac802d" kindref="member">SetTargetProperty</ref>(</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmake_target_name,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;XCODE_ATTRIBUTE_%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>xcode_setting,</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcode_value,</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(xcode_value,<sp/>str)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Note<sp/>on<sp/>Dependencies<sp/>and<sp/>Libraries:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>CMake<sp/>wants<sp/>to<sp/>handle<sp/>link<sp/>order,<sp/>resolving<sp/>the<sp/>link<sp/>line<sp/>up<sp/>front.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Gyp<sp/>does<sp/>not<sp/>retain<sp/>or<sp/>enforce<sp/>specifying<sp/>enough<sp/>information<sp/>to<sp/>do<sp/>so.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>So<sp/>do<sp/>as<sp/>other<sp/>gyp<sp/>generators<sp/>and<sp/>use<sp/>--start-group<sp/>and<sp/>--end-group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Give<sp/>CMake<sp/>as<sp/>little<sp/>information<sp/>as<sp/>possible<sp/>so<sp/>that<sp/>it<sp/>doesn&apos;t<sp/>mess<sp/>it<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Dependencies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>rawDeps<sp/>=<sp/>spec.get(</highlight><highlight class="stringliteral">&quot;dependencies&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>static_deps<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_deps<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>other_deps<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rawDep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>rawDeps:</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dep_cmake_name<sp/>=<sp/>namer.CreateCMakeTargetName(rawDep)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dep_spec<sp/>=<sp/>target_dicts.get(rawDep,<sp/>{})</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dep_target_type<sp/>=<sp/>dep_spec.get(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dep_target_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;static_library&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_deps.append(dep_cmake_name)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>dep_target_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;shared_library&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_deps.append(dep_cmake_name)</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_deps.append(dep_cmake_name)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ensure<sp/>all<sp/>external<sp/>dependencies<sp/>are<sp/>complete<sp/>before<sp/>internal<sp/>dependencies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>extra_deps<sp/>currently<sp/>only<sp/>depend<sp/>on<sp/>their<sp/>own<sp/>deps,<sp/>so<sp/>otherwise<sp/>run<sp/>early</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>static_deps<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>shared_deps<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>other_deps:</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>extra_dep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>extra_deps:</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;add_dependencies(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(extra_dep)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>deps<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(static_deps,<sp/>shared_deps,<sp/>other_deps):</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1common_1ad189f1004790fca1b7cdfc7c01dde48f" kindref="member">gyp.common.uniquer</ref>(deps):</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(dep)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>linkable<sp/>=<sp/>target_type<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;executable&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;loadable_module&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shared_library&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>other_deps.extend(extra_deps)</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>other_deps<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>linkable<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(static_deps<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>shared_deps)):</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;add_dependencies(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(cmake_target_name)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1common_1ad189f1004790fca1b7cdfc7c01dde48f" kindref="member">gyp.common.uniquer</ref>(other_deps):</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(dep)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>linkable:</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>deps<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(static_deps,<sp/>shared_deps):</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lib_dep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1common_1ad189f1004790fca1b7cdfc7c01dde48f" kindref="member">gyp.common.uniquer</ref>(deps):</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(lib_dep)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>linkable:</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>external_libs<sp/>=<sp/>[lib<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lib<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>spec.get(</highlight><highlight class="stringliteral">&quot;libraries&quot;</highlight><highlight class="normal">,<sp/>[])<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(lib)<sp/>&gt;<sp/>0]</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>external_libs<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>static_deps<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>shared_deps:</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;target_link_libraries(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(cmake_target_name)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>static_deps:</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_group<sp/>=<sp/>circular_libs<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(static_deps)<sp/>&gt;<sp/>1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>flavor<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;mac&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>write_group:</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;-Wl,--start-group\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1common_1ad189f1004790fca1b7cdfc7c01dde48f" kindref="member">gyp.common.uniquer</ref>(static_deps):</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(dep)</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>write_group:</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;-Wl,--end-group\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>shared_deps:</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dep<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1common_1ad189f1004790fca1b7cdfc7c01dde48f" kindref="member">gyp.common.uniquer</ref>(shared_deps):</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(dep)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>external_libs:</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lib<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1common_1ad189f1004790fca1b7cdfc7c01dde48f" kindref="member">gyp.common.uniquer</ref>(external_libs):</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(<ref refid="namespacegyp_1_1generator_1_1cmake_1a843a0c5c56c7948ad31855e8365af79c" kindref="member">RemovePrefix</ref>(lib,<sp/></highlight><highlight class="stringliteral">&quot;$(SDKROOT)&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&apos;&quot;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1abf5ff1d9526ddbbba59ff260e20322d7" kindref="member">UnsetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;TOOLSET&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1abf5ff1d9526ddbbba59ff260e20322d7" kindref="member">UnsetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;TARGET&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143" refid="namespacegyp_1_1generator_1_1cmake_1a165dcf6424838a1400df19070be8b2ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a165dcf6424838a1400df19070be8b2ff" kindref="member">GenerateOutputForConfig</ref>(target_list,<sp/>target_dicts,<sp/>data,<sp/>params,<sp/>config_to_use):</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>options<sp/>=<sp/>params[</highlight><highlight class="stringliteral">&quot;options&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>generator_flags<sp/>=<sp/>params[</highlight><highlight class="stringliteral">&quot;generator_flags&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>flavor<sp/>=<sp/><ref refid="namespacegyp_1_1common_1aeb48ab17a03cd7c40f5ad72fac713486" kindref="member">gyp.common.GetFlavor</ref>(params)</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>generator_dir:<sp/>relative<sp/>path<sp/>from<sp/>pwd<sp/>to<sp/>where<sp/>make<sp/>puts<sp/>build<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Makes<sp/>migrating<sp/>from<sp/>make<sp/>to<sp/>cmake<sp/>easier,<sp/>cmake<sp/>doesn&apos;t<sp/>put<sp/>anything<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>Gyp<sp/>configuration<sp/>creates<sp/>a<sp/>different<sp/>CMakeLists.txt<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>avoid<sp/>incompatibilities<sp/>between<sp/>Gyp<sp/>and<sp/>CMake<sp/>configurations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>generator_dir<sp/>=<sp/>os.path.relpath(options.generator_output<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>output_dir:<sp/>relative<sp/>path<sp/>from<sp/>generator_dir<sp/>to<sp/>the<sp/>build<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>output_dir<sp/>=<sp/>generator_flags.get(</highlight><highlight class="stringliteral">&quot;output_dir&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;out&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>build_dir:<sp/>relative<sp/>path<sp/>from<sp/>source<sp/>root<sp/>to<sp/>our<sp/>output<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>e.g.<sp/>&quot;out/Debug&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>build_dir<sp/>=<sp/>os.path.normpath(os.path.join(generator_dir,<sp/>output_dir,<sp/>config_to_use))</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>toplevel_build<sp/>=<sp/>os.path.join(options.toplevel_dir,<sp/>build_dir)</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>output_file<sp/>=<sp/>os.path.join(toplevel_build,<sp/></highlight><highlight class="stringliteral">&quot;CMakeLists.txt&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1common_1a62411b7ed9f7220bb951ea26e91e4e15" kindref="member">gyp.common.EnsureDirExists</ref>(output_file)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>open(output_file,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;cmake_minimum_required(VERSION<sp/>2.8.8<sp/>FATAL_ERROR)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;cmake_policy(VERSION<sp/>2.8.8)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>gyp_file,<sp/>project_target,<sp/>_<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a51180f038e57ff79c30f6231d1d7958f" kindref="member">gyp.common.ParseQualifiedTarget</ref>(target_list[-1])</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;project(&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(project_target)</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;configuration&quot;</highlight><highlight class="normal">,<sp/>config_to_use)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>cc<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>cxx<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>make_global_settings<sp/>=<sp/>data[gyp_file].get(</highlight><highlight class="stringliteral">&quot;make_global_settings&quot;</highlight><highlight class="normal">,<sp/>[])</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>build_to_top<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a444243e74701615d1cdb73c45ab80575" kindref="member">gyp.common.InvertRelativePath</ref>(build_dir,<sp/>options.toplevel_dir)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key,<sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>make_global_settings:</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;AR&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>=<sp/>os.path.join(build_to_top,<sp/>value)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;CC&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc<sp/>=<sp/>os.path.join(build_to_top,<sp/>value)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;CXX&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cxx<sp/>=<sp/>os.path.join(build_to_top,<sp/>value)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a9d4e917fb02c16790daa4d9d4abb0758" kindref="member">gyp.common.GetEnvironFallback</ref>([</highlight><highlight class="stringliteral">&quot;AR_target&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;AR&quot;</highlight><highlight class="normal">],<sp/>ar)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>cc<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a9d4e917fb02c16790daa4d9d4abb0758" kindref="member">gyp.common.GetEnvironFallback</ref>([</highlight><highlight class="stringliteral">&quot;CC_target&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CC&quot;</highlight><highlight class="normal">],<sp/>cc)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>cxx<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a9d4e917fb02c16790daa4d9d4abb0758" kindref="member">gyp.common.GetEnvironFallback</ref>([</highlight><highlight class="stringliteral">&quot;CXX_target&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CXX&quot;</highlight><highlight class="normal">],<sp/>cxx)</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ar:</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;CMAKE_AR&quot;</highlight><highlight class="normal">,<sp/>ar)</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cc:</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;CMAKE_C_COMPILER&quot;</highlight><highlight class="normal">,<sp/>cc)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cxx:</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;CMAKE_CXX_COMPILER&quot;</highlight><highlight class="normal">,<sp/>cxx)</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>following<sp/>appears<sp/>to<sp/>be<sp/>as-yet<sp/>undocumented.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>http://public.kitware.com/Bug/view.php?id=8392</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;enable_language(ASM)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ASM-ATT<sp/>does<sp/>not<sp/>support<sp/>.S<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>output.write(&apos;enable_language(ASM-ATT)\n&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cc:</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;CMAKE_ASM_COMPILER&quot;</highlight><highlight class="normal">,<sp/>cc)</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;builddir&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;${CMAKE_CURRENT_BINARY_DIR}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1affa21f36ef73a3d339d97ab0a5939559" kindref="member">SetVariable</ref>(output,<sp/></highlight><highlight class="stringliteral">&quot;obj&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;${builddir}/obj&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Undocumented/unsupported<sp/>(the<sp/>CMake<sp/>Java<sp/>generator<sp/>depends<sp/>on<sp/>it).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>CMake<sp/>by<sp/>default<sp/>names<sp/>the<sp/>object<sp/>resulting<sp/>from<sp/>foo.c<sp/>to<sp/>be<sp/>foo.c.o.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Gyp<sp/>traditionally<sp/>names<sp/>the<sp/>object<sp/>resulting<sp/>from<sp/>foo.c<sp/>foo.o.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>should<sp/>be<sp/>irrelevant,<sp/>but<sp/>some<sp/>targets<sp/>extract<sp/>.o<sp/>files<sp/>from<sp/>.a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>and<sp/>depend<sp/>on<sp/>the<sp/>name<sp/>of<sp/>the<sp/>extracted<sp/>.o<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;set(CMAKE_C_OUTPUT_EXTENSION_REPLACE<sp/>1)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;set(CMAKE_CXX_OUTPUT_EXTENSION_REPLACE<sp/>1)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Force<sp/>ninja<sp/>to<sp/>use<sp/>rsp<sp/>files.<sp/>Otherwise<sp/>link<sp/>and<sp/>ar<sp/>lines<sp/>can<sp/>get<sp/>too<sp/>long,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>resulting<sp/>in<sp/>&apos;Argument<sp/>list<sp/>too<sp/>long&apos;<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>However,<sp/>rsp<sp/>files<sp/>don&apos;t<sp/>work<sp/>correctly<sp/>on<sp/>Mac.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flavor<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;mac&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;set(CMAKE_NINJA_FORCE_RESPONSE_FILE<sp/>1)\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>output.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>namer<sp/>=<sp/><ref refid="classgyp_1_1generator_1_1cmake_1_1_c_make_namer" kindref="compound">CMakeNamer</ref>(target_list)</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>list<sp/>of<sp/>targets<sp/>upon<sp/>which<sp/>the<sp/>&apos;all&apos;<sp/>target<sp/>should<sp/>depend.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>CMake<sp/>has<sp/>it&apos;s<sp/>own<sp/>implicit<sp/>&apos;all&apos;<sp/>target,<sp/>one<sp/>is<sp/>not<sp/>created<sp/>explicitly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>all_qualified_targets<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>build_file<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>params[</highlight><highlight class="stringliteral">&quot;build_files&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>qualified_target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="namespacegyp_1_1common_1ae29bb9a2368860059458248dd76adeaa" kindref="member">gyp.common.AllTargets</ref>(</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_list,<sp/>target_dicts,<sp/>os.path.normpath(build_file)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_qualified_targets.add(qualified_target)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>qualified_target<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target_list:</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flavor<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mac&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gyp_file,<sp/>_,<sp/>_<sp/>=<sp/><ref refid="namespacegyp_1_1common_1a51180f038e57ff79c30f6231d1d7958f" kindref="member">gyp.common.ParseQualifiedTarget</ref>(qualified_target)</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec<sp/>=<sp/>target_dicts[qualified_target]</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1xcode__emulation_1a96f95b2f8275df1b0ce296a4559cbe32" kindref="member">gyp.xcode_emulation.MergeGlobalXcodeSettingsToSpec</ref>(data[gyp_file],<sp/>spec)</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a03c12668c7f3b1764561e6d887e482b3" kindref="member">WriteTarget</ref>(</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namer,</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qualified_target,</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_dicts,</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_dir,</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_to_use,</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options,</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generator_flags,</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_qualified_targets,</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flavor,</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>output.close()</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264" refid="namespacegyp_1_1generator_1_1cmake_1a6276444d71b2932afcefc124a27e3e70" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1a6276444d71b2932afcefc124a27e3e70" kindref="member">PerformBuild</ref>(data,<sp/>configurations,<sp/>params):</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>options<sp/>=<sp/>params[</highlight><highlight class="stringliteral">&quot;options&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>generator_flags<sp/>=<sp/>params[</highlight><highlight class="stringliteral">&quot;generator_flags&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>generator_dir:<sp/>relative<sp/>path<sp/>from<sp/>pwd<sp/>to<sp/>where<sp/>make<sp/>puts<sp/>build<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Makes<sp/>migrating<sp/>from<sp/>make<sp/>to<sp/>cmake<sp/>easier,<sp/>cmake<sp/>doesn&apos;t<sp/>put<sp/>anything<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>generator_dir<sp/>=<sp/>os.path.relpath(options.generator_output<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>output_dir:<sp/>relative<sp/>path<sp/>from<sp/>generator_dir<sp/>to<sp/>the<sp/>build<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>output_dir<sp/>=<sp/>generator_flags.get(</highlight><highlight class="stringliteral">&quot;output_dir&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;out&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>config_name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>configurations:</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>build_dir:<sp/>relative<sp/>path<sp/>from<sp/>source<sp/>root<sp/>to<sp/>our<sp/>output<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>e.g.<sp/>&quot;out/Debug&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_dir<sp/>=<sp/>os.path.normpath(</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.join(generator_dir,<sp/>output_dir,<sp/>config_name)</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;cmake&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-G&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Ninja&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Generating<sp/>[{config_name}]:<sp/>{arguments}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subprocess.check_call(arguments,<sp/>cwd=build_dir)</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;ninja&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-C&quot;</highlight><highlight class="normal">,<sp/>build_dir]</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Building<sp/>[{config_name}]:<sp/>{arguments}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subprocess.check_call(arguments)</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290" refid="namespacegyp_1_1generator_1_1cmake_1adf0ee6fbcd0833c9f6b2023f1e38a92b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1adf0ee6fbcd0833c9f6b2023f1e38a92b" kindref="member">CallGenerateOutputForConfig</ref>(arglist):</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Ignore<sp/>the<sp/>interrupt<sp/>signal<sp/>so<sp/>that<sp/>the<sp/>parent<sp/>process<sp/>catches<sp/>it<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>kills<sp/>all<sp/>multiprocessing<sp/>children.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>signal.signal(signal.SIGINT,<sp/>signal.SIG_IGN)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>target_list,<sp/>target_dicts,<sp/>data,<sp/>params,<sp/>config_name<sp/>=<sp/>arglist</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a165dcf6424838a1400df19070be8b2ff" kindref="member">GenerateOutputForConfig</ref>(target_list,<sp/>target_dicts,<sp/>data,<sp/>params,<sp/>config_name)</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299" refid="namespacegyp_1_1generator_1_1cmake_1af5d8157ae03ee9d229bf36a2e99d7dec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacegyp_1_1generator_1_1cmake_1af5d8157ae03ee9d229bf36a2e99d7dec" kindref="member">GenerateOutput</ref>(target_list,<sp/>target_dicts,<sp/>data,<sp/>params):</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>user_config<sp/>=<sp/>params.get(</highlight><highlight class="stringliteral">&quot;generator_flags&quot;</highlight><highlight class="normal">,<sp/>{}).get(</highlight><highlight class="stringliteral">&quot;config&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>user_config:</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a165dcf6424838a1400df19070be8b2ff" kindref="member">GenerateOutputForConfig</ref>(target_list,<sp/>target_dicts,<sp/>data,<sp/>params,<sp/>user_config)</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_names<sp/>=<sp/>target_dicts[target_list[0]][</highlight><highlight class="stringliteral">&quot;configurations&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>params[</highlight><highlight class="stringliteral">&quot;parallel&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool<sp/>=<sp/>multiprocessing.Pool(len(config_names))</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arglists<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>config_name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>config_names:</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arglists.append(</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(target_list,<sp/>target_dicts,<sp/>data,<sp/>params,<sp/>config_name)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool.map(CallGenerateOutputForConfig,<sp/>arglists)</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyboardInterrupt<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool.terminate()</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>e</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>config_name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>config_names:</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacegyp_1_1generator_1_1cmake_1a165dcf6424838a1400df19070be8b2ff" kindref="member">GenerateOutputForConfig</ref>(</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_list,<sp/>target_dicts,<sp/>data,<sp/>params,<sp/>config_name</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/node-gyp/gyp/pylib/gyp/generator/cmake.py"/>
  </compounddef>
</doxygen>
