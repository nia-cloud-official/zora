<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="class_napi_1_1_function_reference" kind="class" language="C++" prot="public">
    <compoundname>Napi::FunctionReference</compoundname>
    <basecompoundref refid="class_napi_1_1_reference" prot="public" virt="non-virtual">Napi::Reference&lt; Function &gt;</basecompoundref>
    <includes refid="napi_8h" local="no">napi.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_napi_1_1_function_reference_1ad06612ab0aed497f4fc77f9f883b9626" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Napi::FunctionReference::FunctionReference</definition>
        <argsstring>()</argsstring>
        <name>FunctionReference</name>
        <qualifiedname>Napi::FunctionReference::FunctionReference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1636" column="3" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3523" bodyend="3523"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1a7e52d1ba76907b02f0717e68f453c51e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Napi::FunctionReference::FunctionReference</definition>
        <argsstring>(napi_env env, napi_ref ref)</argsstring>
        <name>FunctionReference</name>
        <qualifiedname>Napi::FunctionReference::FunctionReference</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <param>
          <type>napi_ref</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1637" column="3" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3525" bodyend="3526"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1a3115ec69ff78a23381878b34f993817c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Napi::FunctionReference::FunctionReference</definition>
        <argsstring>(Reference&lt; Function &gt; &amp;&amp;other)</argsstring>
        <name>FunctionReference</name>
        <qualifiedname>Napi::FunctionReference::FunctionReference</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_reference" kindref="compound">Reference</ref>&lt; <ref refid="class_napi_1_1_function" kindref="compound">Function</ref> &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1640" column="3" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3528" bodyend="3529"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1a48bf05ed9283314fb02d75c26f64c132" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_function_reference" kindref="compound">FunctionReference</ref> &amp;</type>
        <definition>FunctionReference &amp; Napi::FunctionReference::operator=</definition>
        <argsstring>(Reference&lt; Function &gt; &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>Napi::FunctionReference::operator=</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_reference" kindref="compound">Reference</ref>&lt; <ref refid="class_napi_1_1_function" kindref="compound">Function</ref> &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1641" column="21" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3531" bodyend="3535"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1adb6695c2da7eead6f459dd85b85d87b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Napi::FunctionReference::FunctionReference</definition>
        <argsstring>(FunctionReference &amp;&amp;other)</argsstring>
        <name>FunctionReference</name>
        <qualifiedname>Napi::FunctionReference::FunctionReference</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_function_reference" kindref="compound">FunctionReference</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1642" column="3" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3537" bodyend="3538"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1afb94c60cd88387b8fef75bb3b5ccc8aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_function_reference" kindref="compound">FunctionReference</ref> &amp;</type>
        <definition>FunctionReference &amp; Napi::FunctionReference::operator=</definition>
        <argsstring>(FunctionReference &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>Napi::FunctionReference::operator=</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_function_reference" kindref="compound">FunctionReference</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1643" column="21" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3540" bodyend="3544"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1ae1cb5269b80adb90e94cce7d500e6c40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Napi::Value &gt; Napi::FunctionReference::operator()</definition>
        <argsstring>(const std::initializer_list&lt; napi_value &gt; &amp;args) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Napi::FunctionReference::operator()</qualifiedname>
        <param>
          <type>const std::initializer_list&lt; napi_value &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1646" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3546" bodyend="3561"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Function &gt;::_env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a1c0637ef48ebf7d811adaaaee73a0bfa" compoundref="napi-inl_8h" startline="4949" endline="4951">Napi::EscapableHandleScope::Env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a3d278b44f79ed180083cbdfa75a3f058" compoundref="napi-inl_8h" startline="4953" endline="4958">Napi::EscapableHandleScope::Escape</references>
        <references refid="class_napi_1_1_env_1a0e46584af1798aa5ea458d0044678432" compoundref="napi-inl_8h" startline="479" endline="485">Napi::Env::IsExceptionPending</references>
        <references refid="namespace_napi_1ae4cf10cf596c741e63d580a9c94994fc" compoundref="napi-inl_8h" startline="444" endline="446">Napi::Just</references>
        <references refid="class_napi_1_1_reference_1ae7f2d23d1f33cdbcfb4aa1b89193c5ae" compoundref="napi-inl_8h" startline="3266" endline="3275">Napi::Reference&lt; Function &gt;::Value</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1a85c93009d363fe6548318b4a73135ae3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Napi::Value &gt; Napi::FunctionReference::Call</definition>
        <argsstring>(const std::initializer_list&lt; napi_value &gt; &amp;args) const</argsstring>
        <name>Call</name>
        <qualifiedname>Napi::FunctionReference::Call</qualifiedname>
        <param>
          <type>const std::initializer_list&lt; napi_value &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1649" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3563" bodyend="3578"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Function &gt;::_env</references>
        <references refid="class_napi_1_1_function_1a9456e9548a1c7b9a57bc0bcae10c1a25" compoundref="napi-inl_8h" startline="2474" endline="2477">Napi::Function::Call</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a1c0637ef48ebf7d811adaaaee73a0bfa" compoundref="napi-inl_8h" startline="4949" endline="4951">Napi::EscapableHandleScope::Env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a3d278b44f79ed180083cbdfa75a3f058" compoundref="napi-inl_8h" startline="4953" endline="4958">Napi::EscapableHandleScope::Escape</references>
        <references refid="class_napi_1_1_env_1a0e46584af1798aa5ea458d0044678432" compoundref="napi-inl_8h" startline="479" endline="485">Napi::Env::IsExceptionPending</references>
        <references refid="namespace_napi_1ae4cf10cf596c741e63d580a9c94994fc" compoundref="napi-inl_8h" startline="444" endline="446">Napi::Just</references>
        <references refid="class_napi_1_1_reference_1ae7f2d23d1f33cdbcfb4aa1b89193c5ae" compoundref="napi-inl_8h" startline="3266" endline="3275">Napi::Reference&lt; Function &gt;::Value</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1a272413a6e6e1829a527278a8a6eacbb2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Napi::Value &gt; Napi::FunctionReference::Call</definition>
        <argsstring>(const std::vector&lt; napi_value &gt; &amp;args) const</argsstring>
        <name>Call</name>
        <qualifiedname>Napi::FunctionReference::Call</qualifiedname>
        <param>
          <type>const std::vector&lt; napi_value &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1651" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3580" bodyend="3595"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Function &gt;::_env</references>
        <references refid="class_napi_1_1_function_1a9456e9548a1c7b9a57bc0bcae10c1a25" compoundref="napi-inl_8h" startline="2474" endline="2477">Napi::Function::Call</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a1c0637ef48ebf7d811adaaaee73a0bfa" compoundref="napi-inl_8h" startline="4949" endline="4951">Napi::EscapableHandleScope::Env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a3d278b44f79ed180083cbdfa75a3f058" compoundref="napi-inl_8h" startline="4953" endline="4958">Napi::EscapableHandleScope::Escape</references>
        <references refid="class_napi_1_1_env_1a0e46584af1798aa5ea458d0044678432" compoundref="napi-inl_8h" startline="479" endline="485">Napi::Env::IsExceptionPending</references>
        <references refid="namespace_napi_1ae4cf10cf596c741e63d580a9c94994fc" compoundref="napi-inl_8h" startline="444" endline="446">Napi::Just</references>
        <references refid="class_napi_1_1_reference_1ae7f2d23d1f33cdbcfb4aa1b89193c5ae" compoundref="napi-inl_8h" startline="3266" endline="3275">Napi::Reference&lt; Function &gt;::Value</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1adcfd12f1e18ecbefd6a1024ae91c0e42" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Napi::Value &gt; Napi::FunctionReference::Call</definition>
        <argsstring>(napi_value recv, const std::initializer_list&lt; napi_value &gt; &amp;args) const</argsstring>
        <name>Call</name>
        <qualifiedname>Napi::FunctionReference::Call</qualifiedname>
        <param>
          <type>napi_value</type>
          <declname>recv</declname>
        </param>
        <param>
          <type>const std::initializer_list&lt; napi_value &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1652" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3597" bodyend="3612"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Function &gt;::_env</references>
        <references refid="class_napi_1_1_function_1a9456e9548a1c7b9a57bc0bcae10c1a25" compoundref="napi-inl_8h" startline="2474" endline="2477">Napi::Function::Call</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a1c0637ef48ebf7d811adaaaee73a0bfa" compoundref="napi-inl_8h" startline="4949" endline="4951">Napi::EscapableHandleScope::Env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a3d278b44f79ed180083cbdfa75a3f058" compoundref="napi-inl_8h" startline="4953" endline="4958">Napi::EscapableHandleScope::Escape</references>
        <references refid="class_napi_1_1_env_1a0e46584af1798aa5ea458d0044678432" compoundref="napi-inl_8h" startline="479" endline="485">Napi::Env::IsExceptionPending</references>
        <references refid="namespace_napi_1ae4cf10cf596c741e63d580a9c94994fc" compoundref="napi-inl_8h" startline="444" endline="446">Napi::Just</references>
        <references refid="class_napi_1_1_reference_1ae7f2d23d1f33cdbcfb4aa1b89193c5ae" compoundref="napi-inl_8h" startline="3266" endline="3275">Napi::Reference&lt; Function &gt;::Value</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1a441120685747091c16882b3871b122fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Napi::Value &gt; Napi::FunctionReference::Call</definition>
        <argsstring>(napi_value recv, const std::vector&lt; napi_value &gt; &amp;args) const</argsstring>
        <name>Call</name>
        <qualifiedname>Napi::FunctionReference::Call</qualifiedname>
        <param>
          <type>napi_value</type>
          <declname>recv</declname>
        </param>
        <param>
          <type>const std::vector&lt; napi_value &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1654" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3614" bodyend="3629"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Function &gt;::_env</references>
        <references refid="class_napi_1_1_function_1a9456e9548a1c7b9a57bc0bcae10c1a25" compoundref="napi-inl_8h" startline="2474" endline="2477">Napi::Function::Call</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a1c0637ef48ebf7d811adaaaee73a0bfa" compoundref="napi-inl_8h" startline="4949" endline="4951">Napi::EscapableHandleScope::Env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a3d278b44f79ed180083cbdfa75a3f058" compoundref="napi-inl_8h" startline="4953" endline="4958">Napi::EscapableHandleScope::Escape</references>
        <references refid="class_napi_1_1_env_1a0e46584af1798aa5ea458d0044678432" compoundref="napi-inl_8h" startline="479" endline="485">Napi::Env::IsExceptionPending</references>
        <references refid="namespace_napi_1ae4cf10cf596c741e63d580a9c94994fc" compoundref="napi-inl_8h" startline="444" endline="446">Napi::Just</references>
        <references refid="class_napi_1_1_reference_1ae7f2d23d1f33cdbcfb4aa1b89193c5ae" compoundref="napi-inl_8h" startline="3266" endline="3275">Napi::Reference&lt; Function &gt;::Value</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1a2513557b7de0c22c5293233959c26821" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Napi::Value &gt; Napi::FunctionReference::Call</definition>
        <argsstring>(napi_value recv, size_t argc, const napi_value *args) const</argsstring>
        <name>Call</name>
        <qualifiedname>Napi::FunctionReference::Call</qualifiedname>
        <param>
          <type>napi_value</type>
          <declname>recv</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const napi_value *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1656" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3631" bodyend="3646"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Function &gt;::_env</references>
        <references refid="class_napi_1_1_function_1a9456e9548a1c7b9a57bc0bcae10c1a25" compoundref="napi-inl_8h" startline="2474" endline="2477">Napi::Function::Call</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a1c0637ef48ebf7d811adaaaee73a0bfa" compoundref="napi-inl_8h" startline="4949" endline="4951">Napi::EscapableHandleScope::Env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a3d278b44f79ed180083cbdfa75a3f058" compoundref="napi-inl_8h" startline="4953" endline="4958">Napi::EscapableHandleScope::Escape</references>
        <references refid="class_napi_1_1_env_1a0e46584af1798aa5ea458d0044678432" compoundref="napi-inl_8h" startline="479" endline="485">Napi::Env::IsExceptionPending</references>
        <references refid="namespace_napi_1ae4cf10cf596c741e63d580a9c94994fc" compoundref="napi-inl_8h" startline="444" endline="446">Napi::Just</references>
        <references refid="class_napi_1_1_reference_1ae7f2d23d1f33cdbcfb4aa1b89193c5ae" compoundref="napi-inl_8h" startline="3266" endline="3275">Napi::Reference&lt; Function &gt;::Value</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1a9cee3f78a5fdf458133a2370b2db9611" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Napi::Value &gt; Napi::FunctionReference::MakeCallback</definition>
        <argsstring>(napi_value recv, const std::initializer_list&lt; napi_value &gt; &amp;args, napi_async_context context=nullptr) const</argsstring>
        <name>MakeCallback</name>
        <qualifiedname>Napi::FunctionReference::MakeCallback</qualifiedname>
        <param>
          <type>napi_value</type>
          <declname>recv</declname>
        </param>
        <param>
          <type>const std::initializer_list&lt; napi_value &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>napi_async_context</type>
          <declname>context</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1660" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3648" bodyend="3666"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Function &gt;::_env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a1c0637ef48ebf7d811adaaaee73a0bfa" compoundref="napi-inl_8h" startline="4949" endline="4951">Napi::EscapableHandleScope::Env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a3d278b44f79ed180083cbdfa75a3f058" compoundref="napi-inl_8h" startline="4953" endline="4958">Napi::EscapableHandleScope::Escape</references>
        <references refid="class_napi_1_1_env_1a0e46584af1798aa5ea458d0044678432" compoundref="napi-inl_8h" startline="479" endline="485">Napi::Env::IsExceptionPending</references>
        <references refid="namespace_napi_1ae4cf10cf596c741e63d580a9c94994fc" compoundref="napi-inl_8h" startline="444" endline="446">Napi::Just</references>
        <references refid="class_napi_1_1_function_1ab50fc61d06c91f7d24ac5d1fa7cfa986" compoundref="napi-inl_8h" startline="2535" endline="2540">Napi::Function::MakeCallback</references>
        <references refid="class_napi_1_1_reference_1ae7f2d23d1f33cdbcfb4aa1b89193c5ae" compoundref="napi-inl_8h" startline="3266" endline="3275">Napi::Reference&lt; Function &gt;::Value</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1a6bf48d8ca84cb82a038d0e066103e1ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Napi::Value &gt; Napi::FunctionReference::MakeCallback</definition>
        <argsstring>(napi_value recv, const std::vector&lt; napi_value &gt; &amp;args, napi_async_context context=nullptr) const</argsstring>
        <name>MakeCallback</name>
        <qualifiedname>Napi::FunctionReference::MakeCallback</qualifiedname>
        <param>
          <type>napi_value</type>
          <declname>recv</declname>
        </param>
        <param>
          <type>const std::vector&lt; napi_value &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>napi_async_context</type>
          <declname>context</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1664" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3668" bodyend="3685"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Function &gt;::_env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a1c0637ef48ebf7d811adaaaee73a0bfa" compoundref="napi-inl_8h" startline="4949" endline="4951">Napi::EscapableHandleScope::Env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a3d278b44f79ed180083cbdfa75a3f058" compoundref="napi-inl_8h" startline="4953" endline="4958">Napi::EscapableHandleScope::Escape</references>
        <references refid="class_napi_1_1_env_1a0e46584af1798aa5ea458d0044678432" compoundref="napi-inl_8h" startline="479" endline="485">Napi::Env::IsExceptionPending</references>
        <references refid="namespace_napi_1ae4cf10cf596c741e63d580a9c94994fc" compoundref="napi-inl_8h" startline="444" endline="446">Napi::Just</references>
        <references refid="class_napi_1_1_function_1ab50fc61d06c91f7d24ac5d1fa7cfa986" compoundref="napi-inl_8h" startline="2535" endline="2540">Napi::Function::MakeCallback</references>
        <references refid="class_napi_1_1_reference_1ae7f2d23d1f33cdbcfb4aa1b89193c5ae" compoundref="napi-inl_8h" startline="3266" endline="3275">Napi::Reference&lt; Function &gt;::Value</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1a8a519c546d858fbd3fdbc8cd2e7aa9fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Napi::Value &gt; Napi::FunctionReference::MakeCallback</definition>
        <argsstring>(napi_value recv, size_t argc, const napi_value *args, napi_async_context context=nullptr) const</argsstring>
        <name>MakeCallback</name>
        <qualifiedname>Napi::FunctionReference::MakeCallback</qualifiedname>
        <param>
          <type>napi_value</type>
          <declname>recv</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const napi_value *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>napi_async_context</type>
          <declname>context</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1668" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3687" bodyend="3706"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Function &gt;::_env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a1c0637ef48ebf7d811adaaaee73a0bfa" compoundref="napi-inl_8h" startline="4949" endline="4951">Napi::EscapableHandleScope::Env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a3d278b44f79ed180083cbdfa75a3f058" compoundref="napi-inl_8h" startline="4953" endline="4958">Napi::EscapableHandleScope::Escape</references>
        <references refid="class_napi_1_1_env_1a0e46584af1798aa5ea458d0044678432" compoundref="napi-inl_8h" startline="479" endline="485">Napi::Env::IsExceptionPending</references>
        <references refid="namespace_napi_1ae4cf10cf596c741e63d580a9c94994fc" compoundref="napi-inl_8h" startline="444" endline="446">Napi::Just</references>
        <references refid="class_napi_1_1_function_1ab50fc61d06c91f7d24ac5d1fa7cfa986" compoundref="napi-inl_8h" startline="2535" endline="2540">Napi::Function::MakeCallback</references>
        <references refid="class_napi_1_1_reference_1ae7f2d23d1f33cdbcfb4aa1b89193c5ae" compoundref="napi-inl_8h" startline="3266" endline="3275">Napi::Reference&lt; Function &gt;::Value</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1a5d0abcf6c0abbf3a5f31921e5dfcd350" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_object" kindref="compound">Object</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Object &gt; Napi::FunctionReference::New</definition>
        <argsstring>(const std::initializer_list&lt; napi_value &gt; &amp;args) const</argsstring>
        <name>New</name>
        <qualifiedname>Napi::FunctionReference::New</qualifiedname>
        <param>
          <type>const std::initializer_list&lt; napi_value &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1674" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3708" bodyend="3723"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Function &gt;::_env</references>
        <references refid="class_napi_1_1_value_1a9c1a9c4eca9617b0aafbe311c946982a" compoundref="napi-inl_8h" startline="756" endline="761">Napi::Value::As</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a1c0637ef48ebf7d811adaaaee73a0bfa" compoundref="napi-inl_8h" startline="4949" endline="4951">Napi::EscapableHandleScope::Env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a3d278b44f79ed180083cbdfa75a3f058" compoundref="napi-inl_8h" startline="4953" endline="4958">Napi::EscapableHandleScope::Escape</references>
        <references refid="class_napi_1_1_env_1a0e46584af1798aa5ea458d0044678432" compoundref="napi-inl_8h" startline="479" endline="485">Napi::Env::IsExceptionPending</references>
        <references refid="namespace_napi_1ae4cf10cf596c741e63d580a9c94994fc" compoundref="napi-inl_8h" startline="444" endline="446">Napi::Just</references>
        <references refid="class_napi_1_1_function_1a80e92e599822a252c819f13696cba14d" compoundref="napi-inl_8h" startline="2386" endline="2396">Napi::Function::New</references>
        <references refid="class_napi_1_1_reference_1ae7f2d23d1f33cdbcfb4aa1b89193c5ae" compoundref="napi-inl_8h" startline="3266" endline="3275">Napi::Reference&lt; Function &gt;::Value</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_function_reference_1ab49b8d5e8d6a14c829e9716b8d1f82d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_napi_1a82dbb1ddd7fa35efaf934e22abe0eaee" kindref="member">MaybeOrValue</ref>&lt; <ref refid="class_napi_1_1_object" kindref="compound">Object</ref> &gt;</type>
        <definition>MaybeOrValue&lt; Object &gt; Napi::FunctionReference::New</definition>
        <argsstring>(const std::vector&lt; napi_value &gt; &amp;args) const</argsstring>
        <name>New</name>
        <qualifiedname>Napi::FunctionReference::New</qualifiedname>
        <param>
          <type>const std::vector&lt; napi_value &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1675" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3725" bodyend="3740"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Function &gt;::_env</references>
        <references refid="class_napi_1_1_value_1a9c1a9c4eca9617b0aafbe311c946982a" compoundref="napi-inl_8h" startline="756" endline="761">Napi::Value::As</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a1c0637ef48ebf7d811adaaaee73a0bfa" compoundref="napi-inl_8h" startline="4949" endline="4951">Napi::EscapableHandleScope::Env</references>
        <references refid="class_napi_1_1_escapable_handle_scope_1a3d278b44f79ed180083cbdfa75a3f058" compoundref="napi-inl_8h" startline="4953" endline="4958">Napi::EscapableHandleScope::Escape</references>
        <references refid="class_napi_1_1_env_1a0e46584af1798aa5ea458d0044678432" compoundref="napi-inl_8h" startline="479" endline="485">Napi::Env::IsExceptionPending</references>
        <references refid="namespace_napi_1ae4cf10cf596c741e63d580a9c94994fc" compoundref="napi-inl_8h" startline="444" endline="446">Napi::Just</references>
        <references refid="class_napi_1_1_function_1a80e92e599822a252c819f13696cba14d" compoundref="napi-inl_8h" startline="2386" endline="2396">Napi::Function::New</references>
        <references refid="class_napi_1_1_reference_1ae7f2d23d1f33cdbcfb4aa1b89193c5ae" compoundref="napi-inl_8h" startline="3266" endline="3275">Napi::Reference&lt; Function &gt;::Value</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Napi::FunctionReference</label>
        <link refid="class_napi_1_1_function_reference"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Napi::Reference&lt; Function &gt;</label>
        <link refid="class_napi_1_1_reference"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Napi::FunctionReference</label>
        <link refid="class_napi_1_1_function_reference"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Napi::Reference&lt; Function &gt;</label>
        <link refid="class_napi_1_1_reference"/>
      </node>
    </collaborationgraph>
    <location file="backend/node_modules/node-addon-api/napi.h" line="1634" column="1" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="1634" bodyend="1676"/>
    <listofallmembers>
      <member refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" prot="protected" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>_env</name></member>
      <member refid="class_napi_1_1_reference_1a238e28b4750cc8659be3a9159f179a90" prot="protected" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>_ref</name></member>
      <member refid="class_napi_1_1_function_reference_1a85c93009d363fe6548318b4a73135ae3" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Call</name></member>
      <member refid="class_napi_1_1_function_reference_1a272413a6e6e1829a527278a8a6eacbb2" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Call</name></member>
      <member refid="class_napi_1_1_function_reference_1adcfd12f1e18ecbefd6a1024ae91c0e42" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Call</name></member>
      <member refid="class_napi_1_1_function_reference_1a441120685747091c16882b3871b122fa" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Call</name></member>
      <member refid="class_napi_1_1_function_reference_1a2513557b7de0c22c5293233959c26821" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Call</name></member>
      <member refid="class_napi_1_1_reference_1a145936a59e9db2c455542576e76773ac" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Env</name></member>
      <member refid="class_napi_1_1_function_reference_1ad06612ab0aed497f4fc77f9f883b9626" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>FunctionReference</name></member>
      <member refid="class_napi_1_1_function_reference_1a7e52d1ba76907b02f0717e68f453c51e" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>FunctionReference</name></member>
      <member refid="class_napi_1_1_function_reference_1a3115ec69ff78a23381878b34f993817c" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>FunctionReference</name></member>
      <member refid="class_napi_1_1_function_reference_1adb6695c2da7eead6f459dd85b85d87b0" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>FunctionReference</name></member>
      <member refid="class_napi_1_1_reference_1add921efd1d432fc4a60ec249f9fa7257" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>IsEmpty</name></member>
      <member refid="class_napi_1_1_function_reference_1a9cee3f78a5fdf458133a2370b2db9611" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>MakeCallback</name></member>
      <member refid="class_napi_1_1_function_reference_1a6bf48d8ca84cb82a038d0e066103e1ce" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>MakeCallback</name></member>
      <member refid="class_napi_1_1_function_reference_1a8a519c546d858fbd3fdbc8cd2e7aa9fc" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>MakeCallback</name></member>
      <member refid="class_napi_1_1_function_reference_1a5d0abcf6c0abbf3a5f31921e5dfcd350" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>New</name></member>
      <member refid="class_napi_1_1_function_reference_1ab49b8d5e8d6a14c829e9716b8d1f82d3" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>New</name></member>
      <member refid="class_napi_1_1_reference_1a3572d80d57cb54046b581177727b91d0" prot="public" virt="non-virtual" ambiguityscope="Napi::Reference&lt; Function &gt;::"><scope>Napi::FunctionReference</scope><name>New</name></member>
      <member refid="class_napi_1_1_reference_1a1dde216e32ec70e5e6b8f6b292d4f1f4" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>operator napi_ref</name></member>
      <member refid="class_napi_1_1_reference_1a15a469146858232a5f60377552208aad" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>operator!=</name></member>
      <member refid="class_napi_1_1_function_reference_1ae1cb5269b80adb90e94cce7d500e6c40" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>operator()</name></member>
      <member refid="class_napi_1_1_function_reference_1a48bf05ed9283314fb02d75c26f64c132" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>operator=</name></member>
      <member refid="class_napi_1_1_function_reference_1afb94c60cd88387b8fef75bb3b5ccc8aa" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>operator=</name></member>
      <member refid="class_napi_1_1_reference_1a3b1b3ee1d586be0e3809b58fd61873d1" prot="public" virt="non-virtual" ambiguityscope="Napi::Reference&lt; Function &gt;::"><scope>Napi::FunctionReference</scope><name>operator=</name></member>
      <member refid="class_napi_1_1_reference_1a5d51bd065ce7a381e8345e138f7102bd" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>operator==</name></member>
      <member refid="class_napi_1_1_reference_1aa4a691ce6ed68117e5a4fabb1b594c75" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Ref</name></member>
      <member refid="class_napi_1_1_reference_1acfb08026d010104194470069df9a363e" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Reference</name></member>
      <member refid="class_napi_1_1_reference_1a2a67b234561bea28b4bcd4488199660f" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Reference</name></member>
      <member refid="class_napi_1_1_reference_1af4ad22fff396f846cea40e98e946ff95" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Reference</name></member>
      <member refid="class_napi_1_1_reference_1a617460d4d55206bfa79c25155cfa1a42" prot="protected" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Reference</name></member>
      <member refid="class_napi_1_1_reference_1ac73acbd590af4c097f457a315c5f24c6" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Reset</name></member>
      <member refid="class_napi_1_1_reference_1abe91ee8ad7ba1623805e948c39d78389" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Reset</name></member>
      <member refid="class_napi_1_1_reference_1a1dd310614fa3c053c9dc9468043096b3" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>SuppressDestruct</name></member>
      <member refid="class_napi_1_1_reference_1a0350ecff614582dc9a38e41a37289261" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Unref</name></member>
      <member refid="class_napi_1_1_reference_1ae7f2d23d1f33cdbcfb4aa1b89193c5ae" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>Value</name></member>
      <member refid="class_napi_1_1_reference_1abd291db2fe0f9189277f7b269b96d113" prot="public" virt="non-virtual"><scope>Napi::FunctionReference</scope><name>~Reference</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
