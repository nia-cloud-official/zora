<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="class_napi_1_1_error" kind="class" language="C++" prot="public">
    <compoundname>Napi::Error</compoundname>
    <basecompoundref refid="class_napi_1_1_object_reference" prot="public" virt="non-virtual">Napi::ObjectReference</basecompoundref>
    <derivedcompoundref refid="class_napi_1_1_range_error" prot="public" virt="non-virtual">Napi::RangeError</derivedcompoundref>
    <derivedcompoundref refid="class_napi_1_1_type_error" prot="public" virt="non-virtual">Napi::TypeError</derivedcompoundref>
    <includes refid="napi_8h" local="no">napi.h</includes>
    <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="class_napi_1_1_error_1a135deffa3a3dea0edc4c10f8b800be77" prot="protected" static="no">
        <type>napi_status(*)(napi_env envb, napi_value code, napi_value msg, napi_value *result)</type>
        <definition>using Napi::Error::create_error_fn =  napi_status (*)(napi_env envb,
                                          napi_value code,
                                          napi_value msg,
                                          napi_value* result)</definition>
        <argsstring></argsstring>
        <name>create_error_fn</name>
        <qualifiedname>Napi::Error::create_error_fn</qualifiedname>
        <briefdescription>
<para>!cond INTERNAL </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1820" column="3" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="1820" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_napi_1_1_error_1aefa0f6974a8a968a2f0b6ad3017d24b2" prot="private" static="no" mutable="yes">
        <type>std::string</type>
        <definition>std::string Napi::Error::_message</definition>
        <argsstring></argsstring>
        <name>_message</name>
        <qualifiedname>Napi::Error::_message</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1834" column="23" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="1834" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_napi_1_1_error_1a6a0571d56b4fcedf862b934a507a58ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_error" kindref="compound">Error</ref></type>
        <definition>Error Napi::Error::New</definition>
        <argsstring>(napi_env env)</argsstring>
        <name>New</name>
        <qualifiedname>Napi::Error::New</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1794" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="2822" bodyend="2877"/>
        <references refid="class_napi_1_1_error_1ac8db9066ce2adaa3b4fb27e7b48b39e6" compoundref="napi-inl_8h" startline="2894" endline="2894">Error</references>
        <references refid="napi_8h_1a02392ea1f79a21afffe73fce7d898958" compoundref="napi_8h" startline="145" endline="146">NAPI_FATAL_IF_FAILED</references>
        <referencedby refid="classnode__sqlite3_1_1_database_1a3e034b41857b837fe55ba2b8757e4ad8" compoundref="database_8cc" startline="395" endline="411">node_sqlite3::Database::Interrupt</referencedby>
        <referencedby refid="class_napi_1_1_error_1a97f33d9530097e7ec4de83917acba24c" compoundref="napi-inl_8h" startline="2879" endline="2882">New</referencedby>
        <referencedby refid="class_napi_1_1_error_1ae13e4bc27413ecd12dcfb6603f16cfa2" compoundref="napi-inl_8h" startline="2884" endline="2887">New</referencedby>
        <referencedby refid="class_napi_1_1_range_error_1a63bc7fbf21b34af130ac923118a123a7" compoundref="napi-inl_8h" startline="3129" endline="3132">Napi::RangeError::New</referencedby>
        <referencedby refid="class_napi_1_1_range_error_1aff4fac29d05b5587f9e41f4c7d9c7a3a" compoundref="napi-inl_8h" startline="3134" endline="3137">Napi::RangeError::New</referencedby>
        <referencedby refid="class_napi_1_1_type_error_1a61771d5e0220d480f810097af673da92" compoundref="napi-inl_8h" startline="3114" endline="3117">Napi::TypeError::New</referencedby>
        <referencedby refid="class_napi_1_1_type_error_1af77258fa22e791b0a3ad86d200dab81c" compoundref="napi-inl_8h" startline="3119" endline="3122">Napi::TypeError::New</referencedby>
        <referencedby refid="classnode__sqlite3_1_1_backup_1aba66b6d7a2ce87718bc961533a1c22be" compoundref="backup_8cc" startline="397" endline="406">node_sqlite3::Backup::RetryErrorSetter</referencedby>
        <referencedby refid="class_napi_1_1_error_1af657bb938d951eccca6cf9e4983601d9" compoundref="napi-inl_8h" startline="3039" endline="3084">ThrowAsJavaScriptException</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_error_1a97f33d9530097e7ec4de83917acba24c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_error" kindref="compound">Error</ref></type>
        <definition>Error Napi::Error::New</definition>
        <argsstring>(napi_env env, const char *message)</argsstring>
        <name>New</name>
        <qualifiedname>Napi::Error::New</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1795" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="2879" bodyend="2882"/>
        <references refid="class_napi_1_1_error_1a6a0571d56b4fcedf862b934a507a58ed" compoundref="napi-inl_8h" startline="2822" endline="2877">New</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_error_1ae13e4bc27413ecd12dcfb6603f16cfa2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_error" kindref="compound">Error</ref></type>
        <definition>Error Napi::Error::New</definition>
        <argsstring>(napi_env env, const std::string &amp;message)</argsstring>
        <name>New</name>
        <qualifiedname>Napi::Error::New</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1796" column="16" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="2884" bodyend="2887"/>
        <references refid="class_napi_1_1_error_1a6a0571d56b4fcedf862b934a507a58ed" compoundref="napi-inl_8h" startline="2822" endline="2877">New</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_error_1a0ae7d1cd97cff6799f276677f3e15361" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NAPI_NO_RETURN void</type>
        <definition>NAPI_NO_RETURN void Napi::Error::Fatal</definition>
        <argsstring>(const char *location, const char *message)</argsstring>
        <name>Fatal</name>
        <qualifiedname>Napi::Error::Fatal</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>location</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1798" column="30" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="2889" bodyend="2892"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_napi_1_1_error_1ac8db9066ce2adaa3b4fb27e7b48b39e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Napi::Error::Error</definition>
        <argsstring>()</argsstring>
        <name>Error</name>
        <qualifiedname>Napi::Error::Error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1800" column="3" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="2894" bodyend="2894"/>
        <referencedby refid="class_napi_1_1_error_1a6a0571d56b4fcedf862b934a507a58ed" compoundref="napi-inl_8h" startline="2822" endline="2877">New</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_error_1a714b6238f61928c96dfb5f26f6cc7d4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Napi::Error::Error</definition>
        <argsstring>(napi_env env, napi_value value)</argsstring>
        <name>Error</name>
        <qualifiedname>Napi::Error::Error</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <param>
          <type>napi_value</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1801" column="3" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="2896" bodyend="2949"/>
        <references refid="class_napi_1_1_reference_1a238e28b4750cc8659be3a9159f179a90" compoundref="napi_8h" startline="1589">Napi::Reference&lt; Object &gt;::_ref</references>
        <references refid="class_napi_1_1_value_1a0ee78f70cade37fb28fef3087ef7e9e2" compoundref="napi-inl_8h" startline="1306" endline="1314">Napi::Value::From</references>
        <references refid="napi_8h_1a02392ea1f79a21afffe73fce7d898958" compoundref="napi_8h" startline="145" endline="146">NAPI_FATAL_IF_FAILED</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_error_1a81c2bd290ca363a61a40c23df266aaef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Napi::Error::Error</definition>
        <argsstring>(Error &amp;&amp;other)</argsstring>
        <name>Error</name>
        <qualifiedname>Napi::Error::Error</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_error" kindref="compound">Error</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1804" column="3" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="2991" bodyend="2991"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_error_1aac98daca548f2710dedaf64b42ef5896" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_error" kindref="compound">Error</ref> &amp;</type>
        <definition>Error &amp; Napi::Error::operator=</definition>
        <argsstring>(Error &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>Napi::Error::operator=</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_error" kindref="compound">Error</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1805" column="9" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="2993" bodyend="2996"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_error_1a77b16e4bd465422b164149fb007eb96a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Napi::Error::Error</definition>
        <argsstring>(const Error &amp;)</argsstring>
        <name>Error</name>
        <qualifiedname>Napi::Error::Error</qualifiedname>
        <param>
          <type>const <ref refid="class_napi_1_1_error" kindref="compound">Error</ref> &amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1806" column="3" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="2998" bodyend="2998"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_error_1abf00f5423acf56a075f5885abca53c84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_error" kindref="compound">Error</ref> &amp;</type>
        <definition>Error &amp; Napi::Error::operator=</definition>
        <argsstring>(const Error &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>Napi::Error::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_napi_1_1_error" kindref="compound">Error</ref> &amp;</type>
          <defname>other</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1807" column="9" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3000" bodyend="3013"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Object &gt;::_env</references>
        <references refid="class_napi_1_1_reference_1a238e28b4750cc8659be3a9159f179a90" compoundref="napi_8h" startline="1589">Napi::Reference&lt; Object &gt;::_ref</references>
        <references refid="class_napi_1_1_reference_1a145936a59e9db2c455542576e76773ac" compoundref="napi-inl_8h" startline="3256" endline="3258">Napi::Reference&lt; T &gt;::Env</references>
        <references refid="napi_8h_1a2cdee1e97eb430de17e8839fbcf3db97" compoundref="napi_8h" startline="101" endline="105">NAPI_THROW_IF_FAILED</references>
        <references refid="class_napi_1_1_reference_1ac73acbd590af4c097f457a315c5f24c6" compoundref="napi-inl_8h" startline="3294" endline="3300">Napi::Reference&lt; Object &gt;::Reset</references>
        <references refid="class_napi_1_1_error_1a6c7dc04ee866899cca8bfe9bbc76bbe3" compoundref="napi-inl_8h" startline="2951" endline="2989">Value</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_error_1ae204fdaa5bce015df8749f4c79792ecc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; Napi::Error::Message</definition>
        <argsstring>() const NAPI_NOEXCEPT</argsstring>
        <name>Message</name>
        <qualifiedname>Napi::Error::Message</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1809" column="21" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3015" bodyend="3036"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Object &gt;::_env</references>
        <references refid="class_napi_1_1_value_1a9c1a9c4eca9617b0aafbe311c946982a" compoundref="napi-inl_8h" startline="756" endline="761">Napi::Value::As</references>
        <references refid="class_napi_1_1_object_reference_1a774cf64f19ae5ddf2ab24efa1927eeea" compoundref="napi-inl_8h" startline="3373" endline="3388">Napi::ObjectReference::Get</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_error_1af657bb938d951eccca6cf9e4983601d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Napi::Error::ThrowAsJavaScriptException</definition>
        <argsstring>() const</argsstring>
        <name>ThrowAsJavaScriptException</name>
        <qualifiedname>Napi::Error::ThrowAsJavaScriptException</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1810" column="8" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3039" bodyend="3084"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Object &gt;::_env</references>
        <references refid="class_napi_1_1_reference_1add921efd1d432fc4a60ec249f9fa7257" compoundref="napi-inl_8h" startline="3261" endline="3263">Napi::Reference&lt; Object &gt;::IsEmpty</references>
        <references refid="napi_8h_1a02392ea1f79a21afffe73fce7d898958" compoundref="napi_8h" startline="145" endline="146">NAPI_FATAL_IF_FAILED</references>
        <references refid="class_napi_1_1_error_1a6a0571d56b4fcedf862b934a507a58ed" compoundref="napi-inl_8h" startline="2822" endline="2877">New</references>
        <references refid="class_napi_1_1_error_1a6c7dc04ee866899cca8bfe9bbc76bbe3" compoundref="napi-inl_8h" startline="2951" endline="2989">Value</references>
        <referencedby refid="classnode__sqlite3_1_1_backup_1a2f7c7f434b24b3f36f1f6aa9b3ef1fbc" compoundref="backup_8cc" startline="122" endline="176">node_sqlite3::Backup::Backup</referencedby>
        <referencedby refid="classnode__sqlite3_1_1_database_1a372193fc006b0ee71755c20d67e456fb" compoundref="database_8cc" startline="336" endline="393">node_sqlite3::Database::Configure</referencedby>
        <referencedby refid="classnode__sqlite3_1_1_database_1a33295029bca0f77a5c17ea4ce7b009f2" compoundref="database_8cc" startline="120" endline="150">node_sqlite3::Database::Database</referencedby>
        <referencedby refid="classnode__sqlite3_1_1_database_1a3e034b41857b837fe55ba2b8757e4ad8" compoundref="database_8cc" startline="395" endline="411">node_sqlite3::Database::Interrupt</referencedby>
        <referencedby refid="classnode__sqlite3_1_1_backup_1aba66b6d7a2ce87718bc961533a1c22be" compoundref="backup_8cc" startline="397" endline="406">node_sqlite3::Backup::RetryErrorSetter</referencedby>
        <referencedby refid="classnode__sqlite3_1_1_statement_1a44a25df6ae24c70d0a13279687113666" compoundref="statement_8cc" startline="91" endline="121">node_sqlite3::Statement::Statement</referencedby>
        <referencedby refid="namespace_napi_1_1details_1ad7dfc06e482555ea99ae09b2e55bc79d" compoundref="napi-inl_8h" startline="76" endline="89">Napi::details::WrapCallback</referencedby>
        <referencedby refid="namespace_napi_1_1details_1a3b92109504231e15075d3c7d93bfc8bb" compoundref="napi-inl_8h" startline="95" endline="107">Napi::details::WrapVoidCallback</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_error_1a6c7dc04ee866899cca8bfe9bbc76bbe3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_object" kindref="compound">Object</ref></type>
        <definition>Object Napi::Error::Value</definition>
        <argsstring>() const</argsstring>
        <name>Value</name>
        <qualifiedname>Napi::Error::Value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1812" column="10" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="2951" bodyend="2989"/>
        <references refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" compoundref="napi_8h" startline="1588">Napi::Reference&lt; Object &gt;::_env</references>
        <references refid="class_napi_1_1_reference_1a238e28b4750cc8659be3a9159f179a90" compoundref="napi_8h" startline="1589">Napi::Reference&lt; Object &gt;::_ref</references>
        <references refid="class_napi_1_1_string_1ab56f3fbda9f7ef894ab032ee0ea31623" compoundref="napi-inl_8h" startline="1317" endline="1333">Napi::String::From</references>
        <references refid="napi_8h_1a2cdee1e97eb430de17e8839fbcf3db97" compoundref="napi_8h" startline="101" endline="105">NAPI_THROW_IF_FAILED</references>
        <referencedby refid="class_napi_1_1_error_1abf00f5423acf56a075f5885abca53c84" compoundref="napi-inl_8h" startline="3000" endline="3013">operator=</referencedby>
        <referencedby refid="class_napi_1_1_error_1af657bb938d951eccca6cf9e4983601d9" compoundref="napi-inl_8h" startline="3039" endline="3084">ThrowAsJavaScriptException</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_napi_1_1_error_1add0e5205e4feef70d7db5291bb1bf730" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TError</type>
          </param>
        </templateparamlist>
        <type>TError</type>
        <definition>TError Napi::Error::New</definition>
        <argsstring>(napi_env env, const char *message, size_t length, create_error_fn create_error)</argsstring>
        <name>New</name>
        <qualifiedname>Napi::Error::New</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="class_napi_1_1_error_1a135deffa3a3dea0edc4c10f8b800be77" kindref="member">create_error_fn</ref></type>
          <declname>create_error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1826" column="17" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3099" bodyend="3112"/>
        <references refid="napi_8h_1a2cdee1e97eb430de17e8839fbcf3db97" compoundref="napi_8h" startline="101" endline="105">NAPI_THROW_IF_FAILED</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_napi_1_1_error_1ab2f866205da1e7079164a068c0ee0ea0" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * Napi::Error::ERROR_WRAP_VALUE</definition>
        <argsstring>() NAPI_NOEXCEPT</argsstring>
        <name>ERROR_WRAP_VALUE</name>
        <qualifiedname>Napi::Error::ERROR_WRAP_VALUE</qualifiedname>
        <briefdescription>
<para>!endcond </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="1833" column="28" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="3094" bodyend="3096"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A persistent reference to a JavaScript error object. Use of this class depends somewhat on whether C++ exceptions are enabled at compile time.</para>
<sect3 id="class_napi_1_1_error_1autotoc_md2298">
<title>Handling Errors With C++ Exceptions</title><para>If C++ exceptions are enabled, then the <computeroutput><ref refid="class_napi_1_1_error" kindref="compound">Error</ref></computeroutput> class extends <computeroutput>std::exception</computeroutput> and enables integrated error-handling for C++ exceptions and JavaScript exceptions.</para>
<para>If a Node-API call fails without executing any JavaScript code (for example due to an invalid argument), then the Node-API wrapper automatically converts and throws the error as a C++ exception of type <computeroutput><ref refid="class_napi_1_1_error" kindref="compound">Napi::Error</ref></computeroutput>. Or if a JavaScript function called by C++ code via Node-API throws a JavaScript exception, then the Node-API wrapper automatically converts and throws it as a C++ exception of type <computeroutput><ref refid="class_napi_1_1_error" kindref="compound">Napi::Error</ref></computeroutput>.</para>
<para>If a C++ exception of type <computeroutput><ref refid="class_napi_1_1_error" kindref="compound">Napi::Error</ref></computeroutput> escapes from a Node-API C++ callback, then the Node-API wrapper automatically converts and throws it as a JavaScript exception. Therefore, catching a C++ exception of type <computeroutput><ref refid="class_napi_1_1_error" kindref="compound">Napi::Error</ref></computeroutput> prevents a JavaScript exception from being thrown.</para>
<sect4 id="class_napi_1_1_error_1autotoc_md2299">
<title>Example 1A - Throwing a C++ exception:</title><para><verbatim>Napi::Env env = ...
throw Napi::Error::New(env, &quot;Example exception&quot;);
</verbatim> Following C++ statements will not be executed. The exception will bubble up as a C++ exception of type <computeroutput><ref refid="class_napi_1_1_error" kindref="compound">Napi::Error</ref></computeroutput>, until it is either caught while still in C++, or else automatically propataged as a JavaScript exception when the callback returns to JavaScript.</para>
</sect4>
<sect4 id="class_napi_1_1_error_1autotoc_md2300">
<title>Example 2A - Propagating a Node-API C++ exception:</title><para><verbatim>Napi::Function jsFunctionThatThrows = someObj.As&lt;Napi::Function&gt;();
Napi::Value result = jsFunctionThatThrows({ arg1, arg2 });
</verbatim> Following C++ statements will not be executed. The exception will bubble up as a C++ exception of type <computeroutput><ref refid="class_napi_1_1_error" kindref="compound">Napi::Error</ref></computeroutput>, until it is either caught while still in C++, or else automatically propagated as a JavaScript exception when the callback returns to JavaScript.</para>
</sect4>
<sect4 id="class_napi_1_1_error_1autotoc_md2301">
<title>Example 3A - Handling a Node-API C++ exception:</title><para><verbatim>Napi::Function jsFunctionThatThrows = someObj.As&lt;Napi::Function&gt;();
Napi::Value result;
try {
   result = jsFunctionThatThrows({ arg1, arg2 });
} catch (const Napi::Error&amp; e) {
  cerr &lt;&lt; &quot;Caught JavaScript exception: &quot; + e.what();
}
</verbatim> Since the exception was caught here, it will not be propagated as a JavaScript exception.</para>
</sect4>
</sect3>
<sect3 id="class_napi_1_1_error_1autotoc_md2302">
<title>Handling Errors Without C++ Exceptions</title><para>If C++ exceptions are disabled (by defining <computeroutput>NAPI_DISABLE_CPP_EXCEPTIONS</computeroutput>) then this class does not extend <computeroutput>std::exception</computeroutput>, and APIs in the <computeroutput><ref refid="namespace_napi" kindref="compound">Napi</ref></computeroutput> namespace do not throw C++ exceptions when they fail. Instead, they raise <emphasis>pending</emphasis> JavaScript exceptions and return <emphasis>empty</emphasis> <computeroutput><ref refid="class_napi_1_1_value" kindref="compound">Value</ref></computeroutput>s. Calling code should check <computeroutput><ref refid="class_napi_1_1_value_1a988bdb3e9806beb7761b4ea864461005" kindref="member">Value::IsEmpty()</ref></computeroutput> before attempting to use a returned value, and may use methods on the <computeroutput><ref refid="class_napi_1_1_env" kindref="compound">Env</ref></computeroutput> class to check for, get, and clear a pending JavaScript exception. If the pending exception is not cleared, it will be thrown when the native callback returns to JavaScript.</para>
<sect4 id="class_napi_1_1_error_1autotoc_md2303">
<title>Example 1B - Throwing a JS exception</title><para><verbatim>Napi::Env env = ...
Napi::Error::New(env, &quot;Example
exception&quot;).ThrowAsJavaScriptException(); return;
</verbatim> After throwing a JS exception, the code should generally return immediately from the native callback, after performing any necessary cleanup.</para>
</sect4>
<sect4 id="class_napi_1_1_error_1autotoc_md2304">
<title>Example 2B - Propagating a Node-API JS exception:</title><para><verbatim>Napi::Function jsFunctionThatThrows = someObj.As&lt;Napi::Function&gt;();
Napi::Value result = jsFunctionThatThrows({ arg1, arg2 });
if (result.IsEmpty()) return;
</verbatim> An empty value result from a Node-API call indicates an error occurred, and a JavaScript exception is pending. To let the exception propagate, the code should generally return immediately from the native callback, after performing any necessary cleanup.</para>
</sect4>
<sect4 id="class_napi_1_1_error_1autotoc_md2305">
<title>Example 3B - Handling a Node-API JS exception:</title><para><verbatim>Napi::Function jsFunctionThatThrows = someObj.As&lt;Napi::Function&gt;();
Napi::Value result = jsFunctionThatThrows({ arg1, arg2 });
if (result.IsEmpty()) {
  Napi::Error e = env.GetAndClearPendingException();
  cerr &lt;&lt; &quot;Caught JavaScript exception: &quot; + e.Message();
}
</verbatim> Since the exception was cleared here, it will not be propagated as a JavaScript exception after the native callback returns. </para>
</sect4>
</sect3>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Napi::Error</label>
        <link refid="class_napi_1_1_error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Napi::ObjectReference</label>
        <link refid="class_napi_1_1_object_reference"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Napi::RangeError</label>
        <link refid="class_napi_1_1_range_error"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Napi::Reference&lt; Object &gt;</label>
        <link refid="class_napi_1_1_reference"/>
      </node>
      <node id="5">
        <label>Napi::TypeError</label>
        <link refid="class_napi_1_1_type_error"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Napi::Error</label>
        <link refid="class_napi_1_1_error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Napi::ObjectReference</label>
        <link refid="class_napi_1_1_object_reference"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Napi::Reference&lt; Object &gt;</label>
        <link refid="class_napi_1_1_reference"/>
      </node>
    </collaborationgraph>
    <location file="backend/node_modules/node-addon-api/napi.h" line="1787" column="1" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="1792" bodyend="1835"/>
    <listofallmembers>
      <member refid="class_napi_1_1_reference_1a5c690557fa39d709a1dbaa14c3ccc5a1" prot="protected" virt="non-virtual"><scope>Napi::Error</scope><name>_env</name></member>
      <member refid="class_napi_1_1_error_1aefa0f6974a8a968a2f0b6ad3017d24b2" prot="private" virt="non-virtual"><scope>Napi::Error</scope><name>_message</name></member>
      <member refid="class_napi_1_1_reference_1a238e28b4750cc8659be3a9159f179a90" prot="protected" virt="non-virtual"><scope>Napi::Error</scope><name>_ref</name></member>
      <member refid="class_napi_1_1_error_1a135deffa3a3dea0edc4c10f8b800be77" prot="protected" virt="non-virtual"><scope>Napi::Error</scope><name>create_error_fn</name></member>
      <member refid="class_napi_1_1_reference_1a145936a59e9db2c455542576e76773ac" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Env</name></member>
      <member refid="class_napi_1_1_error_1ac8db9066ce2adaa3b4fb27e7b48b39e6" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Error</name></member>
      <member refid="class_napi_1_1_error_1a714b6238f61928c96dfb5f26f6cc7d4d" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Error</name></member>
      <member refid="class_napi_1_1_error_1a81c2bd290ca363a61a40c23df266aaef" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Error</name></member>
      <member refid="class_napi_1_1_error_1a77b16e4bd465422b164149fb007eb96a" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Error</name></member>
      <member refid="class_napi_1_1_error_1ab2f866205da1e7079164a068c0ee0ea0" prot="private" virt="non-virtual"><scope>Napi::Error</scope><name>ERROR_WRAP_VALUE</name></member>
      <member refid="class_napi_1_1_error_1a0ae7d1cd97cff6799f276677f3e15361" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Fatal</name></member>
      <member refid="class_napi_1_1_object_reference_1a774cf64f19ae5ddf2ab24efa1927eeea" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Get</name></member>
      <member refid="class_napi_1_1_object_reference_1adec6b3ead540701f0da36bc623a029d1" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Get</name></member>
      <member refid="class_napi_1_1_object_reference_1aae16888931b5cda98e16dbaa0bf5a297" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Get</name></member>
      <member refid="class_napi_1_1_reference_1add921efd1d432fc4a60ec249f9fa7257" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>IsEmpty</name></member>
      <member refid="class_napi_1_1_error_1ae204fdaa5bce015df8749f4c79792ecc" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Message</name></member>
      <member refid="class_napi_1_1_error_1a6a0571d56b4fcedf862b934a507a58ed" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>New</name></member>
      <member refid="class_napi_1_1_error_1a97f33d9530097e7ec4de83917acba24c" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>New</name></member>
      <member refid="class_napi_1_1_error_1ae13e4bc27413ecd12dcfb6603f16cfa2" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>New</name></member>
      <member refid="class_napi_1_1_error_1add0e5205e4feef70d7db5291bb1bf730" prot="protected" virt="non-virtual"><scope>Napi::Error</scope><name>New</name></member>
      <member refid="class_napi_1_1_reference_1a3572d80d57cb54046b581177727b91d0" prot="public" virt="non-virtual" ambiguityscope="Napi::ObjectReference::"><scope>Napi::Error</scope><name>New</name></member>
      <member refid="class_napi_1_1_object_reference_1a607b8fce30f80ca6dcc4e7e4e8470853" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>ObjectReference</name></member>
      <member refid="class_napi_1_1_object_reference_1a37402d45fc003e045f4598df1be1105b" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>ObjectReference</name></member>
      <member refid="class_napi_1_1_object_reference_1a535a5ec4fe22be4006cc6a87e40ca98e" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>ObjectReference</name></member>
      <member refid="class_napi_1_1_object_reference_1a1468ada3d242c63174e94c1b02923169" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>ObjectReference</name></member>
      <member refid="class_napi_1_1_object_reference_1ad8750b55358551d9a0ed1751a66aee17" prot="protected" virt="non-virtual"><scope>Napi::Error</scope><name>ObjectReference</name></member>
      <member refid="class_napi_1_1_reference_1a1dde216e32ec70e5e6b8f6b292d4f1f4" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>operator napi_ref</name></member>
      <member refid="class_napi_1_1_reference_1a15a469146858232a5f60377552208aad" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>operator!=</name></member>
      <member refid="class_napi_1_1_error_1aac98daca548f2710dedaf64b42ef5896" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>operator=</name></member>
      <member refid="class_napi_1_1_error_1abf00f5423acf56a075f5885abca53c84" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>operator=</name></member>
      <member refid="class_napi_1_1_object_reference_1a8f1082ef0ac82428d8ce29fd0e0275ab" prot="public" virt="non-virtual" ambiguityscope="Napi::ObjectReference::"><scope>Napi::Error</scope><name>operator=</name></member>
      <member refid="class_napi_1_1_object_reference_1acc23df407d921b5ebbd6d16eb570ab34" prot="public" virt="non-virtual" ambiguityscope="Napi::ObjectReference::"><scope>Napi::Error</scope><name>operator=</name></member>
      <member refid="class_napi_1_1_reference_1a3b1b3ee1d586be0e3809b58fd61873d1" prot="public" virt="non-virtual" ambiguityscope="Napi::Reference&lt; Object &gt;::"><scope>Napi::Error</scope><name>operator=</name></member>
      <member refid="class_napi_1_1_reference_1a5d51bd065ce7a381e8345e138f7102bd" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>operator==</name></member>
      <member refid="class_napi_1_1_reference_1aa4a691ce6ed68117e5a4fabb1b594c75" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Ref</name></member>
      <member refid="class_napi_1_1_reference_1acfb08026d010104194470069df9a363e" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Reference</name></member>
      <member refid="class_napi_1_1_reference_1a2a67b234561bea28b4bcd4488199660f" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Reference</name></member>
      <member refid="class_napi_1_1_reference_1af4ad22fff396f846cea40e98e946ff95" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Reference</name></member>
      <member refid="class_napi_1_1_reference_1a617460d4d55206bfa79c25155cfa1a42" prot="protected" virt="non-virtual"><scope>Napi::Error</scope><name>Reference</name></member>
      <member refid="class_napi_1_1_reference_1ac73acbd590af4c097f457a315c5f24c6" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Reset</name></member>
      <member refid="class_napi_1_1_reference_1abe91ee8ad7ba1623805e948c39d78389" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Reset</name></member>
      <member refid="class_napi_1_1_object_reference_1a86673a0cabfd296f2de71ee69abc9da0" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1a854eba79a27c2a65aa4e5745638531f3" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1ad1e5e51d5d0b71b45c06840a5769bc28" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1a89d4afd9c5125f26e53ffa7c970ef332" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1ad465288b9f8c339b8a727316b1c681b5" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1a8d51967a6fef82715e789f3f12885454" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1a19a4dcaaf1adca6385504f021b245606" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1af64f86ebf97e343ad3f594ffc0f48065" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1a8e17845828f22f047e82678e169f37f3" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1a51e606959f75d695cf5e25446b6ed455" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1a0330953f0b3c85b763c846612a83ce53" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1a267c80385311be5c37eeba5fb6897164" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1ac327f005217d32a20a63976d8a3ae60d" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1af5dc6f90a7140d5e4a4dc934fd5c36e2" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1af4930333162fab88d5df6cc9d3c7a5b5" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_object_reference_1ad0403e12ced07d73946f3dca09945896" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Set</name></member>
      <member refid="class_napi_1_1_reference_1a1dd310614fa3c053c9dc9468043096b3" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>SuppressDestruct</name></member>
      <member refid="class_napi_1_1_error_1af657bb938d951eccca6cf9e4983601d9" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>ThrowAsJavaScriptException</name></member>
      <member refid="class_napi_1_1_reference_1a0350ecff614582dc9a38e41a37289261" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Unref</name></member>
      <member refid="class_napi_1_1_error_1a6c7dc04ee866899cca8bfe9bbc76bbe3" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>Value</name></member>
      <member refid="class_napi_1_1_reference_1abd291db2fe0f9189277f7b269b96d113" prot="public" virt="non-virtual"><scope>Napi::Error</scope><name>~Reference</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
