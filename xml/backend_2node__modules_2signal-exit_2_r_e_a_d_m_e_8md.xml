<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2signal-exit_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>signal-exit</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[![Build<sp/>Status](https://travis-ci.org/tapjs/signal-exit.png)](https://travis-ci.org/tapjs/signal-exit)</highlight></codeline>
<codeline><highlight class="normal">[![Coverage](https://coveralls.io/repos/tapjs/signal-exit/badge.svg?branch=master)](https://coveralls.io/r/tapjs/signal-exit?branch=master)</highlight></codeline>
<codeline><highlight class="normal">[![NPM<sp/>version](https://img.shields.io/npm/v/signal-exit.svg)](https://www.npmjs.com/package/signal-exit)</highlight></codeline>
<codeline><highlight class="normal">[![Standard<sp/>Version](https://img.shields.io/badge/release-standard%20version-brightgreen.svg)](https://github.com/conventional-changelog/standard-version)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">When<sp/>you<sp/>want<sp/>to<sp/>fire<sp/>an<sp/>event<sp/>no<sp/>matter<sp/>how<sp/>a<sp/>process<sp/>exits:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>reaching<sp/>the<sp/>end<sp/>of<sp/>execution.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>explicitly<sp/>having<sp/>`process.exit(code)`<sp/>called.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>having<sp/>`process.kill(pid,<sp/>sig)`<sp/>called.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>receiving<sp/>a<sp/>fatal<sp/>signal<sp/>from<sp/>outside<sp/>the<sp/>process</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Use<sp/>`signal-exit`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>onExit<sp/>=<sp/>require(&apos;signal-exit&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">onExit(function<sp/>(code,<sp/>signal)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>console.log(&apos;process<sp/>exited!&apos;)</highlight></codeline>
<codeline><highlight class="normal">})</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`var<sp/>remove<sp/>=<sp/>onExit(function<sp/>(code,<sp/>signal)<sp/>{},<sp/>options)`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>return<sp/>value<sp/>of<sp/>the<sp/>function<sp/>is<sp/>a<sp/>function<sp/>that<sp/>will<sp/>remove<sp/>the</highlight></codeline>
<codeline><highlight class="normal">handler.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Note<sp/>that<sp/>the<sp/>function<sp/>*only*<sp/>fires<sp/>for<sp/>signals<sp/>if<sp/>the<sp/>signal<sp/>would</highlight></codeline>
<codeline><highlight class="normal">cause<sp/>the<sp/>process<sp/>to<sp/>exit.<sp/><sp/>That<sp/>is,<sp/>there<sp/>are<sp/>no<sp/>other<sp/>listeners,<sp/>and</highlight></codeline>
<codeline><highlight class="normal">it<sp/>is<sp/>a<sp/>fatal<sp/>signal.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Options</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>`alwaysLast`:<sp/>Run<sp/>this<sp/>handler<sp/>after<sp/>any<sp/>other<sp/>signal<sp/>or<sp/>exit</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>handlers.<sp/><sp/>This<sp/>causes<sp/>`process.emit`<sp/>to<sp/>be<sp/>monkeypatched.</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/signal-exit/README.md"/>
  </compounddef>
</doxygen>
