<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="md_backend_2node__modules_2delegates_2_readme" kind="page">
    <compoundname>md_backend_2node__modules_2delegates_2_readme</compoundname>
    <title>delegates</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="md_backend_2node__modules_2delegates_2_readme_1autotoc_md742"/> Node method and accessor delegation utilty.</para>
<sect1 id="md_backend_2node__modules_2delegates_2_readme_1autotoc_md743">
<title>Installation</title><para><programlisting><codeline><highlight class="normal">$<sp/>npm<sp/>install<sp/>delegates</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_backend_2node__modules_2delegates_2_readme_1autotoc_md744">
<title>Example</title><para><programlisting filename=".js"><codeline><highlight class="normal">var<sp/>delegate<sp/>=<sp/>require(&apos;delegates&apos;);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">delegate(proto,<sp/>&apos;request&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.method(&apos;acceptsLanguages&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.method(&apos;acceptsEncodings&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.method(&apos;acceptsCharsets&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.method(&apos;accepts&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.method(&apos;is&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.access(&apos;querystring&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.access(&apos;idempotent&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.access(&apos;socket&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.access(&apos;length&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.access(&apos;query&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.access(&apos;search&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.access(&apos;status&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.access(&apos;method&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.access(&apos;path&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.access(&apos;body&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.access(&apos;host&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.access(&apos;url&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.getter(&apos;subdomains&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.getter(&apos;protocol&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.getter(&apos;header&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.getter(&apos;stale&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.getter(&apos;fresh&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.getter(&apos;secure&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.getter(&apos;ips&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.getter(&apos;ip&apos;)</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="md_backend_2node__modules_2delegates_2_readme_1autotoc_md745">
<title>API</title><sect2 id="md_backend_2node__modules_2delegates_2_readme_1autotoc_md746">
<title>Delegate(proto, prop)</title><para>Creates a delegator instance used to configure using the <computeroutput>prop</computeroutput> on the given <computeroutput>proto</computeroutput> object. (which is usually a prototype)</para>
</sect2>
<sect2 id="md_backend_2node__modules_2delegates_2_readme_1autotoc_md747">
<title>Delegate::method(name)</title><para>Allows the given method <computeroutput>name</computeroutput> to be accessed on the host.</para>
</sect2>
<sect2 id="md_backend_2node__modules_2delegates_2_readme_1autotoc_md748">
<title>Delegate::getter(name)</title><para>Creates a &quot;getter&quot; for the property with the given <computeroutput>name</computeroutput> on the delegated object.</para>
</sect2>
<sect2 id="md_backend_2node__modules_2delegates_2_readme_1autotoc_md749">
<title>Delegate::setter(name)</title><para>Creates a &quot;setter&quot; for the property with the given <computeroutput>name</computeroutput> on the delegated object.</para>
</sect2>
<sect2 id="md_backend_2node__modules_2delegates_2_readme_1autotoc_md750">
<title>Delegate::access(name)</title><para>Creates an &quot;accessor&quot; (ie: both getter <emphasis>and</emphasis> setter) for the property with the given <computeroutput>name</computeroutput> on the delegated object.</para>
</sect2>
<sect2 id="md_backend_2node__modules_2delegates_2_readme_1autotoc_md751">
<title>Delegate::fluent(name)</title><para>A unique type of &quot;accessor&quot; that works for a &quot;fluent&quot; API. When called as a getter, the method returns the expected value. However, if the method is called with a value, it will return itself so it can be chained. For example:</para>
<para><programlisting filename=".js"><codeline><highlight class="normal">delegate(proto,<sp/>&apos;request&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.fluent(&apos;query&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>getter</highlight></codeline>
<codeline><highlight class="normal">var<sp/>q<sp/>=<sp/>request.query();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>setter<sp/>(chainable)</highlight></codeline>
<codeline><highlight class="normal">request</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.query({<sp/>a:<sp/>1<sp/>})</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.query({<sp/>b:<sp/>2<sp/>});</highlight></codeline>
</programlisting></para>
</sect2>
</sect1>
<sect1 id="md_backend_2node__modules_2delegates_2_readme_1autotoc_md752">
<title>License</title><para>MIT </para>
</sect1>
    </detaileddescription>
    <location file="backend/node_modules/delegates/Readme.md"/>
  </compounddef>
</doxygen>
