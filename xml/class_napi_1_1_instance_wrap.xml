<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="class_napi_1_1_instance_wrap" kind="class" language="C++" prot="public">
    <compoundname>Napi::InstanceWrap</compoundname>
    <derivedcompoundref refid="class_napi_1_1_object_wrap" prot="public" virt="non-virtual">Napi::ObjectWrap&lt; T &gt;</derivedcompoundref>
    <includes refid="napi_8h" local="no">napi.h</includes>
    <innerclass refid="struct_napi_1_1_instance_wrap_1_1_setter_tag" prot="private">Napi::InstanceWrap::SetterTag</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_napi_1_1_instance_wrap_1ada17136961c45b29f87e9be692628fab" prot="public" static="no">
        <type>void(T::*)(const <ref refid="class_napi_1_1_callback_info" kindref="compound">CallbackInfo</ref> &amp;info)</type>
        <definition>using Napi::InstanceWrap&lt; T &gt;::InstanceVoidMethodCallback =  void (T::*)(const CallbackInfo&amp; info)</definition>
        <argsstring></argsstring>
        <name>InstanceVoidMethodCallback</name>
        <qualifiedname>Napi::InstanceWrap::InstanceVoidMethodCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2151" column="3" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="2151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_napi_1_1_instance_wrap_1a41b3f207e6145a08d7c86c9d1c9ac713" prot="public" static="no">
        <type><ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref>(T::*)(const <ref refid="class_napi_1_1_callback_info" kindref="compound">CallbackInfo</ref> &amp;info)</type>
        <definition>using Napi::InstanceWrap&lt; T &gt;::InstanceMethodCallback =  Napi::Value (T::*)(const CallbackInfo&amp; info)</definition>
        <argsstring></argsstring>
        <name>InstanceMethodCallback</name>
        <qualifiedname>Napi::InstanceWrap::InstanceMethodCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2152" column="3" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="2152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_napi_1_1_instance_wrap_1abe4b17e69bb70e40341a17f3eebb4da4" prot="public" static="no">
        <type><ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref>(T::*)(const <ref refid="class_napi_1_1_callback_info" kindref="compound">CallbackInfo</ref> &amp;info)</type>
        <definition>using Napi::InstanceWrap&lt; T &gt;::InstanceGetterCallback =  Napi::Value (T::*)(const CallbackInfo&amp; info)</definition>
        <argsstring></argsstring>
        <name>InstanceGetterCallback</name>
        <qualifiedname>Napi::InstanceWrap::InstanceGetterCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2153" column="3" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="2153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_napi_1_1_instance_wrap_1a74c0b22a0c7d8af5e9912eae6773e3cd" prot="public" static="no">
        <type>void(T::*)(const <ref refid="class_napi_1_1_callback_info" kindref="compound">CallbackInfo</ref> &amp;info, const <ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref> &amp;value)</type>
        <definition>using Napi::InstanceWrap&lt; T &gt;::InstanceSetterCallback =  void (T::*)(const CallbackInfo&amp; info,
                                             const Napi::Value&amp; value)</definition>
        <argsstring></argsstring>
        <name>InstanceSetterCallback</name>
        <qualifiedname>Napi::InstanceWrap::InstanceSetterCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2154" column="3" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="2154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" prot="public" static="no">
        <type><ref refid="class_napi_1_1_class_property_descriptor" kindref="compound">ClassPropertyDescriptor</ref>&lt; T &gt;</type>
        <definition>using Napi::InstanceWrap&lt; T &gt;::PropertyDescriptor =  ClassPropertyDescriptor&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>PropertyDescriptor</name>
        <qualifiedname>Napi::InstanceWrap::PropertyDescriptor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2157" column="3" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="2157" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_napi_1_1_instance_wrap_1a318e872f48e6b30235f125b607740bf3" prot="private" static="no">
        <type><ref refid="class_napi_1_1_instance_wrap" kindref="compound">InstanceWrap</ref>&lt; T &gt;</type>
        <definition>using Napi::InstanceWrap&lt; T &gt;::This =  InstanceWrap&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>This</name>
        <qualifiedname>Napi::InstanceWrap::This</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2238" column="3" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="2238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_napi_1_1_instance_wrap_1a1f22a238210cd90c1ad4d6d84e4337f2" prot="private" static="no">
        <type><ref refid="struct_napi_1_1_method_callback_data" kindref="compound">MethodCallbackData</ref>&lt; T, <ref refid="class_napi_1_1_instance_wrap_1ada17136961c45b29f87e9be692628fab" kindref="member">InstanceVoidMethodCallback</ref> &gt;</type>
        <definition>using Napi::InstanceWrap&lt; T &gt;::InstanceVoidMethodCallbackData = 
      MethodCallbackData&lt;T, InstanceVoidMethodCallback&gt;</definition>
        <argsstring></argsstring>
        <name>InstanceVoidMethodCallbackData</name>
        <qualifiedname>Napi::InstanceWrap::InstanceVoidMethodCallbackData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2240" column="3" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="2240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_napi_1_1_instance_wrap_1a3044917ac6b681f0daa00cf49dc90051" prot="private" static="no">
        <type><ref refid="struct_napi_1_1_method_callback_data" kindref="compound">MethodCallbackData</ref>&lt; T, <ref refid="class_napi_1_1_instance_wrap_1a41b3f207e6145a08d7c86c9d1c9ac713" kindref="member">InstanceMethodCallback</ref> &gt;</type>
        <definition>using Napi::InstanceWrap&lt; T &gt;::InstanceMethodCallbackData = 
      MethodCallbackData&lt;T, InstanceMethodCallback&gt;</definition>
        <argsstring></argsstring>
        <name>InstanceMethodCallbackData</name>
        <qualifiedname>Napi::InstanceWrap::InstanceMethodCallbackData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2242" column="3" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="2242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_napi_1_1_instance_wrap_1a4e32f7f9c4aabe318861383e2deb908e" prot="private" static="no">
        <type><ref refid="struct_napi_1_1_accessor_callback_data" kindref="compound">AccessorCallbackData</ref>&lt; T, <ref refid="class_napi_1_1_instance_wrap_1abe4b17e69bb70e40341a17f3eebb4da4" kindref="member">InstanceGetterCallback</ref>, <ref refid="class_napi_1_1_instance_wrap_1a74c0b22a0c7d8af5e9912eae6773e3cd" kindref="member">InstanceSetterCallback</ref> &gt;</type>
        <definition>using Napi::InstanceWrap&lt; T &gt;::InstanceAccessorCallbackData = 
      AccessorCallbackData&lt;T, InstanceGetterCallback, InstanceSetterCallback&gt;</definition>
        <argsstring></argsstring>
        <name>InstanceAccessorCallbackData</name>
        <qualifiedname>Napi::InstanceWrap::InstanceAccessorCallbackData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2244" column="3" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="2244" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1afc90b95e3e63c0130a424b1e4a0f7899" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>ClassPropertyDescriptor&lt; T &gt; Napi::InstanceWrap&lt; T &gt;::InstanceMethod</definition>
        <argsstring>(const char *utf8name, InstanceVoidMethodCallback method, napi_property_attributes attributes=napi_default, void *data=nullptr)</argsstring>
        <name>InstanceMethod</name>
        <qualifiedname>Napi::InstanceWrap::InstanceMethod</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
        </param>
        <param>
          <type><ref refid="class_napi_1_1_instance_wrap_1ada17136961c45b29f87e9be692628fab" kindref="member">InstanceVoidMethodCallback</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2159" column="29" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4147" bodyend="4161"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a5a88801cba49425f21558c02ce0a2e15" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>ClassPropertyDescriptor&lt; T &gt; Napi::InstanceWrap&lt; T &gt;::InstanceMethod</definition>
        <argsstring>(const char *utf8name, InstanceMethodCallback method, napi_property_attributes attributes=napi_default, void *data=nullptr)</argsstring>
        <name>InstanceMethod</name>
        <qualifiedname>Napi::InstanceWrap::InstanceMethod</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
        </param>
        <param>
          <type><ref refid="class_napi_1_1_instance_wrap_1a41b3f207e6145a08d7c86c9d1c9ac713" kindref="member">InstanceMethodCallback</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2164" column="29" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4164" bodyend="4178"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1abf8b33af5afd8bdd5e6f7e5ffeb1d323" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>ClassPropertyDescriptor&lt; T &gt; Napi::InstanceWrap&lt; T &gt;::InstanceMethod</definition>
        <argsstring>(Symbol name, InstanceVoidMethodCallback method, napi_property_attributes attributes=napi_default, void *data=nullptr)</argsstring>
        <name>InstanceMethod</name>
        <qualifiedname>Napi::InstanceWrap::InstanceMethod</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_symbol" kindref="compound">Symbol</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_napi_1_1_instance_wrap_1ada17136961c45b29f87e9be692628fab" kindref="member">InstanceVoidMethodCallback</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2169" column="29" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4181" bodyend="4195"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a7a002d25e0c0f5cab1c9a80387560dd0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>ClassPropertyDescriptor&lt; T &gt; Napi::InstanceWrap&lt; T &gt;::InstanceMethod</definition>
        <argsstring>(Symbol name, InstanceMethodCallback method, napi_property_attributes attributes=napi_default, void *data=nullptr)</argsstring>
        <name>InstanceMethod</name>
        <qualifiedname>Napi::InstanceWrap::InstanceMethod</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_symbol" kindref="compound">Symbol</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_napi_1_1_instance_wrap_1a41b3f207e6145a08d7c86c9d1c9ac713" kindref="member">InstanceMethodCallback</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2174" column="29" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4198" bodyend="4212"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a916edc73880b47c402e5bc533a1a60c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="class_napi_1_1_instance_wrap_1ada17136961c45b29f87e9be692628fab" kindref="member">InstanceVoidMethodCallback</ref></type>
            <declname>method</declname>
            <defname>method</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>static PropertyDescriptor Napi::InstanceWrap&lt; T &gt;::InstanceMethod</definition>
        <argsstring>(const char *utf8name, napi_property_attributes attributes=napi_default, void *data=nullptr)</argsstring>
        <name>InstanceMethod</name>
        <qualifiedname>Napi::InstanceWrap::InstanceMethod</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2180" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a916edc73880b47c402e5bc533a1a60c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="class_napi_1_1_instance_wrap_1a41b3f207e6145a08d7c86c9d1c9ac713" kindref="member">InstanceMethodCallback</ref></type>
            <declname>method</declname>
            <defname>method</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>static PropertyDescriptor Napi::InstanceWrap&lt; T &gt;::InstanceMethod</definition>
        <argsstring>(const char *utf8name, napi_property_attributes attributes=napi_default, void *data=nullptr)</argsstring>
        <name>InstanceMethod</name>
        <qualifiedname>Napi::InstanceWrap::InstanceMethod</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2185" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1aaefdb7b910a0d6f930c2e2772173426e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="class_napi_1_1_instance_wrap_1ada17136961c45b29f87e9be692628fab" kindref="member">InstanceVoidMethodCallback</ref></type>
            <declname>method</declname>
            <defname>method</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>static PropertyDescriptor Napi::InstanceWrap&lt; T &gt;::InstanceMethod</definition>
        <argsstring>(Symbol name, napi_property_attributes attributes=napi_default, void *data=nullptr)</argsstring>
        <name>InstanceMethod</name>
        <qualifiedname>Napi::InstanceWrap::InstanceMethod</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_symbol" kindref="compound">Symbol</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2190" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1aaefdb7b910a0d6f930c2e2772173426e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="class_napi_1_1_instance_wrap_1a41b3f207e6145a08d7c86c9d1c9ac713" kindref="member">InstanceMethodCallback</ref></type>
            <declname>method</declname>
            <defname>method</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>static PropertyDescriptor Napi::InstanceWrap&lt; T &gt;::InstanceMethod</definition>
        <argsstring>(Symbol name, napi_property_attributes attributes=napi_default, void *data=nullptr)</argsstring>
        <name>InstanceMethod</name>
        <qualifiedname>Napi::InstanceWrap::InstanceMethod</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_symbol" kindref="compound">Symbol</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2195" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a85e0d750f20079806d4966708559290a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>ClassPropertyDescriptor&lt; T &gt; Napi::InstanceWrap&lt; T &gt;::InstanceAccessor</definition>
        <argsstring>(const char *utf8name, InstanceGetterCallback getter, InstanceSetterCallback setter, napi_property_attributes attributes=napi_default, void *data=nullptr)</argsstring>
        <name>InstanceAccessor</name>
        <qualifiedname>Napi::InstanceWrap::InstanceAccessor</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
        </param>
        <param>
          <type><ref refid="class_napi_1_1_instance_wrap_1abe4b17e69bb70e40341a17f3eebb4da4" kindref="member">InstanceGetterCallback</ref></type>
          <declname>getter</declname>
        </param>
        <param>
          <type><ref refid="class_napi_1_1_instance_wrap_1a74c0b22a0c7d8af5e9912eae6773e3cd" kindref="member">InstanceSetterCallback</ref></type>
          <declname>setter</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2199" column="29" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4263" bodyend="4279"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1afdc66bd9ba80c2a1d83a06cd015be547" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>ClassPropertyDescriptor&lt; T &gt; Napi::InstanceWrap&lt; T &gt;::InstanceAccessor</definition>
        <argsstring>(Symbol name, InstanceGetterCallback getter, InstanceSetterCallback setter, napi_property_attributes attributes=napi_default, void *data=nullptr)</argsstring>
        <name>InstanceAccessor</name>
        <qualifiedname>Napi::InstanceWrap::InstanceAccessor</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_symbol" kindref="compound">Symbol</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_napi_1_1_instance_wrap_1abe4b17e69bb70e40341a17f3eebb4da4" kindref="member">InstanceGetterCallback</ref></type>
          <declname>getter</declname>
        </param>
        <param>
          <type><ref refid="class_napi_1_1_instance_wrap_1a74c0b22a0c7d8af5e9912eae6773e3cd" kindref="member">InstanceSetterCallback</ref></type>
          <declname>setter</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2205" column="29" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4282" bodyend="4298"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a3eb99195a22e95d4f4fc08198aea8b35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="class_napi_1_1_instance_wrap_1abe4b17e69bb70e40341a17f3eebb4da4" kindref="member">InstanceGetterCallback</ref></type>
            <declname>getter</declname>
            <defname>getter</defname>
          </param>
          <param>
            <type><ref refid="class_napi_1_1_instance_wrap_1a74c0b22a0c7d8af5e9912eae6773e3cd" kindref="member">InstanceSetterCallback</ref></type>
            <declname>setter</declname>
            <defname>setter</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>static PropertyDescriptor Napi::InstanceWrap&lt; T &gt;::InstanceAccessor</definition>
        <argsstring>(const char *utf8name, napi_property_attributes attributes=napi_default, void *data=nullptr)</argsstring>
        <name>InstanceAccessor</name>
        <qualifiedname>Napi::InstanceWrap::InstanceAccessor</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2213" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a96e7133e9cee4d09f521d69a2157cc82" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="class_napi_1_1_instance_wrap_1abe4b17e69bb70e40341a17f3eebb4da4" kindref="member">InstanceGetterCallback</ref></type>
            <declname>getter</declname>
            <defname>getter</defname>
          </param>
          <param>
            <type><ref refid="class_napi_1_1_instance_wrap_1a74c0b22a0c7d8af5e9912eae6773e3cd" kindref="member">InstanceSetterCallback</ref></type>
            <declname>setter</declname>
            <defname>setter</defname>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>static PropertyDescriptor Napi::InstanceWrap&lt; T &gt;::InstanceAccessor</definition>
        <argsstring>(Symbol name, napi_property_attributes attributes=napi_default, void *data=nullptr)</argsstring>
        <name>InstanceAccessor</name>
        <qualifiedname>Napi::InstanceWrap::InstanceAccessor</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_symbol" kindref="compound">Symbol</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2219" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1abd9a2d8c4b72c9947dfb80836c2150aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>ClassPropertyDescriptor&lt; T &gt; Napi::InstanceWrap&lt; T &gt;::InstanceValue</definition>
        <argsstring>(const char *utf8name, Napi::Value value, napi_property_attributes attributes=napi_default)</argsstring>
        <name>InstanceValue</name>
        <qualifiedname>Napi::InstanceWrap::InstanceValue</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
        </param>
        <param>
          <type><ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2223" column="29" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4329" bodyend="4338"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1abc1df9fcd66d1df07a30ab0b7ab411f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" kindref="member">PropertyDescriptor</ref></type>
        <definition>ClassPropertyDescriptor&lt; T &gt; Napi::InstanceWrap&lt; T &gt;::InstanceValue</definition>
        <argsstring>(Symbol name, Napi::Value value, napi_property_attributes attributes=napi_default)</argsstring>
        <name>InstanceValue</name>
        <qualifiedname>Napi::InstanceWrap::InstanceValue</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_symbol" kindref="compound">Symbol</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_napi_1_1_value" kindref="compound">Napi::Value</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
          <defval>napi_default</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2227" column="29" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4341" bodyend="4348"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a79fb97be981e347863b0ca2224a2d558" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Napi::InstanceWrap&lt; T &gt;::AttachPropData</definition>
        <argsstring>(napi_env env, napi_value value, const napi_property_descriptor *prop)</argsstring>
        <name>AttachPropData</name>
        <qualifiedname>Napi::InstanceWrap::AttachPropData</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <param>
          <type>napi_value</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const napi_property_descriptor *</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2233" column="15" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4125" bodyend="4144"/>
        <references refid="namespace_napi_1_1details_1aed17b091866e446cad680fff56853bc8" compoundref="napi-inl_8h" startline="45" endline="71">Napi::details::AttachData</references>
        <references refid="napi_8h_1ac36643b3916c3dd8c17ec9c4bebae860" compoundref="napi_8h" startline="107" endline="111">NAPI_THROW_IF_FAILED_VOID</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a6685a1518b8f1d95234ceffed7a38393" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>napi_value</type>
        <definition>napi_value Napi::InstanceWrap&lt; T &gt;::InstanceVoidMethodCallbackWrapper</definition>
        <argsstring>(napi_env env, napi_callback_info info)</argsstring>
        <name>InstanceVoidMethodCallbackWrapper</name>
        <qualifiedname>Napi::InstanceWrap::InstanceVoidMethodCallbackWrapper</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <param>
          <type>napi_callback_info</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2247" column="21" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4351" bodyend="4363"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1ad4b3c1e7bcb7aca695b96cbc00a78e74" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>napi_value</type>
        <definition>napi_value Napi::InstanceWrap&lt; T &gt;::InstanceMethodCallbackWrapper</definition>
        <argsstring>(napi_env env, napi_callback_info info)</argsstring>
        <name>InstanceMethodCallbackWrapper</name>
        <qualifiedname>Napi::InstanceWrap::InstanceMethodCallbackWrapper</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <param>
          <type>napi_callback_info</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2249" column="21" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4366" bodyend="4377"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a0d3f3462b22198f20b2e1606636a89b3" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>napi_value</type>
        <definition>napi_value Napi::InstanceWrap&lt; T &gt;::InstanceGetterCallbackWrapper</definition>
        <argsstring>(napi_env env, napi_callback_info info)</argsstring>
        <name>InstanceGetterCallbackWrapper</name>
        <qualifiedname>Napi::InstanceWrap::InstanceGetterCallbackWrapper</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <param>
          <type>napi_callback_info</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2251" column="21" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4380" bodyend="4391"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a13b8d79f561a832b6b05a5897e1d47f6" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>napi_value</type>
        <definition>napi_value Napi::InstanceWrap&lt; T &gt;::InstanceSetterCallbackWrapper</definition>
        <argsstring>(napi_env env, napi_callback_info info)</argsstring>
        <name>InstanceSetterCallbackWrapper</name>
        <qualifiedname>Napi::InstanceWrap::InstanceSetterCallbackWrapper</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <param>
          <type>napi_callback_info</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2253" column="21" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4394" bodyend="4406"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a94c63103905d1f819be88729f9bfc1f3" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="class_napi_1_1_instance_wrap_1a74c0b22a0c7d8af5e9912eae6773e3cd" kindref="member">InstanceSetterCallback</ref></type>
            <declname>method</declname>
            <defname>method</defname>
          </param>
        </templateparamlist>
        <type>napi_value</type>
        <definition>napi_value Napi::InstanceWrap&lt; T &gt;::WrappedMethod</definition>
        <argsstring>(napi_env env, napi_callback_info info) NAPI_NOEXCEPT</argsstring>
        <name>WrappedMethod</name>
        <qualifiedname>Napi::InstanceWrap::WrappedMethod</qualifiedname>
        <param>
          <type>napi_env</type>
          <declname>env</declname>
        </param>
        <param>
          <type>napi_callback_info</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2257" column="21" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4410" bodyend="4418"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1aec181504c381d78e4c4457176ed71169" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="class_napi_1_1_instance_wrap_1a74c0b22a0c7d8af5e9912eae6773e3cd" kindref="member">InstanceSetterCallback</ref></type>
            <declname>setter</declname>
            <defname>setter</defname>
          </param>
        </templateparamlist>
        <type>napi_callback</type>
        <definition>static napi_callback Napi::InstanceWrap&lt; T &gt;::WrapSetter</definition>
        <argsstring>(SetterTag&lt; setter &gt;) NAPI_NOEXCEPT</argsstring>
        <name>WrapSetter</name>
        <qualifiedname>Napi::InstanceWrap::WrapSetter</qualifiedname>
        <param>
          <type>SetterTag&lt; setter &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2264" column="24" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="2264" bodyend="2266"/>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a0d175cdee72c7040093ce3d608b9a950" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>napi_callback</type>
        <definition>static napi_callback Napi::InstanceWrap&lt; T &gt;::WrapSetter</definition>
        <argsstring>(SetterTag&lt; nullptr &gt;) NAPI_NOEXCEPT</argsstring>
        <name>WrapSetter</name>
        <qualifiedname>Napi::InstanceWrap::WrapSetter</qualifiedname>
        <param>
          <type>SetterTag&lt; nullptr &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi.h" line="2267" column="24" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="2267" bodyend="2269"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1acf3b9ad6a732e6ff224dca4c5503175c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="class_napi_1_1_instance_wrap" kindref="compound">InstanceWrap</ref>&lt; T &gt;<ref refid="class_napi_1_1_instance_wrap_1ada17136961c45b29f87e9be692628fab" kindref="member">::InstanceVoidMethodCallback</ref></type>
            <declname>method</declname>
            <defname>method</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_napi_1_1_class_property_descriptor" kindref="compound">ClassPropertyDescriptor</ref>&lt; T &gt;</type>
        <definition>ClassPropertyDescriptor&lt; T &gt; Napi::InstanceWrap&lt; T &gt;::InstanceMethod</definition>
        <argsstring>(const char *utf8name, napi_property_attributes attributes, void *data)</argsstring>
        <name>InstanceMethod</name>
        <qualifiedname>Napi::InstanceWrap::InstanceMethod</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi-inl.h" line="4216" column="45" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4216" bodyend="4224"/>
        <references refid="namespace_napi_1_1details_1aa75f927fdfd3fcb5ca56c8fdc83b3017" compoundref="napi-inl_8h" startline="173" endline="181">Napi::details::TemplatedInstanceVoidCallback</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a045fb0fb543ac0621b09b7f3adc0d621" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="class_napi_1_1_instance_wrap" kindref="compound">InstanceWrap</ref>&lt; T &gt;<ref refid="class_napi_1_1_instance_wrap_1ada17136961c45b29f87e9be692628fab" kindref="member">::InstanceVoidMethodCallback</ref></type>
            <declname>method</declname>
            <defname>method</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_napi_1_1_class_property_descriptor" kindref="compound">ClassPropertyDescriptor</ref>&lt; T &gt;</type>
        <definition>ClassPropertyDescriptor&lt; T &gt; Napi::InstanceWrap&lt; T &gt;::InstanceMethod</definition>
        <argsstring>(Symbol name, napi_property_attributes attributes, void *data)</argsstring>
        <name>InstanceMethod</name>
        <qualifiedname>Napi::InstanceWrap::InstanceMethod</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_symbol" kindref="compound">Symbol</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi-inl.h" line="4240" column="45" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4240" bodyend="4248"/>
        <references refid="namespace_napi_1_1details_1aa75f927fdfd3fcb5ca56c8fdc83b3017" compoundref="napi-inl_8h" startline="173" endline="181">Napi::details::TemplatedInstanceVoidCallback</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1a393883f6685da45e82ec1ae79bdec19d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="class_napi_1_1_instance_wrap" kindref="compound">InstanceWrap</ref>&lt; T &gt;<ref refid="class_napi_1_1_instance_wrap_1abe4b17e69bb70e40341a17f3eebb4da4" kindref="member">::InstanceGetterCallback</ref></type>
            <declname>getter</declname>
            <defname>getter</defname>
          </param>
          <param>
            <type>typename <ref refid="class_napi_1_1_instance_wrap" kindref="compound">InstanceWrap</ref>&lt; T &gt;<ref refid="class_napi_1_1_instance_wrap_1a74c0b22a0c7d8af5e9912eae6773e3cd" kindref="member">::InstanceSetterCallback</ref></type>
            <declname>setter</declname>
            <defname>setter</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_napi_1_1_class_property_descriptor" kindref="compound">ClassPropertyDescriptor</ref>&lt; T &gt;</type>
        <definition>ClassPropertyDescriptor&lt; T &gt; Napi::InstanceWrap&lt; T &gt;::InstanceAccessor</definition>
        <argsstring>(const char *utf8name, napi_property_attributes attributes, void *data)</argsstring>
        <name>InstanceAccessor</name>
        <qualifiedname>Napi::InstanceWrap::InstanceAccessor</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>utf8name</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi-inl.h" line="4303" column="45" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4303" bodyend="4312"/>
        <references refid="namespace_napi_1_1details_1af616a966dd94b3cb1272bc7864623eba" compoundref="napi-inl_8h" startline="163" endline="170">Napi::details::TemplatedInstanceCallback</references>
      </memberdef>
      <memberdef kind="function" id="class_napi_1_1_instance_wrap_1adca0f4d098e7b41199b4ecd60d3a66a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="class_napi_1_1_instance_wrap" kindref="compound">InstanceWrap</ref>&lt; T &gt;<ref refid="class_napi_1_1_instance_wrap_1abe4b17e69bb70e40341a17f3eebb4da4" kindref="member">::InstanceGetterCallback</ref></type>
            <declname>getter</declname>
            <defname>getter</defname>
          </param>
          <param>
            <type>typename <ref refid="class_napi_1_1_instance_wrap" kindref="compound">InstanceWrap</ref>&lt; T &gt;<ref refid="class_napi_1_1_instance_wrap_1a74c0b22a0c7d8af5e9912eae6773e3cd" kindref="member">::InstanceSetterCallback</ref></type>
            <declname>setter</declname>
            <defname>setter</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_napi_1_1_class_property_descriptor" kindref="compound">ClassPropertyDescriptor</ref>&lt; T &gt;</type>
        <definition>ClassPropertyDescriptor&lt; T &gt; Napi::InstanceWrap&lt; T &gt;::InstanceAccessor</definition>
        <argsstring>(Symbol name, napi_property_attributes attributes, void *data)</argsstring>
        <name>InstanceAccessor</name>
        <qualifiedname>Napi::InstanceWrap::InstanceAccessor</qualifiedname>
        <param>
          <type><ref refid="class_napi_1_1_symbol" kindref="compound">Symbol</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>napi_property_attributes</type>
          <declname>attributes</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backend/node_modules/node-addon-api/napi-inl.h" line="4317" column="45" bodyfile="backend/node_modules/node-addon-api/napi-inl.h" bodystart="4317" bodyend="4326"/>
        <references refid="namespace_napi_1_1details_1af616a966dd94b3cb1272bc7864623eba" compoundref="napi-inl_8h" startline="163" endline="170">Napi::details::TemplatedInstanceCallback</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Napi::InstanceWrap&lt; T &gt;</label>
        <link refid="class_napi_1_1_instance_wrap"/>
      </node>
      <node id="2">
        <label>Napi::ObjectWrap&lt; T &gt;</label>
        <link refid="class_napi_1_1_object_wrap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="backend/node_modules/node-addon-api/napi.h" line="2149" column="1" bodyfile="backend/node_modules/node-addon-api/napi.h" bodystart="2149" bodyend="2270"/>
    <listofallmembers>
      <member refid="class_napi_1_1_instance_wrap_1a79fb97be981e347863b0ca2224a2d558" prot="protected" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>AttachPropData</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a85e0d750f20079806d4966708559290a" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceAccessor</name></member>
      <member refid="class_napi_1_1_instance_wrap_1afdc66bd9ba80c2a1d83a06cd015be547" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceAccessor</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a3eb99195a22e95d4f4fc08198aea8b35" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceAccessor</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a96e7133e9cee4d09f521d69a2157cc82" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceAccessor</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a393883f6685da45e82ec1ae79bdec19d" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceAccessor</name></member>
      <member refid="class_napi_1_1_instance_wrap_1adca0f4d098e7b41199b4ecd60d3a66a0" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceAccessor</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a4e32f7f9c4aabe318861383e2deb908e" prot="private" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceAccessorCallbackData</name></member>
      <member refid="class_napi_1_1_instance_wrap_1abe4b17e69bb70e40341a17f3eebb4da4" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceGetterCallback</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a0d3f3462b22198f20b2e1606636a89b3" prot="private" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceGetterCallbackWrapper</name></member>
      <member refid="class_napi_1_1_instance_wrap_1afc90b95e3e63c0130a424b1e4a0f7899" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceMethod</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a5a88801cba49425f21558c02ce0a2e15" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceMethod</name></member>
      <member refid="class_napi_1_1_instance_wrap_1abf8b33af5afd8bdd5e6f7e5ffeb1d323" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceMethod</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a7a002d25e0c0f5cab1c9a80387560dd0" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceMethod</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a916edc73880b47c402e5bc533a1a60c1" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceMethod</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a916edc73880b47c402e5bc533a1a60c1" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceMethod</name></member>
      <member refid="class_napi_1_1_instance_wrap_1aaefdb7b910a0d6f930c2e2772173426e" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceMethod</name></member>
      <member refid="class_napi_1_1_instance_wrap_1aaefdb7b910a0d6f930c2e2772173426e" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceMethod</name></member>
      <member refid="class_napi_1_1_instance_wrap_1acf3b9ad6a732e6ff224dca4c5503175c" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceMethod</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a045fb0fb543ac0621b09b7f3adc0d621" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceMethod</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a41b3f207e6145a08d7c86c9d1c9ac713" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceMethodCallback</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a3044917ac6b681f0daa00cf49dc90051" prot="private" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceMethodCallbackData</name></member>
      <member refid="class_napi_1_1_instance_wrap_1ad4b3c1e7bcb7aca695b96cbc00a78e74" prot="private" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceMethodCallbackWrapper</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a74c0b22a0c7d8af5e9912eae6773e3cd" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceSetterCallback</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a13b8d79f561a832b6b05a5897e1d47f6" prot="private" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceSetterCallbackWrapper</name></member>
      <member refid="class_napi_1_1_instance_wrap_1abd9a2d8c4b72c9947dfb80836c2150aa" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceValue</name></member>
      <member refid="class_napi_1_1_instance_wrap_1abc1df9fcd66d1df07a30ab0b7ab411f5" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceValue</name></member>
      <member refid="class_napi_1_1_instance_wrap_1ada17136961c45b29f87e9be692628fab" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceVoidMethodCallback</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a1f22a238210cd90c1ad4d6d84e4337f2" prot="private" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceVoidMethodCallbackData</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a6685a1518b8f1d95234ceffed7a38393" prot="private" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>InstanceVoidMethodCallbackWrapper</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a30a21f47920a82cc146a70fc395008d8" prot="public" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>PropertyDescriptor</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a318e872f48e6b30235f125b607740bf3" prot="private" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>This</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a94c63103905d1f819be88729f9bfc1f3" prot="private" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>WrappedMethod</name></member>
      <member refid="class_napi_1_1_instance_wrap_1aec181504c381d78e4c4457176ed71169" prot="private" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>WrapSetter</name></member>
      <member refid="class_napi_1_1_instance_wrap_1a0d175cdee72c7040093ce3d608b9a950" prot="private" virt="non-virtual"><scope>Napi::InstanceWrap</scope><name>WrapSetter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
