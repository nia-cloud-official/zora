<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2depd_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>Readme.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>depd</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Version][npm-version-image]][npm-url]</highlight></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Downloads][npm-downloads-image]][npm-url]</highlight></codeline>
<codeline><highlight class="normal">[![Node.js<sp/>Version][node-image]][node-url]</highlight></codeline>
<codeline><highlight class="normal">[![Linux<sp/>Build][travis-image]][travis-url]</highlight></codeline>
<codeline><highlight class="normal">[![Windows<sp/>Build][appveyor-image]][appveyor-url]</highlight></codeline>
<codeline><highlight class="normal">[![Coverage<sp/>Status][coveralls-image]][coveralls-url]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Deprecate<sp/>all<sp/>the<sp/>things</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>With<sp/>great<sp/>modules<sp/>comes<sp/>great<sp/>responsibility;<sp/>mark<sp/>things<sp/>deprecated!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Install</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>module<sp/>is<sp/>installed<sp/>directly<sp/>using<sp/>`npm`:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">$<sp/>npm<sp/>install<sp/>depd</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>module<sp/>can<sp/>also<sp/>be<sp/>bundled<sp/>with<sp/>systems<sp/>like</highlight></codeline>
<codeline><highlight class="normal">[Browserify](http://browserify.org/)<sp/>or<sp/>[webpack](https://webpack.github.io/),</highlight></codeline>
<codeline><highlight class="normal">though<sp/>by<sp/>default<sp/>this<sp/>module<sp/>will<sp/>alter<sp/>it&apos;s<sp/>API<sp/>to<sp/>no<sp/>longer<sp/>display<sp/>or</highlight></codeline>
<codeline><highlight class="normal">track<sp/>deprecations.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&lt;!--<sp/>eslint-disable<sp/>no-unused-vars<sp/>--&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>deprecate<sp/>=<sp/>require(&apos;depd&apos;)(&apos;my-module&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>library<sp/>allows<sp/>you<sp/>to<sp/>display<sp/>deprecation<sp/>messages<sp/>to<sp/>your<sp/>users.</highlight></codeline>
<codeline><highlight class="normal">This<sp/>library<sp/>goes<sp/>above<sp/>and<sp/>beyond<sp/>with<sp/>deprecation<sp/>warnings<sp/>by</highlight></codeline>
<codeline><highlight class="normal">introspection<sp/>of<sp/>the<sp/>call<sp/>stack<sp/>(but<sp/>only<sp/>the<sp/>bits<sp/>that<sp/>it<sp/>is<sp/>interested</highlight></codeline>
<codeline><highlight class="normal">in).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Instead<sp/>of<sp/>just<sp/>warning<sp/>on<sp/>the<sp/>first<sp/>invocation<sp/>of<sp/>a<sp/>deprecated</highlight></codeline>
<codeline><highlight class="normal">function<sp/>and<sp/>never<sp/>again,<sp/>this<sp/>module<sp/>will<sp/>warn<sp/>on<sp/>the<sp/>first<sp/>invocation</highlight></codeline>
<codeline><highlight class="normal">of<sp/>a<sp/>deprecated<sp/>function<sp/>per<sp/>unique<sp/>call<sp/>site,<sp/>making<sp/>it<sp/>ideal<sp/>to<sp/>alert</highlight></codeline>
<codeline><highlight class="normal">users<sp/>of<sp/>all<sp/>deprecated<sp/>uses<sp/>across<sp/>the<sp/>code<sp/>base,<sp/>rather<sp/>than<sp/>just</highlight></codeline>
<codeline><highlight class="normal">whatever<sp/>happens<sp/>to<sp/>execute<sp/>first.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>deprecation<sp/>warnings<sp/>from<sp/>this<sp/>module<sp/>also<sp/>include<sp/>the<sp/>file<sp/>and<sp/>line</highlight></codeline>
<codeline><highlight class="normal">information<sp/>for<sp/>the<sp/>call<sp/>into<sp/>the<sp/>module<sp/>that<sp/>the<sp/>deprecated<sp/>function<sp/>was</highlight></codeline>
<codeline><highlight class="normal">in.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**NOTE**<sp/>this<sp/>library<sp/>has<sp/>a<sp/>similar<sp/>interface<sp/>to<sp/>the<sp/>`debug`<sp/>module,<sp/>and</highlight></codeline>
<codeline><highlight class="normal">this<sp/>module<sp/>uses<sp/>the<sp/>calling<sp/>file<sp/>to<sp/>get<sp/>the<sp/>boundary<sp/>for<sp/>the<sp/>call<sp/>stacks,</highlight></codeline>
<codeline><highlight class="normal">so<sp/>you<sp/>should<sp/>always<sp/>create<sp/>a<sp/>new<sp/>`deprecate`<sp/>object<sp/>in<sp/>each<sp/>file<sp/>and<sp/>not</highlight></codeline>
<codeline><highlight class="normal">within<sp/>some<sp/>central<sp/>file.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>depd(namespace)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>a<sp/>new<sp/>deprecate<sp/>function<sp/>that<sp/>uses<sp/>the<sp/>given<sp/>namespace<sp/>name<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal">messages<sp/>and<sp/>will<sp/>display<sp/>the<sp/>call<sp/>site<sp/>prior<sp/>to<sp/>the<sp/>stack<sp/>entering<sp/>the</highlight></codeline>
<codeline><highlight class="normal">file<sp/>this<sp/>function<sp/>was<sp/>called<sp/>from.<sp/>It<sp/>is<sp/>highly<sp/>suggested<sp/>you<sp/>use<sp/>the</highlight></codeline>
<codeline><highlight class="normal">name<sp/>of<sp/>your<sp/>module<sp/>as<sp/>the<sp/>namespace.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>deprecate(message)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Call<sp/>this<sp/>function<sp/>from<sp/>deprecated<sp/>code<sp/>to<sp/>display<sp/>a<sp/>deprecation<sp/>message.</highlight></codeline>
<codeline><highlight class="normal">This<sp/>message<sp/>will<sp/>appear<sp/>once<sp/>per<sp/>unique<sp/>caller<sp/>site.<sp/>Caller<sp/>site<sp/>is<sp/>the</highlight></codeline>
<codeline><highlight class="normal">first<sp/>call<sp/>site<sp/>in<sp/>the<sp/>stack<sp/>in<sp/>a<sp/>different<sp/>file<sp/>from<sp/>the<sp/>caller<sp/>of<sp/>this</highlight></codeline>
<codeline><highlight class="normal">function.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>the<sp/>message<sp/>is<sp/>omitted,<sp/>a<sp/>message<sp/>is<sp/>generated<sp/>for<sp/>you<sp/>based<sp/>on<sp/>the<sp/>site</highlight></codeline>
<codeline><highlight class="normal">of<sp/>the<sp/>`deprecate()`<sp/>call<sp/>and<sp/>will<sp/>display<sp/>the<sp/>name<sp/>of<sp/>the<sp/>function<sp/>called,</highlight></codeline>
<codeline><highlight class="normal">similar<sp/>to<sp/>the<sp/>name<sp/>displayed<sp/>in<sp/>a<sp/>stack<sp/>trace.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>deprecate.function(fn,<sp/>message)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Call<sp/>this<sp/>function<sp/>to<sp/>wrap<sp/>a<sp/>given<sp/>function<sp/>in<sp/>a<sp/>deprecation<sp/>message<sp/>on<sp/>any</highlight></codeline>
<codeline><highlight class="normal">call<sp/>to<sp/>the<sp/>function.<sp/>An<sp/>optional<sp/>message<sp/>can<sp/>be<sp/>supplied<sp/>to<sp/>provide<sp/>a<sp/>custom</highlight></codeline>
<codeline><highlight class="normal">message.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>deprecate.property(obj,<sp/>prop,<sp/>message)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Call<sp/>this<sp/>function<sp/>to<sp/>wrap<sp/>a<sp/>given<sp/>property<sp/>on<sp/>object<sp/>in<sp/>a<sp/>deprecation<sp/>message</highlight></codeline>
<codeline><highlight class="normal">on<sp/>any<sp/>accessing<sp/>or<sp/>setting<sp/>of<sp/>the<sp/>property.<sp/>An<sp/>optional<sp/>message<sp/>can<sp/>be<sp/>supplied</highlight></codeline>
<codeline><highlight class="normal">to<sp/>provide<sp/>a<sp/>custom<sp/>message.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>method<sp/>must<sp/>be<sp/>called<sp/>on<sp/>the<sp/>object<sp/>where<sp/>the<sp/>property<sp/>belongs<sp/>(not</highlight></codeline>
<codeline><highlight class="normal">inherited<sp/>from<sp/>the<sp/>prototype).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>the<sp/>property<sp/>is<sp/>a<sp/>data<sp/>descriptor,<sp/>it<sp/>will<sp/>be<sp/>converted<sp/>to<sp/>an<sp/>accessor</highlight></codeline>
<codeline><highlight class="normal">descriptor<sp/>in<sp/>order<sp/>to<sp/>display<sp/>the<sp/>deprecation<sp/>message.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>process.on(&apos;deprecation&apos;,<sp/>fn)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>module<sp/>will<sp/>allow<sp/>easy<sp/>capturing<sp/>of<sp/>deprecation<sp/>errors<sp/>by<sp/>emitting<sp/>the</highlight></codeline>
<codeline><highlight class="normal">errors<sp/>as<sp/>the<sp/>type<sp/>&quot;deprecation&quot;<sp/>on<sp/>the<sp/>global<sp/>`process`.<sp/>If<sp/>there<sp/>are<sp/>no</highlight></codeline>
<codeline><highlight class="normal">listeners<sp/>for<sp/>this<sp/>type,<sp/>the<sp/>errors<sp/>are<sp/>written<sp/>to<sp/>STDERR<sp/>as<sp/>normal,<sp/>but<sp/>if</highlight></codeline>
<codeline><highlight class="normal">there<sp/>are<sp/>any<sp/>listeners,<sp/>nothing<sp/>will<sp/>be<sp/>written<sp/>to<sp/>STDERR<sp/>and<sp/>instead<sp/>only</highlight></codeline>
<codeline><highlight class="normal">emitted.<sp/>From<sp/>there,<sp/>you<sp/>can<sp/>write<sp/>the<sp/>errors<sp/>in<sp/>a<sp/>different<sp/>format<sp/>or<sp/>to<sp/>a</highlight></codeline>
<codeline><highlight class="normal">logging<sp/>source.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>error<sp/>represents<sp/>the<sp/>deprecation<sp/>and<sp/>is<sp/>emitted<sp/>only<sp/>once<sp/>with<sp/>the<sp/>same</highlight></codeline>
<codeline><highlight class="normal">rules<sp/>as<sp/>writing<sp/>to<sp/>STDERR.<sp/>The<sp/>error<sp/>has<sp/>the<sp/>following<sp/>properties:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`message`<sp/>-<sp/>This<sp/>is<sp/>the<sp/>message<sp/>given<sp/>by<sp/>the<sp/>library</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`name`<sp/>-<sp/>This<sp/>is<sp/>always<sp/>`&apos;DeprecationError&apos;`</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`namespace`<sp/>-<sp/>This<sp/>is<sp/>the<sp/>namespace<sp/>the<sp/>deprecation<sp/>came<sp/>from</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`stack`<sp/>-<sp/>This<sp/>is<sp/>the<sp/>stack<sp/>of<sp/>the<sp/>call<sp/>to<sp/>the<sp/>deprecated<sp/>thing</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Example<sp/>`error.stack`<sp/>output:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">DeprecationError:<sp/>my-cool-module<sp/>deprecated<sp/>oldfunction</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>at<sp/>Object.&lt;anonymous&gt;<sp/>([eval]-wrapper:6:22)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>at<sp/>Module._compile<sp/>(module.js:456:26)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>at<sp/>evalScript<sp/>(node.js:532:25)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>at<sp/>startup<sp/>(node.js:80:7)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>at<sp/>node.js:902:3</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>process.env.NO_DEPRECATION</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">As<sp/>a<sp/>user<sp/>of<sp/>modules<sp/>that<sp/>are<sp/>deprecated,<sp/>the<sp/>environment<sp/>variable<sp/>`NO_DEPRECATION`</highlight></codeline>
<codeline><highlight class="normal">is<sp/>provided<sp/>as<sp/>a<sp/>quick<sp/>solution<sp/>to<sp/>silencing<sp/>deprecation<sp/>warnings<sp/>from<sp/>being</highlight></codeline>
<codeline><highlight class="normal">output.<sp/>The<sp/>format<sp/>of<sp/>this<sp/>is<sp/>similar<sp/>to<sp/>that<sp/>of<sp/>`DEBUG`:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">$<sp/>NO_DEPRECATION=my-module,othermod<sp/>node<sp/>app.js</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>will<sp/>suppress<sp/>deprecations<sp/>from<sp/>being<sp/>output<sp/>for<sp/>&quot;my-module&quot;<sp/>and<sp/>&quot;othermod&quot;.</highlight></codeline>
<codeline><highlight class="normal">The<sp/>value<sp/>is<sp/>a<sp/>list<sp/>of<sp/>comma-separated<sp/>namespaces.<sp/>To<sp/>suppress<sp/>every<sp/>warning</highlight></codeline>
<codeline><highlight class="normal">across<sp/>all<sp/>namespaces,<sp/>use<sp/>the<sp/>value<sp/>`*`<sp/>for<sp/>a<sp/>namespace.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Providing<sp/>the<sp/>argument<sp/>`--no-deprecation`<sp/>to<sp/>the<sp/>`node`<sp/>executable<sp/>will<sp/>suppress</highlight></codeline>
<codeline><highlight class="normal">all<sp/>deprecations<sp/>(only<sp/>available<sp/>in<sp/>Node.js<sp/>0.8<sp/>or<sp/>higher).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**NOTE**<sp/>This<sp/>will<sp/>not<sp/>suppress<sp/>the<sp/>deperecations<sp/>given<sp/>to<sp/>any<sp/>&quot;deprecation&quot;</highlight></codeline>
<codeline><highlight class="normal">event<sp/>listeners,<sp/>just<sp/>the<sp/>output<sp/>to<sp/>STDERR.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>process.env.TRACE_DEPRECATION</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">As<sp/>a<sp/>user<sp/>of<sp/>modules<sp/>that<sp/>are<sp/>deprecated,<sp/>the<sp/>environment<sp/>variable<sp/>`TRACE_DEPRECATION`</highlight></codeline>
<codeline><highlight class="normal">is<sp/>provided<sp/>as<sp/>a<sp/>solution<sp/>to<sp/>getting<sp/>more<sp/>detailed<sp/>location<sp/>information<sp/>in<sp/>deprecation</highlight></codeline>
<codeline><highlight class="normal">warnings<sp/>by<sp/>including<sp/>the<sp/>entire<sp/>stack<sp/>trace.<sp/>The<sp/>format<sp/>of<sp/>this<sp/>is<sp/>the<sp/>same<sp/>as</highlight></codeline>
<codeline><highlight class="normal">`NO_DEPRECATION`:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">$<sp/>TRACE_DEPRECATION=my-module,othermod<sp/>node<sp/>app.js</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>will<sp/>include<sp/>stack<sp/>traces<sp/>for<sp/>deprecations<sp/>being<sp/>output<sp/>for<sp/>&quot;my-module&quot;<sp/>and</highlight></codeline>
<codeline><highlight class="normal">&quot;othermod&quot;.<sp/>The<sp/>value<sp/>is<sp/>a<sp/>list<sp/>of<sp/>comma-separated<sp/>namespaces.<sp/>To<sp/>trace<sp/>every</highlight></codeline>
<codeline><highlight class="normal">warning<sp/>across<sp/>all<sp/>namespaces,<sp/>use<sp/>the<sp/>value<sp/>`*`<sp/>for<sp/>a<sp/>namespace.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Providing<sp/>the<sp/>argument<sp/>`--trace-deprecation`<sp/>to<sp/>the<sp/>`node`<sp/>executable<sp/>will<sp/>trace</highlight></codeline>
<codeline><highlight class="normal">all<sp/>deprecations<sp/>(only<sp/>available<sp/>in<sp/>Node.js<sp/>0.8<sp/>or<sp/>higher).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**NOTE**<sp/>This<sp/>will<sp/>not<sp/>trace<sp/>the<sp/>deperecations<sp/>silenced<sp/>by<sp/>`NO_DEPRECATION`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Display</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![message](files/message.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">When<sp/>a<sp/>user<sp/>calls<sp/>a<sp/>function<sp/>in<sp/>your<sp/>library<sp/>that<sp/>you<sp/>mark<sp/>deprecated,<sp/>they</highlight></codeline>
<codeline><highlight class="normal">will<sp/>see<sp/>the<sp/>following<sp/>written<sp/>to<sp/>STDERR<sp/>(in<sp/>the<sp/>given<sp/>colors,<sp/>similar<sp/>colors</highlight></codeline>
<codeline><highlight class="normal">and<sp/>layout<sp/>to<sp/>the<sp/>`debug`<sp/>module):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">bright<sp/>cyan<sp/><sp/><sp/><sp/>bright<sp/>yellow</highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyan</highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">▼<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▼<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▼<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▼</highlight></codeline>
<codeline><highlight class="normal">my-cool-module<sp/>deprecated<sp/>oldfunction<sp/>[eval]-wrapper:6:22</highlight></codeline>
<codeline><highlight class="normal">▲<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▲<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▲<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▲</highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">namespace<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>location<sp/>of<sp/>mycoolmod.oldfunction()<sp/>call</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deprecation<sp/>message</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>word<sp/>&quot;deprecated&quot;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>the<sp/>user<sp/>redirects<sp/>their<sp/>STDERR<sp/>to<sp/>a<sp/>file<sp/>or<sp/>somewhere<sp/>that<sp/>does<sp/>not<sp/>support</highlight></codeline>
<codeline><highlight class="normal">colors,<sp/>they<sp/>see<sp/>(similar<sp/>layout<sp/>to<sp/>the<sp/>`debug`<sp/>module):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">Sun,<sp/>15<sp/>Jun<sp/>2014<sp/>05:21:37<sp/>GMT<sp/>my-cool-module<sp/>deprecated<sp/>oldfunction<sp/>at<sp/>[eval]-wrapper:6:22</highlight></codeline>
<codeline><highlight class="normal">▲<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▲<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▲<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▲<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▲</highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">timestamp<sp/>of<sp/>message<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>location<sp/>of<sp/>mycoolmod.oldfunction()<sp/>call</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deprecation<sp/>message</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>word<sp/>&quot;deprecated&quot;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Examples</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Deprecating<sp/>all<sp/>calls<sp/>to<sp/>a<sp/>function</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>will<sp/>display<sp/>a<sp/>deprecated<sp/>message<sp/>about<sp/>&quot;oldfunction&quot;<sp/>being<sp/>deprecated</highlight></codeline>
<codeline><highlight class="normal">from<sp/>&quot;my-module&quot;<sp/>on<sp/>STDERR.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>deprecate<sp/>=<sp/>require(&apos;depd&apos;)(&apos;my-cool-module&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>message<sp/>automatically<sp/>derived<sp/>from<sp/>function<sp/>name</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Object.oldfunction</highlight></codeline>
<codeline><highlight class="normal">exports.oldfunction<sp/>=<sp/>deprecate.function(function<sp/>oldfunction<sp/>()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>all<sp/>calls<sp/>to<sp/>function<sp/>are<sp/>deprecated</highlight></codeline>
<codeline><highlight class="normal">})</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>specific<sp/>message</highlight></codeline>
<codeline><highlight class="normal">exports.oldfunction<sp/>=<sp/>deprecate.function(function<sp/>()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>all<sp/>calls<sp/>to<sp/>function<sp/>are<sp/>deprecated</highlight></codeline>
<codeline><highlight class="normal">},<sp/>&apos;oldfunction&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Conditionally<sp/>deprecating<sp/>a<sp/>function<sp/>call</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>will<sp/>display<sp/>a<sp/>deprecated<sp/>message<sp/>about<sp/>&quot;weirdfunction&quot;<sp/>being<sp/>deprecated</highlight></codeline>
<codeline><highlight class="normal">from<sp/>&quot;my-module&quot;<sp/>on<sp/>STDERR<sp/>when<sp/>called<sp/>with<sp/>less<sp/>than<sp/>2<sp/>arguments.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>deprecate<sp/>=<sp/>require(&apos;depd&apos;)(&apos;my-cool-module&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">exports.weirdfunction<sp/>=<sp/>function<sp/>()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(arguments.length<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>calls<sp/>with<sp/>0<sp/>or<sp/>1<sp/>args<sp/>are<sp/>deprecated</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>deprecate(&apos;weirdfunction<sp/>args<sp/>&lt;<sp/>2&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">When<sp/>calling<sp/>`deprecate`<sp/>as<sp/>a<sp/>function,<sp/>the<sp/>warning<sp/>is<sp/>counted<sp/>per<sp/>call<sp/>site</highlight></codeline>
<codeline><highlight class="normal">within<sp/>your<sp/>own<sp/>module,<sp/>so<sp/>you<sp/>can<sp/>display<sp/>different<sp/>deprecations<sp/>depending</highlight></codeline>
<codeline><highlight class="normal">on<sp/>different<sp/>situations<sp/>and<sp/>the<sp/>users<sp/>will<sp/>still<sp/>get<sp/>all<sp/>the<sp/>warnings:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>deprecate<sp/>=<sp/>require(&apos;depd&apos;)(&apos;my-cool-module&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">exports.weirdfunction<sp/>=<sp/>function<sp/>()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(arguments.length<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>calls<sp/>with<sp/>0<sp/>or<sp/>1<sp/>args<sp/>are<sp/>deprecated</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>deprecate(&apos;weirdfunction<sp/>args<sp/>&lt;<sp/>2&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(typeof<sp/>arguments[0]<sp/>!==<sp/>&apos;string&apos;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>calls<sp/>with<sp/>non-string<sp/>first<sp/>argument<sp/>are<sp/>deprecated</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>deprecate(&apos;weirdfunction<sp/>non-string<sp/>first<sp/>arg&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Deprecating<sp/>property<sp/>access</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>will<sp/>display<sp/>a<sp/>deprecated<sp/>message<sp/>about<sp/>&quot;oldprop&quot;<sp/>being<sp/>deprecated</highlight></codeline>
<codeline><highlight class="normal">from<sp/>&quot;my-module&quot;<sp/>on<sp/>STDERR<sp/>when<sp/>accessed.<sp/>A<sp/>deprecation<sp/>will<sp/>be<sp/>displayed</highlight></codeline>
<codeline><highlight class="normal">when<sp/>setting<sp/>the<sp/>value<sp/>and<sp/>when<sp/>getting<sp/>the<sp/>value.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>deprecate<sp/>=<sp/>require(&apos;depd&apos;)(&apos;my-cool-module&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">exports.oldprop<sp/>=<sp/>&apos;something&apos;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>message<sp/>automatically<sp/>derives<sp/>from<sp/>property<sp/>name</highlight></codeline>
<codeline><highlight class="normal">deprecate.property(exports,<sp/>&apos;oldprop&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>explicit<sp/>message</highlight></codeline>
<codeline><highlight class="normal">deprecate.property(exports,<sp/>&apos;oldprop&apos;,<sp/>&apos;oldprop<sp/>&gt;=<sp/>0.10&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[MIT](LICENSE)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[appveyor-image]:<sp/>https://badgen.net/appveyor/ci/dougwilson/nodejs-depd/master?label=windows</highlight></codeline>
<codeline><highlight class="normal">[appveyor-url]:<sp/>https://ci.appveyor.com/project/dougwilson/nodejs-depd</highlight></codeline>
<codeline><highlight class="normal">[coveralls-image]:<sp/>https://badgen.net/coveralls/c/github/dougwilson/nodejs-depd/master</highlight></codeline>
<codeline><highlight class="normal">[coveralls-url]:<sp/>https://coveralls.io/r/dougwilson/nodejs-depd?branch=master</highlight></codeline>
<codeline><highlight class="normal">[node-image]:<sp/>https://badgen.net/npm/node/depd</highlight></codeline>
<codeline><highlight class="normal">[node-url]:<sp/>https://nodejs.org/en/download/</highlight></codeline>
<codeline><highlight class="normal">[npm-downloads-image]:<sp/>https://badgen.net/npm/dm/depd</highlight></codeline>
<codeline><highlight class="normal">[npm-url]:<sp/>https://npmjs.org/package/depd</highlight></codeline>
<codeline><highlight class="normal">[npm-version-image]:<sp/>https://badgen.net/npm/v/depd</highlight></codeline>
<codeline><highlight class="normal">[travis-image]:<sp/>https://badgen.net/travis/dougwilson/nodejs-depd/master?label=linux</highlight></codeline>
<codeline><highlight class="normal">[travis-url]:<sp/>https://travis-ci.org/dougwilson/nodejs-depd</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/depd/Readme.md"/>
  </compounddef>
</doxygen>
