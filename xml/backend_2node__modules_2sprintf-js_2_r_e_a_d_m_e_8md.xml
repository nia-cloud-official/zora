<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2sprintf-js_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>sprintf-js</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[![Build<sp/>Status][travisci-image]][travisci-url]<sp/>[![NPM<sp/>Version][npm-image]][npm-url]<sp/>[![Dependency<sp/>Status][dependencies-image]][dependencies-url]<sp/>[![devDependency<sp/>Status][dev-dependencies-image]][dev-dependencies-url]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[travisci-image]:<sp/>https://travis-ci.org/alexei/sprintf.js.svg?branch=master</highlight></codeline>
<codeline><highlight class="normal">[travisci-url]:<sp/>https://travis-ci.org/alexei/sprintf.js</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[npm-image]:<sp/>https://badge.fury.io/js/sprintf-js.svg</highlight></codeline>
<codeline><highlight class="normal">[npm-url]:<sp/>https://badge.fury.io/js/sprintf-js</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[dependencies-image]:<sp/>https://david-dm.org/alexei/sprintf.js.svg</highlight></codeline>
<codeline><highlight class="normal">[dependencies-url]:<sp/>https://david-dm.org/alexei/sprintf.js</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[dev-dependencies-image]:<sp/>https://david-dm.org/alexei/sprintf.js/dev-status.svg</highlight></codeline>
<codeline><highlight class="normal">[dev-dependencies-url]:<sp/>https://david-dm.org/alexei/sprintf.js#info=devDependencies</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**sprintf-js**<sp/>is<sp/>a<sp/>complete<sp/>open<sp/>source<sp/>JavaScript<sp/>`sprintf`<sp/>implementation<sp/>for<sp/>the<sp/>**browser**<sp/>and<sp/>**Node.js**.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**Note:<sp/>as<sp/>of<sp/>v1.1.1<sp/>you<sp/>might<sp/>need<sp/>some<sp/>polyfills<sp/>for<sp/>older<sp/>environments.<sp/>See<sp/>[Support](#support)<sp/>section<sp/>below.**</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Usage</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>sprintf<sp/>=<sp/>require(&apos;sprintf-js&apos;).sprintf,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vsprintf<sp/>=<sp/>require(&apos;sprintf-js&apos;).vsprintf</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(&apos;%2$s<sp/>%3$s<sp/>a<sp/>%1$s&apos;,<sp/>&apos;cracker&apos;,<sp/>&apos;Polly&apos;,<sp/>&apos;wants&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vsprintf(&apos;The<sp/>first<sp/>4<sp/>letters<sp/>of<sp/>the<sp/>english<sp/>alphabet<sp/>are:<sp/>%s,<sp/>%s,<sp/>%s<sp/>and<sp/>%s&apos;,<sp/>[&apos;a&apos;,<sp/>&apos;b&apos;,<sp/>&apos;c&apos;,<sp/>&apos;d&apos;])</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Installation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>NPM</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>npm<sp/>install<sp/>sprintf-js</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Bower</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bower<sp/>install<sp/>sprintf</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>`sprintf`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Returns<sp/>a<sp/>formatted<sp/>string:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>string<sp/>sprintf(string<sp/>format,<sp/>mixed<sp/>arg1?,<sp/>mixed<sp/>arg2?,<sp/>...)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>`vsprintf`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Same<sp/>as<sp/>`sprintf`<sp/>except<sp/>it<sp/>takes<sp/>an<sp/>array<sp/>of<sp/>arguments,<sp/>rather<sp/>than<sp/>a<sp/>variable<sp/>number<sp/>of<sp/>arguments:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>string<sp/>vsprintf(string<sp/>format,<sp/>array<sp/>arguments?)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Format<sp/>specification</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>placeholders<sp/>in<sp/>the<sp/>format<sp/>string<sp/>are<sp/>marked<sp/>by<sp/>`%`<sp/>and<sp/>are<sp/>followed<sp/>by<sp/>one<sp/>or<sp/>more<sp/>of<sp/>these<sp/>elements,<sp/>in<sp/>this<sp/>order:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>An<sp/>optional<sp/>number<sp/>followed<sp/>by<sp/>a<sp/>`$`<sp/>sign<sp/>that<sp/>selects<sp/>which<sp/>argument<sp/>index<sp/>to<sp/>use<sp/>for<sp/>the<sp/>value.<sp/>If<sp/>not<sp/>specified,<sp/>arguments<sp/>will<sp/>be<sp/>placed<sp/>in<sp/>the<sp/>same<sp/>order<sp/>as<sp/>the<sp/>placeholders<sp/>in<sp/>the<sp/>input<sp/>string.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>An<sp/>optional<sp/>`+`<sp/>sign<sp/>that<sp/>forces<sp/>to<sp/>precede<sp/>the<sp/>result<sp/>with<sp/>a<sp/>plus<sp/>or<sp/>minus<sp/>sign<sp/>on<sp/>numeric<sp/>values.<sp/>By<sp/>default,<sp/>only<sp/>the<sp/>`-`<sp/>sign<sp/>is<sp/>used<sp/>on<sp/>negative<sp/>numbers.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>An<sp/>optional<sp/>padding<sp/>specifier<sp/>that<sp/>says<sp/>what<sp/>character<sp/>to<sp/>use<sp/>for<sp/>padding<sp/>(if<sp/>specified).<sp/>Possible<sp/>values<sp/>are<sp/>`0`<sp/>or<sp/>any<sp/>other<sp/>character<sp/>preceded<sp/>by<sp/>a<sp/>`&apos;`<sp/>(single<sp/>quote).<sp/>The<sp/>default<sp/>is<sp/>to<sp/>pad<sp/>with<sp/>*spaces*.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>An<sp/>optional<sp/>`-`<sp/>sign,<sp/>that<sp/>causes<sp/>`sprintf`<sp/>to<sp/>left-align<sp/>the<sp/>result<sp/>of<sp/>this<sp/>placeholder.<sp/>The<sp/>default<sp/>is<sp/>to<sp/>right-align<sp/>the<sp/>result.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>An<sp/>optional<sp/>number,<sp/>that<sp/>says<sp/>how<sp/>many<sp/>characters<sp/>the<sp/>result<sp/>should<sp/>have.<sp/>If<sp/>the<sp/>value<sp/>to<sp/>be<sp/>returned<sp/>is<sp/>shorter<sp/>than<sp/>this<sp/>number,<sp/>the<sp/>result<sp/>will<sp/>be<sp/>padded.<sp/>When<sp/>used<sp/>with<sp/>the<sp/>`j`<sp/>(JSON)<sp/>type<sp/>specifier,<sp/>the<sp/>padding<sp/>length<sp/>specifies<sp/>the<sp/>tab<sp/>size<sp/>used<sp/>for<sp/>indentation.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>An<sp/>optional<sp/>precision<sp/>modifier,<sp/>consisting<sp/>of<sp/>a<sp/>`.`<sp/>(dot)<sp/>followed<sp/>by<sp/>a<sp/>number,<sp/>that<sp/>says<sp/>how<sp/>many<sp/>digits<sp/>should<sp/>be<sp/>displayed<sp/>for<sp/>floating<sp/>point<sp/>numbers.<sp/>When<sp/>used<sp/>with<sp/>the<sp/>`g`<sp/>type<sp/>specifier,<sp/>it<sp/>specifies<sp/>the<sp/>number<sp/>of<sp/>significant<sp/>digits.<sp/>When<sp/>used<sp/>on<sp/>a<sp/>string,<sp/>it<sp/>causes<sp/>the<sp/>result<sp/>to<sp/>be<sp/>truncated.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>A<sp/>type<sp/>specifier<sp/>that<sp/>can<sp/>be<sp/>any<sp/>of:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`%`<sp/>—<sp/>yields<sp/>a<sp/>literal<sp/>`%`<sp/>character</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`b`<sp/>—<sp/>yields<sp/>an<sp/>integer<sp/>as<sp/>a<sp/>binary<sp/>number</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`c`<sp/>—<sp/>yields<sp/>an<sp/>integer<sp/>as<sp/>the<sp/>character<sp/>with<sp/>that<sp/>ASCII<sp/>value</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`d`<sp/>or<sp/>`i`<sp/>—<sp/>yields<sp/>an<sp/>integer<sp/>as<sp/>a<sp/>signed<sp/>decimal<sp/>number</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`e`<sp/>—<sp/>yields<sp/>a<sp/>float<sp/>using<sp/>scientific<sp/>notation</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`u`<sp/>—<sp/>yields<sp/>an<sp/>integer<sp/>as<sp/>an<sp/>unsigned<sp/>decimal<sp/>number</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`f`<sp/>—<sp/>yields<sp/>a<sp/>float<sp/>as<sp/>is;<sp/>see<sp/>notes<sp/>on<sp/>precision<sp/>above</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`g`<sp/>—<sp/>yields<sp/>a<sp/>float<sp/>as<sp/>is;<sp/>see<sp/>notes<sp/>on<sp/>precision<sp/>above</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`o`<sp/>—<sp/>yields<sp/>an<sp/>integer<sp/>as<sp/>an<sp/>octal<sp/>number</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`s`<sp/>—<sp/>yields<sp/>a<sp/>string<sp/>as<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`t`<sp/>—<sp/>yields<sp/>`true`<sp/>or<sp/>`false`</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`T`<sp/>—<sp/>yields<sp/>the<sp/>type<sp/>of<sp/>the<sp/>argument&lt;sup&gt;&lt;a<sp/>href=&quot;#fn-1&quot;<sp/>name=&quot;fn-ref-1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`v`<sp/>—<sp/>yields<sp/>the<sp/>primitive<sp/>value<sp/>of<sp/>the<sp/>specified<sp/>argument</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`x`<sp/>—<sp/>yields<sp/>an<sp/>integer<sp/>as<sp/>a<sp/>hexadecimal<sp/>number<sp/>(lower-case)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`X`<sp/>—<sp/>yields<sp/>an<sp/>integer<sp/>as<sp/>a<sp/>hexadecimal<sp/>number<sp/>(upper-case)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*<sp/>`j`<sp/>—<sp/>yields<sp/>a<sp/>JavaScript<sp/>object<sp/>or<sp/>array<sp/>as<sp/>a<sp/>JSON<sp/>encoded<sp/>string</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Features</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Argument<sp/>swapping</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>also<sp/>swap<sp/>the<sp/>arguments.<sp/>That<sp/>is,<sp/>the<sp/>order<sp/>of<sp/>the<sp/>placeholders<sp/>doesn&apos;t<sp/>have<sp/>to<sp/>match<sp/>the<sp/>order<sp/>of<sp/>the<sp/>arguments.<sp/>You<sp/>can<sp/>do<sp/>that<sp/>by<sp/>simply<sp/>indicating<sp/>in<sp/>the<sp/>format<sp/>string<sp/>which<sp/>arguments<sp/>the<sp/>placeholders<sp/>refer<sp/>to:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(&apos;%2$s<sp/>%3$s<sp/>a<sp/>%1$s&apos;,<sp/>&apos;cracker&apos;,<sp/>&apos;Polly&apos;,<sp/>&apos;wants&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">And,<sp/>of<sp/>course,<sp/>you<sp/>can<sp/>repeat<sp/>the<sp/>placeholders<sp/>without<sp/>having<sp/>to<sp/>increase<sp/>the<sp/>number<sp/>of<sp/>arguments.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Named<sp/>arguments</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Format<sp/>strings<sp/>may<sp/>contain<sp/>replacement<sp/>fields<sp/>rather<sp/>than<sp/>positional<sp/>placeholders.<sp/>Instead<sp/>of<sp/>referring<sp/>to<sp/>a<sp/>certain<sp/>argument,<sp/>you<sp/>can<sp/>now<sp/>refer<sp/>to<sp/>a<sp/>certain<sp/>key<sp/>within<sp/>an<sp/>object.<sp/>Replacement<sp/>fields<sp/>are<sp/>surrounded<sp/>by<sp/>rounded<sp/>parentheses<sp/>-<sp/>`(`<sp/>and<sp/>`)`<sp/>-<sp/>and<sp/>begin<sp/>with<sp/>a<sp/>keyword<sp/>that<sp/>refers<sp/>to<sp/>a<sp/>key:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>user<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name:<sp/>&apos;Dolly&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(&apos;Hello<sp/>%(name)s&apos;,<sp/>user)<sp/>//<sp/>Hello<sp/>Dolly</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Keywords<sp/>in<sp/>replacement<sp/>fields<sp/>can<sp/>be<sp/>optionally<sp/>followed<sp/>by<sp/>any<sp/>number<sp/>of<sp/>keywords<sp/>or<sp/>indexes:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>users<sp/>=<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{name:<sp/>&apos;Dolly&apos;},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{name:<sp/>&apos;Molly&apos;},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{name:<sp/>&apos;Polly&apos;},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(&apos;Hello<sp/>%(users[0].name)s,<sp/>%(users[1].name)s<sp/>and<sp/>%(users[2].name)s&apos;,<sp/>{users:<sp/>users})<sp/>//<sp/>Hello<sp/>Dolly,<sp/>Molly<sp/>and<sp/>Polly</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Note:<sp/>mixing<sp/>positional<sp/>and<sp/>named<sp/>placeholders<sp/>is<sp/>not<sp/>(yet)<sp/>supported</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Computed<sp/>values</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>pass<sp/>in<sp/>a<sp/>function<sp/>as<sp/>a<sp/>dynamic<sp/>value<sp/>and<sp/>it<sp/>will<sp/>be<sp/>invoked<sp/>(with<sp/>no<sp/>arguments)<sp/>in<sp/>order<sp/>to<sp/>compute<sp/>the<sp/>value<sp/>on<sp/>the<sp/>fly.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(&apos;Current<sp/>date<sp/>and<sp/>time:<sp/>%s&apos;,<sp/>function()<sp/>{<sp/>return<sp/>new<sp/>Date().toString()<sp/>})</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>AngularJS</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>use<sp/>`sprintf`<sp/>and<sp/>`vsprintf`<sp/>(also<sp/>aliased<sp/>as<sp/>`fmt`<sp/>and<sp/>`vfmt`<sp/>respectively)<sp/>in<sp/>your<sp/>AngularJS<sp/>projects.<sp/>See<sp/>`demo/`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Support</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Node.js</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`sprintf-js`<sp/>runs<sp/>in<sp/>all<sp/>active<sp/>Node<sp/>versions<sp/>(4.x+).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Browser</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`sprintf-js`<sp/>should<sp/>work<sp/>in<sp/>all<sp/>modern<sp/>browsers.<sp/>As<sp/>of<sp/>v1.1.1,<sp/>you<sp/>might<sp/>need<sp/>polyfills<sp/>for<sp/>the<sp/>following:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>`String.prototype.repeat()`<sp/>(any<sp/>IE)</highlight></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>`Array.isArray()`<sp/>(IE<sp/>&lt;<sp/>9)</highlight></codeline>
<codeline><highlight class="normal"><sp/>-<sp/>`Object.create()`<sp/>(IE<sp/>&lt;<sp/>9)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">YMMV</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**sprintf-js**<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>BSD<sp/>3-Clause<sp/>License.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Notes</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&lt;small&gt;&lt;sup&gt;&lt;a<sp/>href=&quot;#fn-ref-1&quot;<sp/>name=&quot;fn-1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;<sp/>`sprintf`<sp/>doesn&apos;t<sp/>use<sp/>the<sp/>`typeof`<sp/>operator.<sp/>As<sp/>such,<sp/>the<sp/>value<sp/>`null`<sp/>is<sp/>a<sp/>`null`,<sp/>an<sp/>array<sp/>is<sp/>an<sp/>`array`<sp/>(not<sp/>an<sp/>`object`),<sp/>a<sp/>date<sp/>value<sp/>is<sp/>a<sp/>`date`<sp/>etc.&lt;/small&gt;</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/sprintf-js/README.md"/>
  </compounddef>
</doxygen>
