<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2emoji-regex_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>emoji-regex<sp/>[![Build<sp/>status](https://travis-ci.org/mathiasbynens/emoji-regex.svg?branch=master)](https://travis-ci.org/mathiasbynens/emoji-regex)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">_emoji-regex_<sp/>offers<sp/>a<sp/>regular<sp/>expression<sp/>to<sp/>match<sp/>all<sp/>emoji<sp/>symbols<sp/>(including<sp/>textual<sp/>representations<sp/>of<sp/>emoji)<sp/>as<sp/>per<sp/>the<sp/>Unicode<sp/>Standard.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>repository<sp/>contains<sp/>a<sp/>script<sp/>that<sp/>generates<sp/>this<sp/>regular<sp/>expression<sp/>based<sp/>on<sp/>[the<sp/>data<sp/>from<sp/>Unicode<sp/>v12](https://github.com/mathiasbynens/unicode-12.0.0).<sp/>Because<sp/>of<sp/>this,<sp/>the<sp/>regular<sp/>expression<sp/>can<sp/>easily<sp/>be<sp/>updated<sp/>whenever<sp/>new<sp/>emoji<sp/>are<sp/>added<sp/>to<sp/>the<sp/>Unicode<sp/>standard.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Installation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Via<sp/>[npm](https://www.npmjs.com/):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">npm<sp/>install<sp/>emoji-regex</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>[Node.js](https://nodejs.org/):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">const<sp/>emojiRegex<sp/>=<sp/>require(&apos;emoji-regex&apos;);</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Note:<sp/>because<sp/>the<sp/>regular<sp/>expression<sp/>has<sp/>the<sp/>global<sp/>flag<sp/>set,<sp/>this<sp/>module</highlight></codeline>
<codeline><highlight class="normal">//<sp/>exports<sp/>a<sp/>function<sp/>that<sp/>returns<sp/>the<sp/>regex<sp/>rather<sp/>than<sp/>exporting<sp/>the<sp/>regular</highlight></codeline>
<codeline><highlight class="normal">//<sp/>expression<sp/>itself,<sp/>to<sp/>make<sp/>it<sp/>impossible<sp/>to<sp/>(accidentally)<sp/>mutate<sp/>the</highlight></codeline>
<codeline><highlight class="normal">//<sp/>original<sp/>regular<sp/>expression.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">const<sp/>text<sp/>=<sp/>`</highlight></codeline>
<codeline><highlight class="normal">\u{231A}:<sp/>⌚<sp/>default<sp/>emoji<sp/>presentation<sp/>character<sp/>(Emoji_Presentation)</highlight></codeline>
<codeline><highlight class="normal">\u{2194}\u{FE0F}:<sp/>↔️<sp/>default<sp/>text<sp/>presentation<sp/>character<sp/>rendered<sp/>as<sp/>emoji</highlight></codeline>
<codeline><highlight class="normal">\u{1F469}:<sp/>👩<sp/>emoji<sp/>modifier<sp/>base<sp/>(Emoji_Modifier_Base)</highlight></codeline>
<codeline><highlight class="normal">\u{1F469}\u{1F3FF}:<sp/>👩🏿<sp/>emoji<sp/>modifier<sp/>base<sp/>followed<sp/>by<sp/>a<sp/>modifier</highlight></codeline>
<codeline><highlight class="normal">`;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">const<sp/>regex<sp/>=<sp/>emojiRegex();</highlight></codeline>
<codeline><highlight class="normal">let<sp/>match;</highlight></codeline>
<codeline><highlight class="normal">while<sp/>(match<sp/>=<sp/>regex.exec(text))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>emoji<sp/>=<sp/>match[0];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>console.log(`Matched<sp/>sequence<sp/>${<sp/>emoji<sp/>}<sp/>—<sp/>code<sp/>points:<sp/>${<sp/>[...emoji].length<sp/>}`);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Console<sp/>output:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">Matched<sp/>sequence<sp/>⌚<sp/>—<sp/>code<sp/>points:<sp/>1</highlight></codeline>
<codeline><highlight class="normal">Matched<sp/>sequence<sp/>⌚<sp/>—<sp/>code<sp/>points:<sp/>1</highlight></codeline>
<codeline><highlight class="normal">Matched<sp/>sequence<sp/>↔️<sp/>—<sp/>code<sp/>points:<sp/>2</highlight></codeline>
<codeline><highlight class="normal">Matched<sp/>sequence<sp/>↔️<sp/>—<sp/>code<sp/>points:<sp/>2</highlight></codeline>
<codeline><highlight class="normal">Matched<sp/>sequence<sp/>👩<sp/>—<sp/>code<sp/>points:<sp/>1</highlight></codeline>
<codeline><highlight class="normal">Matched<sp/>sequence<sp/>👩<sp/>—<sp/>code<sp/>points:<sp/>1</highlight></codeline>
<codeline><highlight class="normal">Matched<sp/>sequence<sp/>👩🏿<sp/>—<sp/>code<sp/>points:<sp/>2</highlight></codeline>
<codeline><highlight class="normal">Matched<sp/>sequence<sp/>👩🏿<sp/>—<sp/>code<sp/>points:<sp/>2</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>match<sp/>emoji<sp/>in<sp/>their<sp/>textual<sp/>representation<sp/>as<sp/>well<sp/>(i.e.<sp/>emoji<sp/>that<sp/>are<sp/>not<sp/>`Emoji_Presentation`<sp/>symbols<sp/>and<sp/>that<sp/>aren’t<sp/>forced<sp/>to<sp/>render<sp/>as<sp/>emoji<sp/>by<sp/>a<sp/>variation<sp/>selector),<sp/>`require`<sp/>the<sp/>other<sp/>regex:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">const<sp/>emojiRegex<sp/>=<sp/>require(&apos;emoji-regex/text.js&apos;);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Additionally,<sp/>in<sp/>environments<sp/>which<sp/>support<sp/>ES2015<sp/>Unicode<sp/>escapes,<sp/>you<sp/>may<sp/>`require`<sp/>ES2015-style<sp/>versions<sp/>of<sp/>the<sp/>regexes:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">const<sp/>emojiRegex<sp/>=<sp/>require(&apos;emoji-regex/es2015/index.js&apos;);</highlight></codeline>
<codeline><highlight class="normal">const<sp/>emojiRegexText<sp/>=<sp/>require(&apos;emoji-regex/es2015/text.js&apos;);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Author</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/>[![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias<sp/>&quot;Follow<sp/>@mathias<sp/>on<sp/>Twitter&quot;)<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|---|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>[Mathias<sp/>Bynens](https://mathiasbynens.be/)<sp/>|</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">_emoji-regex_<sp/>is<sp/>available<sp/>under<sp/>the<sp/>[MIT](https://mths.be/mit)<sp/>license.</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/emoji-regex/README.md"/>
  </compounddef>
</doxygen>
