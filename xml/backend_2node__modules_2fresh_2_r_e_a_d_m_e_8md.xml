<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="backend_2node__modules_2fresh_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>fresh</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Version][npm-image]][npm-url]</highlight></codeline>
<codeline><highlight class="normal">[![NPM<sp/>Downloads][downloads-image]][downloads-url]</highlight></codeline>
<codeline><highlight class="normal">[![Node.js<sp/>Version][node-version-image]][node-version-url]</highlight></codeline>
<codeline><highlight class="normal">[![Build<sp/>Status][travis-image]][travis-url]</highlight></codeline>
<codeline><highlight class="normal">[![Test<sp/>Coverage][coveralls-image]][coveralls-url]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">HTTP<sp/>response<sp/>freshness<sp/>testing</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Installation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>is<sp/>a<sp/>[Node.js](https://nodejs.org/en/)<sp/>module<sp/>available<sp/>through<sp/>the</highlight></codeline>
<codeline><highlight class="normal">[npm<sp/>registry](https://www.npmjs.com/).<sp/>Installation<sp/>is<sp/>done<sp/>using<sp/>the</highlight></codeline>
<codeline><highlight class="normal">[`npm<sp/>install`<sp/>command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">$<sp/>npm<sp/>install<sp/>fresh</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>API</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&lt;!--<sp/>eslint-disable<sp/>no-unused-vars<sp/>--&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>fresh<sp/>=<sp/>require(&apos;fresh&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>fresh(reqHeaders,<sp/>resHeaders)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Check<sp/>freshness<sp/>of<sp/>the<sp/>response<sp/>using<sp/>request<sp/>and<sp/>response<sp/>headers.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">When<sp/>the<sp/>response<sp/>is<sp/>still<sp/>&quot;fresh&quot;<sp/>in<sp/>the<sp/>client&apos;s<sp/>cache<sp/>`true`<sp/>is</highlight></codeline>
<codeline><highlight class="normal">returned,<sp/>otherwise<sp/>`false`<sp/>is<sp/>returned<sp/>to<sp/>indicate<sp/>that<sp/>the<sp/>client</highlight></codeline>
<codeline><highlight class="normal">cache<sp/>is<sp/>now<sp/>stale<sp/>and<sp/>the<sp/>full<sp/>response<sp/>should<sp/>be<sp/>sent.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">When<sp/>a<sp/>client<sp/>sends<sp/>the<sp/>`Cache-Control:<sp/>no-cache`<sp/>request<sp/>header<sp/>to</highlight></codeline>
<codeline><highlight class="normal">indicate<sp/>an<sp/>end-to-end<sp/>reload<sp/>request,<sp/>this<sp/>module<sp/>will<sp/>return<sp/>`false`</highlight></codeline>
<codeline><highlight class="normal">to<sp/>make<sp/>handling<sp/>these<sp/>requests<sp/>transparent.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Known<sp/>Issues</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>module<sp/>is<sp/>designed<sp/>to<sp/>only<sp/>follow<sp/>the<sp/>HTTP<sp/>specifications,<sp/>not</highlight></codeline>
<codeline><highlight class="normal">to<sp/>work-around<sp/>all<sp/>kinda<sp/>of<sp/>client<sp/>bugs<sp/>(especially<sp/>since<sp/>this<sp/>module</highlight></codeline>
<codeline><highlight class="normal">typically<sp/>does<sp/>not<sp/>recieve<sp/>enough<sp/>information<sp/>to<sp/>understand<sp/>what<sp/>the</highlight></codeline>
<codeline><highlight class="normal">client<sp/>actually<sp/>is).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">There<sp/>is<sp/>a<sp/>known<sp/>issue<sp/>that<sp/>in<sp/>certain<sp/>versions<sp/>of<sp/>Safari,<sp/>Safari</highlight></codeline>
<codeline><highlight class="normal">will<sp/>incorrectly<sp/>make<sp/>a<sp/>request<sp/>that<sp/>allows<sp/>this<sp/>module<sp/>to<sp/>validate</highlight></codeline>
<codeline><highlight class="normal">freshness<sp/>of<sp/>the<sp/>resource<sp/>even<sp/>when<sp/>Safari<sp/>does<sp/>not<sp/>have<sp/>a</highlight></codeline>
<codeline><highlight class="normal">representation<sp/>of<sp/>the<sp/>resource<sp/>in<sp/>the<sp/>cache.<sp/>The<sp/>module</highlight></codeline>
<codeline><highlight class="normal">[jumanji](https://www.npmjs.com/package/jumanji)<sp/>can<sp/>be<sp/>used<sp/>in</highlight></codeline>
<codeline><highlight class="normal">an<sp/>Express<sp/>application<sp/>to<sp/>work-around<sp/>this<sp/>issue<sp/>and<sp/>also<sp/>provides</highlight></codeline>
<codeline><highlight class="normal">links<sp/>to<sp/>further<sp/>reading<sp/>on<sp/>this<sp/>Safari<sp/>bug.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Example</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>API<sp/>usage</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&lt;!--<sp/>eslint-disable<sp/>no-redeclare,<sp/>no-undef<sp/>--&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>reqHeaders<sp/>=<sp/>{<sp/>&apos;if-none-match&apos;:<sp/>&apos;&quot;foo&quot;&apos;<sp/>}</highlight></codeline>
<codeline><highlight class="normal">var<sp/>resHeaders<sp/>=<sp/>{<sp/>&apos;etag&apos;:<sp/>&apos;&quot;bar&quot;&apos;<sp/>}</highlight></codeline>
<codeline><highlight class="normal">fresh(reqHeaders,<sp/>resHeaders)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>=&gt;<sp/>false</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">var<sp/>reqHeaders<sp/>=<sp/>{<sp/>&apos;if-none-match&apos;:<sp/>&apos;&quot;foo&quot;&apos;<sp/>}</highlight></codeline>
<codeline><highlight class="normal">var<sp/>resHeaders<sp/>=<sp/>{<sp/>&apos;etag&apos;:<sp/>&apos;&quot;foo&quot;&apos;<sp/>}</highlight></codeline>
<codeline><highlight class="normal">fresh(reqHeaders,<sp/>resHeaders)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>=&gt;<sp/>true</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Using<sp/>with<sp/>Node.js<sp/>http<sp/>server</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```js</highlight></codeline>
<codeline><highlight class="normal">var<sp/>fresh<sp/>=<sp/>require(&apos;fresh&apos;)</highlight></codeline>
<codeline><highlight class="normal">var<sp/>http<sp/>=<sp/>require(&apos;http&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">var<sp/>server<sp/>=<sp/>http.createServer(function<sp/>(req,<sp/>res)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>perform<sp/>server<sp/>logic</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>...<sp/>including<sp/>adding<sp/>ETag<sp/>/<sp/>Last-Modified<sp/>response<sp/>headers</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(isFresh(req,<sp/>res))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>client<sp/>has<sp/>a<sp/>fresh<sp/>copy<sp/>of<sp/>resource</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>res.statusCode<sp/>=<sp/>304</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>res.end()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>send<sp/>the<sp/>resource</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.statusCode<sp/>=<sp/>200</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res.end(&apos;hello,<sp/>world!&apos;)</highlight></codeline>
<codeline><highlight class="normal">})</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">function<sp/>isFresh<sp/>(req,<sp/>res)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>fresh(req.headers,<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&apos;etag&apos;:<sp/>res.getHeader(&apos;ETag&apos;),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&apos;last-modified&apos;:<sp/>res.getHeader(&apos;Last-Modified&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>})</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">server.listen(3000)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[MIT](LICENSE)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[npm-image]:<sp/>https://img.shields.io/npm/v/fresh.svg</highlight></codeline>
<codeline><highlight class="normal">[npm-url]:<sp/>https://npmjs.org/package/fresh</highlight></codeline>
<codeline><highlight class="normal">[node-version-image]:<sp/>https://img.shields.io/node/v/fresh.svg</highlight></codeline>
<codeline><highlight class="normal">[node-version-url]:<sp/>https://nodejs.org/en/</highlight></codeline>
<codeline><highlight class="normal">[travis-image]:<sp/>https://img.shields.io/travis/jshttp/fresh/master.svg</highlight></codeline>
<codeline><highlight class="normal">[travis-url]:<sp/>https://travis-ci.org/jshttp/fresh</highlight></codeline>
<codeline><highlight class="normal">[coveralls-image]:<sp/>https://img.shields.io/coveralls/jshttp/fresh/master.svg</highlight></codeline>
<codeline><highlight class="normal">[coveralls-url]:<sp/>https://coveralls.io/r/jshttp/fresh?branch=master</highlight></codeline>
<codeline><highlight class="normal">[downloads-image]:<sp/>https://img.shields.io/npm/dm/fresh.svg</highlight></codeline>
<codeline><highlight class="normal">[downloads-url]:<sp/>https://npmjs.org/package/fresh</highlight></codeline>
    </programlisting>
    <location file="backend/node_modules/fresh/README.md"/>
  </compounddef>
</doxygen>
